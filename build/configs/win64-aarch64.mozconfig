VSPATH=/builds/worker/fetches/vs2017_15.9.29
export LLVM_CONFIG="${MOZ_FETCHES_DIR}/clang/bin/llvm-config"

. $topsrcdir/build/mozconfig.win-common

WINCHECKSEC="${MOZ_FETCHES_DIR}/winchecksec/winchecksec"

ac_add_options --target=aarch64-windows-mingw32
ac_add_options --enable-application=browser

# build/mozconfig.common
ac_add_options --enable-crashreporter

ac_add_options --enable-js-shell

# skip . "$topsrcdir/build/mozconfig.automation"
#. "$topsrcdir/build/mozconfig.rust"
RUSTC="${MOZ_FETCHES_DIR}/rustc/bin/rustc"
CARGO="${MOZ_FETCHES_DIR}/rustc/bin/cargo"
RUSTDOC="${MOZ_FETCHES_DIR}/rustc/bin/rustdoc"
RUSTFMT="${MOZ_FETCHES_DIR}/rustc/bin/rustfmt"
CBINDGEN="${MOZ_FETCHES_DIR}/cbindgen/cbindgen"

ac_add_options --enable-rust-simd
# end mozconfig.rust
# skip . "$topsrcdir/build/mozconfig.cache"
# end build/mozconfig.common

. $topsrcdir/build/win64/mozconfig.vs-latest

#. $topsrcdir/browser/config/mozconfigs/win64/common-opt

if test `uname -s` = Linux; then

# Configure expects executables for check_prog, so set the relevant files
# as executable on the first evaluation of the mozconfig where they exist.
if [ -d "${VSPATH}" -a ! -x "${VSPATH}/VC/bin/Hostx64/x64/cl.exe" ]; then
    find "${VSPATH}" -type f -name \*.exe -exec chmod +x {} \;
fi
export MAKENSISU="${MOZ_FETCHES_DIR}/nsis-3.01/makensis.exe"
if [ -d "${MAKENSISU%/*}" -a ! -x "${MAKENSISU}" ]; then
    chmod +x "${MAKENSISU}"
fi
export MAKECAB="${TOOLTOOL_DIR}/makecab.exe"
if [ -f "${MAKECAB}" ]; then
    chmod +x "${MAKECAB}"
fi
export UPX="${MOZ_FETCHES_DIR}/upx-3.95-win64/upx.exe"
if [ -f "${UPX}" ]; then
    chmod +x "${UPX}"
fi
export WINE=${MOZ_FETCHES_DIR}/wine/bin/wine64
mk_add_options "export PATH=${VSPATH}/VC/bin/Hostx64/arm64:${MOZ_FETCHES_DIR}/nsis-3.01:${PATH}"
mk_add_options "export WINEPATH=${VSPATH}/VC/bin/Hostx64/x64"

unset VC_PATH

fi

export WINCHECKSEC="${MOZ_FETCHES_DIR}/winchecksec/winchecksec"
if [ ! -f "${WINCHECKSEC}" ]; then
    export WINCHECKSEC="${MOZ_FETCHES_DIR}/winchecksec/winchecksec.exe"
    if [ ! -f "${WINCHECKSEC}" ]; then
        unset WINCHECKSEC
    fi
fi

export PDBSTR="${MOZ_FETCHES_DIR}/pdbstr/pdbstr.exe"
if [ -f "${PDBSTR}" ]; then
    chmod +x "${PDBSTR}"
else
    unset PDBSTR
fi

unset VC_PATH
DUMP_SYMS=/builds/worker/fetches/dump_syms/dump_syms

ac_add_options --enable-jemalloc

LINKER=lld-link
MOZ_PACKAGE_JSSHELL=1

export CC=clang-cl
export CXX=clang-cl
export ENABLE_CLANG_PLUGIN=1

# disable tests for this build
ac_add_options --disable-tests

if [ -n "$PGO_PROFILE_GENERATE" ]; then
    ac_add_options --enable-profile-generate=cross
fi

# Create the stub installer
export MOZ_STUB_INSTALLER=1
