From: Jenkins <jenkins@magrathea>
Date: Fri, 10 Feb 2023 23:24:17 +0100
Subject: Force lld detection for cross compile builds

This should be remove with Firefox 110
---
 build/clang-plugin/Makefile.in          |  2 +-
 build/moz.configure/toolchain.configure | 22 ++++++++++++++++------
 2 files changed, 17 insertions(+), 7 deletions(-)

diff --git a/build/clang-plugin/Makefile.in b/build/clang-plugin/Makefile.in
index 57c0cd0806..b4c9d40de0 100644
--- a/build/clang-plugin/Makefile.in
+++ b/build/clang-plugin/Makefile.in
@@ -4,7 +4,7 @@
 
 include $(topsrcdir)/config/config.mk
 
-HOST_LDFLAGS := $(LLVM_LDFLAGS) $(CLANG_LDFLAGS)
+HOST_LDFLAGS += $(LLVM_LDFLAGS) $(CLANG_LDFLAGS)
 
 ifeq ($(HOST_OS_ARCH),WINNT)
 # clang-plugin.dll needs to be deterministic for sccache hashes
diff --git a/build/moz.configure/toolchain.configure b/build/moz.configure/toolchain.configure
index 7a31090073..fbf007635f 100755
--- a/build/moz.configure/toolchain.configure
+++ b/build/moz.configure/toolchain.configure
@@ -1492,10 +1492,17 @@ set_config("CXX_IS_ICECREAM", cxx_is_icecream)
 #   lld is not used by default on Linux and Android because it introduces layout changes
 #   that prevent elfhack from working. See e.g.
 #   https://bugzilla.mozilla.org/show_bug.cgi?id=1563654#c2.
-@depends(target)
-def is_linker_option_enabled(target):
-    if target.kernel not in ("WINNT", "SunOS"):
-        return True
+@template
+def is_not_winnt_or_sunos(host_or_target):
+    @depends(host_or_target)
+    def is_not_winnt_or_sunos(host_or_target):
+        if host_or_target.kernel not in ("WINNT", "SunOS"):
+            return True
+
+    return is_not_winnt_or_sunos
+
+
+is_linker_option_enabled = is_not_winnt_or_sunos(target)
 
 
 @deprecated_option("--enable-gold", env="MOZ_FORCE_GOLD", when=is_linker_option_enabled)
@@ -1556,7 +1563,7 @@ def select_linker_tmpl(host_or_target):
             developer_options,
             dependable(None),
             host,
-            when=is_linker_option_enabled,
+            when=is_not_winnt_or_sunos(host_or_target),
         )
         host_or_target_str = "host"
 
@@ -1658,7 +1665,10 @@ def select_linker_tmpl(host_or_target):
             result = try_linker("lld")
         elif (
             linker is None
-            and developer_options
+            and (
+                developer_options
+                or (host_or_target_str == "host" and c_compiler.type == "clang")
+            )
             and (result is None or result.KIND in ("bfd", "gold"))
         ):
             # try and use lld if available.
-- 
2.37.1 (Apple Git-137.1)

