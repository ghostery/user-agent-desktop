// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: csd.proto

#ifndef PROTOBUF_csd_2eproto__INCLUDED
#define PROTOBUF_csd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
namespace safe_browsing {
class ChromeUserPopulation;
class ChromeUserPopulationDefaultTypeInternal;
extern ChromeUserPopulationDefaultTypeInternal _ChromeUserPopulation_default_instance_;
class ClientDownloadReport;
class ClientDownloadReportDefaultTypeInternal;
extern ClientDownloadReportDefaultTypeInternal _ClientDownloadReport_default_instance_;
class ClientDownloadReport_UserInformation;
class ClientDownloadReport_UserInformationDefaultTypeInternal;
extern ClientDownloadReport_UserInformationDefaultTypeInternal _ClientDownloadReport_UserInformation_default_instance_;
class ClientDownloadRequest;
class ClientDownloadRequestDefaultTypeInternal;
extern ClientDownloadRequestDefaultTypeInternal _ClientDownloadRequest_default_instance_;
class ClientDownloadRequest_ArchivedBinary;
class ClientDownloadRequest_ArchivedBinaryDefaultTypeInternal;
extern ClientDownloadRequest_ArchivedBinaryDefaultTypeInternal _ClientDownloadRequest_ArchivedBinary_default_instance_;
class ClientDownloadRequest_CertificateChain;
class ClientDownloadRequest_CertificateChainDefaultTypeInternal;
extern ClientDownloadRequest_CertificateChainDefaultTypeInternal _ClientDownloadRequest_CertificateChain_default_instance_;
class ClientDownloadRequest_CertificateChain_Element;
class ClientDownloadRequest_CertificateChain_ElementDefaultTypeInternal;
extern ClientDownloadRequest_CertificateChain_ElementDefaultTypeInternal _ClientDownloadRequest_CertificateChain_Element_default_instance_;
class ClientDownloadRequest_Digests;
class ClientDownloadRequest_DigestsDefaultTypeInternal;
extern ClientDownloadRequest_DigestsDefaultTypeInternal _ClientDownloadRequest_Digests_default_instance_;
class ClientDownloadRequest_ExtendedAttr;
class ClientDownloadRequest_ExtendedAttrDefaultTypeInternal;
extern ClientDownloadRequest_ExtendedAttrDefaultTypeInternal _ClientDownloadRequest_ExtendedAttr_default_instance_;
class ClientDownloadRequest_ImageHeaders;
class ClientDownloadRequest_ImageHeadersDefaultTypeInternal;
extern ClientDownloadRequest_ImageHeadersDefaultTypeInternal _ClientDownloadRequest_ImageHeaders_default_instance_;
class ClientDownloadRequest_MachOHeaders;
class ClientDownloadRequest_MachOHeadersDefaultTypeInternal;
extern ClientDownloadRequest_MachOHeadersDefaultTypeInternal _ClientDownloadRequest_MachOHeaders_default_instance_;
class ClientDownloadRequest_MachOHeaders_LoadCommand;
class ClientDownloadRequest_MachOHeaders_LoadCommandDefaultTypeInternal;
extern ClientDownloadRequest_MachOHeaders_LoadCommandDefaultTypeInternal _ClientDownloadRequest_MachOHeaders_LoadCommand_default_instance_;
class ClientDownloadRequest_PEImageHeaders;
class ClientDownloadRequest_PEImageHeadersDefaultTypeInternal;
extern ClientDownloadRequest_PEImageHeadersDefaultTypeInternal _ClientDownloadRequest_PEImageHeaders_default_instance_;
class ClientDownloadRequest_PEImageHeaders_DebugData;
class ClientDownloadRequest_PEImageHeaders_DebugDataDefaultTypeInternal;
extern ClientDownloadRequest_PEImageHeaders_DebugDataDefaultTypeInternal _ClientDownloadRequest_PEImageHeaders_DebugData_default_instance_;
class ClientDownloadRequest_Resource;
class ClientDownloadRequest_ResourceDefaultTypeInternal;
extern ClientDownloadRequest_ResourceDefaultTypeInternal _ClientDownloadRequest_Resource_default_instance_;
class ClientDownloadRequest_SignatureInfo;
class ClientDownloadRequest_SignatureInfoDefaultTypeInternal;
extern ClientDownloadRequest_SignatureInfoDefaultTypeInternal _ClientDownloadRequest_SignatureInfo_default_instance_;
class ClientDownloadResponse;
class ClientDownloadResponseDefaultTypeInternal;
extern ClientDownloadResponseDefaultTypeInternal _ClientDownloadResponse_default_instance_;
class ClientDownloadResponse_MoreInfo;
class ClientDownloadResponse_MoreInfoDefaultTypeInternal;
extern ClientDownloadResponse_MoreInfoDefaultTypeInternal _ClientDownloadResponse_MoreInfo_default_instance_;
class ClientIncidentReport;
class ClientIncidentReportDefaultTypeInternal;
extern ClientIncidentReportDefaultTypeInternal _ClientIncidentReport_default_instance_;
class ClientIncidentReport_DownloadDetails;
class ClientIncidentReport_DownloadDetailsDefaultTypeInternal;
extern ClientIncidentReport_DownloadDetailsDefaultTypeInternal _ClientIncidentReport_DownloadDetails_default_instance_;
class ClientIncidentReport_EnvironmentData;
class ClientIncidentReport_EnvironmentDataDefaultTypeInternal;
extern ClientIncidentReport_EnvironmentDataDefaultTypeInternal _ClientIncidentReport_EnvironmentData_default_instance_;
class ClientIncidentReport_EnvironmentData_Machine;
class ClientIncidentReport_EnvironmentData_MachineDefaultTypeInternal;
extern ClientIncidentReport_EnvironmentData_MachineDefaultTypeInternal _ClientIncidentReport_EnvironmentData_Machine_default_instance_;
class ClientIncidentReport_EnvironmentData_OS;
class ClientIncidentReport_EnvironmentData_OSDefaultTypeInternal;
extern ClientIncidentReport_EnvironmentData_OSDefaultTypeInternal _ClientIncidentReport_EnvironmentData_OS_default_instance_;
class ClientIncidentReport_EnvironmentData_OS_RegistryKey;
class ClientIncidentReport_EnvironmentData_OS_RegistryKeyDefaultTypeInternal;
extern ClientIncidentReport_EnvironmentData_OS_RegistryKeyDefaultTypeInternal _ClientIncidentReport_EnvironmentData_OS_RegistryKey_default_instance_;
class ClientIncidentReport_EnvironmentData_OS_RegistryValue;
class ClientIncidentReport_EnvironmentData_OS_RegistryValueDefaultTypeInternal;
extern ClientIncidentReport_EnvironmentData_OS_RegistryValueDefaultTypeInternal _ClientIncidentReport_EnvironmentData_OS_RegistryValue_default_instance_;
class ClientIncidentReport_EnvironmentData_Process;
class ClientIncidentReport_EnvironmentData_ProcessDefaultTypeInternal;
extern ClientIncidentReport_EnvironmentData_ProcessDefaultTypeInternal _ClientIncidentReport_EnvironmentData_Process_default_instance_;
class ClientIncidentReport_EnvironmentData_Process_Dll;
class ClientIncidentReport_EnvironmentData_Process_DllDefaultTypeInternal;
extern ClientIncidentReport_EnvironmentData_Process_DllDefaultTypeInternal _ClientIncidentReport_EnvironmentData_Process_Dll_default_instance_;
class ClientIncidentReport_EnvironmentData_Process_ModuleState;
class ClientIncidentReport_EnvironmentData_Process_ModuleStateDefaultTypeInternal;
extern ClientIncidentReport_EnvironmentData_Process_ModuleStateDefaultTypeInternal _ClientIncidentReport_EnvironmentData_Process_ModuleState_default_instance_;
class ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification;
class ClientIncidentReport_EnvironmentData_Process_ModuleState_ModificationDefaultTypeInternal;
extern ClientIncidentReport_EnvironmentData_Process_ModuleState_ModificationDefaultTypeInternal _ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification_default_instance_;
class ClientIncidentReport_EnvironmentData_Process_NetworkProvider;
class ClientIncidentReport_EnvironmentData_Process_NetworkProviderDefaultTypeInternal;
extern ClientIncidentReport_EnvironmentData_Process_NetworkProviderDefaultTypeInternal _ClientIncidentReport_EnvironmentData_Process_NetworkProvider_default_instance_;
class ClientIncidentReport_EnvironmentData_Process_Patch;
class ClientIncidentReport_EnvironmentData_Process_PatchDefaultTypeInternal;
extern ClientIncidentReport_EnvironmentData_Process_PatchDefaultTypeInternal _ClientIncidentReport_EnvironmentData_Process_Patch_default_instance_;
class ClientIncidentReport_ExtensionData;
class ClientIncidentReport_ExtensionDataDefaultTypeInternal;
extern ClientIncidentReport_ExtensionDataDefaultTypeInternal _ClientIncidentReport_ExtensionData_default_instance_;
class ClientIncidentReport_ExtensionData_ExtensionInfo;
class ClientIncidentReport_ExtensionData_ExtensionInfoDefaultTypeInternal;
extern ClientIncidentReport_ExtensionData_ExtensionInfoDefaultTypeInternal _ClientIncidentReport_ExtensionData_ExtensionInfo_default_instance_;
class ClientIncidentReport_IncidentData;
class ClientIncidentReport_IncidentDataDefaultTypeInternal;
extern ClientIncidentReport_IncidentDataDefaultTypeInternal _ClientIncidentReport_IncidentData_default_instance_;
class ClientIncidentReport_IncidentData_BinaryIntegrityIncident;
class ClientIncidentReport_IncidentData_BinaryIntegrityIncidentDefaultTypeInternal;
extern ClientIncidentReport_IncidentData_BinaryIntegrityIncidentDefaultTypeInternal _ClientIncidentReport_IncidentData_BinaryIntegrityIncident_default_instance_;
class ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile;
class ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFileDefaultTypeInternal;
extern ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFileDefaultTypeInternal _ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile_default_instance_;
class ClientIncidentReport_IncidentData_ResourceRequestIncident;
class ClientIncidentReport_IncidentData_ResourceRequestIncidentDefaultTypeInternal;
extern ClientIncidentReport_IncidentData_ResourceRequestIncidentDefaultTypeInternal _ClientIncidentReport_IncidentData_ResourceRequestIncident_default_instance_;
class ClientIncidentReport_IncidentData_TrackedPreferenceIncident;
class ClientIncidentReport_IncidentData_TrackedPreferenceIncidentDefaultTypeInternal;
extern ClientIncidentReport_IncidentData_TrackedPreferenceIncidentDefaultTypeInternal _ClientIncidentReport_IncidentData_TrackedPreferenceIncident_default_instance_;
class ClientIncidentReport_NonBinaryDownloadDetails;
class ClientIncidentReport_NonBinaryDownloadDetailsDefaultTypeInternal;
extern ClientIncidentReport_NonBinaryDownloadDetailsDefaultTypeInternal _ClientIncidentReport_NonBinaryDownloadDetails_default_instance_;
class ClientIncidentResponse;
class ClientIncidentResponseDefaultTypeInternal;
extern ClientIncidentResponseDefaultTypeInternal _ClientIncidentResponse_default_instance_;
class ClientIncidentResponse_EnvironmentRequest;
class ClientIncidentResponse_EnvironmentRequestDefaultTypeInternal;
extern ClientIncidentResponse_EnvironmentRequestDefaultTypeInternal _ClientIncidentResponse_EnvironmentRequest_default_instance_;
class ClientMalwareRequest;
class ClientMalwareRequestDefaultTypeInternal;
extern ClientMalwareRequestDefaultTypeInternal _ClientMalwareRequest_default_instance_;
class ClientMalwareRequest_UrlInfo;
class ClientMalwareRequest_UrlInfoDefaultTypeInternal;
extern ClientMalwareRequest_UrlInfoDefaultTypeInternal _ClientMalwareRequest_UrlInfo_default_instance_;
class ClientMalwareResponse;
class ClientMalwareResponseDefaultTypeInternal;
extern ClientMalwareResponseDefaultTypeInternal _ClientMalwareResponse_default_instance_;
class ClientPhishingRequest;
class ClientPhishingRequestDefaultTypeInternal;
extern ClientPhishingRequestDefaultTypeInternal _ClientPhishingRequest_default_instance_;
class ClientPhishingRequest_Feature;
class ClientPhishingRequest_FeatureDefaultTypeInternal;
extern ClientPhishingRequest_FeatureDefaultTypeInternal _ClientPhishingRequest_Feature_default_instance_;
class ClientPhishingResponse;
class ClientPhishingResponseDefaultTypeInternal;
extern ClientPhishingResponseDefaultTypeInternal _ClientPhishingResponse_default_instance_;
class ClientSafeBrowsingReportRequest;
class ClientSafeBrowsingReportRequestDefaultTypeInternal;
extern ClientSafeBrowsingReportRequestDefaultTypeInternal _ClientSafeBrowsingReportRequest_default_instance_;
class ClientSafeBrowsingReportRequest_HTTPHeader;
class ClientSafeBrowsingReportRequest_HTTPHeaderDefaultTypeInternal;
extern ClientSafeBrowsingReportRequest_HTTPHeaderDefaultTypeInternal _ClientSafeBrowsingReportRequest_HTTPHeader_default_instance_;
class ClientSafeBrowsingReportRequest_HTTPRequest;
class ClientSafeBrowsingReportRequest_HTTPRequestDefaultTypeInternal;
extern ClientSafeBrowsingReportRequest_HTTPRequestDefaultTypeInternal _ClientSafeBrowsingReportRequest_HTTPRequest_default_instance_;
class ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine;
class ClientSafeBrowsingReportRequest_HTTPRequest_FirstLineDefaultTypeInternal;
extern ClientSafeBrowsingReportRequest_HTTPRequest_FirstLineDefaultTypeInternal _ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine_default_instance_;
class ClientSafeBrowsingReportRequest_HTTPResponse;
class ClientSafeBrowsingReportRequest_HTTPResponseDefaultTypeInternal;
extern ClientSafeBrowsingReportRequest_HTTPResponseDefaultTypeInternal _ClientSafeBrowsingReportRequest_HTTPResponse_default_instance_;
class ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine;
class ClientSafeBrowsingReportRequest_HTTPResponse_FirstLineDefaultTypeInternal;
extern ClientSafeBrowsingReportRequest_HTTPResponse_FirstLineDefaultTypeInternal _ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine_default_instance_;
class ClientSafeBrowsingReportRequest_Resource;
class ClientSafeBrowsingReportRequest_ResourceDefaultTypeInternal;
extern ClientSafeBrowsingReportRequest_ResourceDefaultTypeInternal _ClientSafeBrowsingReportRequest_Resource_default_instance_;
class ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties;
class ClientSafeBrowsingReportRequest_SafeBrowsingClientPropertiesDefaultTypeInternal;
extern ClientSafeBrowsingReportRequest_SafeBrowsingClientPropertiesDefaultTypeInternal _ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties_default_instance_;
class ClientUploadResponse;
class ClientUploadResponseDefaultTypeInternal;
extern ClientUploadResponseDefaultTypeInternal _ClientUploadResponse_default_instance_;
class DownloadMetadata;
class DownloadMetadataDefaultTypeInternal;
extern DownloadMetadataDefaultTypeInternal _DownloadMetadata_default_instance_;
class HTMLElement;
class HTMLElementDefaultTypeInternal;
extern HTMLElementDefaultTypeInternal _HTMLElement_default_instance_;
class HTMLElement_Attribute;
class HTMLElement_AttributeDefaultTypeInternal;
extern HTMLElement_AttributeDefaultTypeInternal _HTMLElement_Attribute_default_instance_;
class ImageData;
class ImageDataDefaultTypeInternal;
extern ImageDataDefaultTypeInternal _ImageData_default_instance_;
class ImageData_Dimensions;
class ImageData_DimensionsDefaultTypeInternal;
extern ImageData_DimensionsDefaultTypeInternal _ImageData_Dimensions_default_instance_;
class LoginReputationClientRequest;
class LoginReputationClientRequestDefaultTypeInternal;
extern LoginReputationClientRequestDefaultTypeInternal _LoginReputationClientRequest_default_instance_;
class LoginReputationClientRequest_Frame;
class LoginReputationClientRequest_FrameDefaultTypeInternal;
extern LoginReputationClientRequest_FrameDefaultTypeInternal _LoginReputationClientRequest_Frame_default_instance_;
class LoginReputationClientRequest_Frame_Form;
class LoginReputationClientRequest_Frame_FormDefaultTypeInternal;
extern LoginReputationClientRequest_Frame_FormDefaultTypeInternal _LoginReputationClientRequest_Frame_Form_default_instance_;
class LoginReputationClientRequest_PasswordReuseEvent;
class LoginReputationClientRequest_PasswordReuseEventDefaultTypeInternal;
extern LoginReputationClientRequest_PasswordReuseEventDefaultTypeInternal _LoginReputationClientRequest_PasswordReuseEvent_default_instance_;
class LoginReputationClientResponse;
class LoginReputationClientResponseDefaultTypeInternal;
extern LoginReputationClientResponseDefaultTypeInternal _LoginReputationClientResponse_default_instance_;
class NotificationImageReportRequest;
class NotificationImageReportRequestDefaultTypeInternal;
extern NotificationImageReportRequestDefaultTypeInternal _NotificationImageReportRequest_default_instance_;
class ReferrerChainEntry;
class ReferrerChainEntryDefaultTypeInternal;
extern ReferrerChainEntryDefaultTypeInternal _ReferrerChainEntry_default_instance_;
class ReferrerChainEntry_ServerRedirect;
class ReferrerChainEntry_ServerRedirectDefaultTypeInternal;
extern ReferrerChainEntry_ServerRedirectDefaultTypeInternal _ReferrerChainEntry_ServerRedirect_default_instance_;
}  // namespace safe_browsing

namespace safe_browsing {

namespace protobuf_csd_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_csd_2eproto

enum ChromeUserPopulation_UserPopulation {
  ChromeUserPopulation_UserPopulation_UNKNOWN_USER_POPULATION = 0,
  ChromeUserPopulation_UserPopulation_SAFE_BROWSING = 1,
  ChromeUserPopulation_UserPopulation_EXTENDED_REPORTING = 2
};
bool ChromeUserPopulation_UserPopulation_IsValid(int value);
const ChromeUserPopulation_UserPopulation ChromeUserPopulation_UserPopulation_UserPopulation_MIN = ChromeUserPopulation_UserPopulation_UNKNOWN_USER_POPULATION;
const ChromeUserPopulation_UserPopulation ChromeUserPopulation_UserPopulation_UserPopulation_MAX = ChromeUserPopulation_UserPopulation_EXTENDED_REPORTING;
const int ChromeUserPopulation_UserPopulation_UserPopulation_ARRAYSIZE = ChromeUserPopulation_UserPopulation_UserPopulation_MAX + 1;

enum LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType {
  LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_NOT_SIGNED_IN = 0,
  LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_GMAIL = 1,
  LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_GSUITE = 2
};
bool LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_IsValid(int value);
const LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_SyncAccountType_MIN = LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_NOT_SIGNED_IN;
const LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_SyncAccountType_MAX = LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_GSUITE;
const int LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_SyncAccountType_ARRAYSIZE = LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_SyncAccountType_MAX + 1;

enum LoginReputationClientRequest_TriggerType {
  LoginReputationClientRequest_TriggerType_TRIGGER_TYPE_UNSPECIFIED = 0,
  LoginReputationClientRequest_TriggerType_UNFAMILIAR_LOGIN_PAGE = 1,
  LoginReputationClientRequest_TriggerType_PASSWORD_REUSE_EVENT = 2
};
bool LoginReputationClientRequest_TriggerType_IsValid(int value);
const LoginReputationClientRequest_TriggerType LoginReputationClientRequest_TriggerType_TriggerType_MIN = LoginReputationClientRequest_TriggerType_TRIGGER_TYPE_UNSPECIFIED;
const LoginReputationClientRequest_TriggerType LoginReputationClientRequest_TriggerType_TriggerType_MAX = LoginReputationClientRequest_TriggerType_PASSWORD_REUSE_EVENT;
const int LoginReputationClientRequest_TriggerType_TriggerType_ARRAYSIZE = LoginReputationClientRequest_TriggerType_TriggerType_MAX + 1;

enum LoginReputationClientResponse_VerdictType {
  LoginReputationClientResponse_VerdictType_VERDICT_TYPE_UNSPECIFIED = 0,
  LoginReputationClientResponse_VerdictType_SAFE = 1,
  LoginReputationClientResponse_VerdictType_LOW_REPUTATION = 2,
  LoginReputationClientResponse_VerdictType_PHISHING = 3
};
bool LoginReputationClientResponse_VerdictType_IsValid(int value);
const LoginReputationClientResponse_VerdictType LoginReputationClientResponse_VerdictType_VerdictType_MIN = LoginReputationClientResponse_VerdictType_VERDICT_TYPE_UNSPECIFIED;
const LoginReputationClientResponse_VerdictType LoginReputationClientResponse_VerdictType_VerdictType_MAX = LoginReputationClientResponse_VerdictType_PHISHING;
const int LoginReputationClientResponse_VerdictType_VerdictType_ARRAYSIZE = LoginReputationClientResponse_VerdictType_VerdictType_MAX + 1;

enum ClientDownloadRequest_ResourceType {
  ClientDownloadRequest_ResourceType_DOWNLOAD_URL = 0,
  ClientDownloadRequest_ResourceType_DOWNLOAD_REDIRECT = 1,
  ClientDownloadRequest_ResourceType_TAB_URL = 2,
  ClientDownloadRequest_ResourceType_TAB_REDIRECT = 3,
  ClientDownloadRequest_ResourceType_PPAPI_DOCUMENT = 4,
  ClientDownloadRequest_ResourceType_PPAPI_PLUGIN = 5
};
bool ClientDownloadRequest_ResourceType_IsValid(int value);
const ClientDownloadRequest_ResourceType ClientDownloadRequest_ResourceType_ResourceType_MIN = ClientDownloadRequest_ResourceType_DOWNLOAD_URL;
const ClientDownloadRequest_ResourceType ClientDownloadRequest_ResourceType_ResourceType_MAX = ClientDownloadRequest_ResourceType_PPAPI_PLUGIN;
const int ClientDownloadRequest_ResourceType_ResourceType_ARRAYSIZE = ClientDownloadRequest_ResourceType_ResourceType_MAX + 1;

enum ClientDownloadRequest_DownloadType {
  ClientDownloadRequest_DownloadType_WIN_EXECUTABLE = 0,
  ClientDownloadRequest_DownloadType_CHROME_EXTENSION = 1,
  ClientDownloadRequest_DownloadType_ANDROID_APK = 2,
  ClientDownloadRequest_DownloadType_ZIPPED_EXECUTABLE = 3,
  ClientDownloadRequest_DownloadType_MAC_EXECUTABLE = 4,
  ClientDownloadRequest_DownloadType_ZIPPED_ARCHIVE = 5,
  ClientDownloadRequest_DownloadType_ARCHIVE = 6,
  ClientDownloadRequest_DownloadType_INVALID_ZIP = 7,
  ClientDownloadRequest_DownloadType_INVALID_MAC_ARCHIVE = 8,
  ClientDownloadRequest_DownloadType_PPAPI_SAVE_REQUEST = 9,
  ClientDownloadRequest_DownloadType_SAMPLED_UNSUPPORTED_FILE = 10
};
bool ClientDownloadRequest_DownloadType_IsValid(int value);
const ClientDownloadRequest_DownloadType ClientDownloadRequest_DownloadType_DownloadType_MIN = ClientDownloadRequest_DownloadType_WIN_EXECUTABLE;
const ClientDownloadRequest_DownloadType ClientDownloadRequest_DownloadType_DownloadType_MAX = ClientDownloadRequest_DownloadType_SAMPLED_UNSUPPORTED_FILE;
const int ClientDownloadRequest_DownloadType_DownloadType_ARRAYSIZE = ClientDownloadRequest_DownloadType_DownloadType_MAX + 1;

enum ReferrerChainEntry_URLType {
  ReferrerChainEntry_URLType_EVENT_URL = 1,
  ReferrerChainEntry_URLType_LANDING_PAGE = 2,
  ReferrerChainEntry_URLType_LANDING_REFERRER = 3,
  ReferrerChainEntry_URLType_CLIENT_REDIRECT = 4,
  ReferrerChainEntry_URLType_DEPRECATED_SERVER_REDIRECT = 5
};
bool ReferrerChainEntry_URLType_IsValid(int value);
const ReferrerChainEntry_URLType ReferrerChainEntry_URLType_URLType_MIN = ReferrerChainEntry_URLType_EVENT_URL;
const ReferrerChainEntry_URLType ReferrerChainEntry_URLType_URLType_MAX = ReferrerChainEntry_URLType_DEPRECATED_SERVER_REDIRECT;
const int ReferrerChainEntry_URLType_URLType_ARRAYSIZE = ReferrerChainEntry_URLType_URLType_MAX + 1;

enum ClientDownloadResponse_Verdict {
  ClientDownloadResponse_Verdict_SAFE = 0,
  ClientDownloadResponse_Verdict_DANGEROUS = 1,
  ClientDownloadResponse_Verdict_UNCOMMON = 2,
  ClientDownloadResponse_Verdict_POTENTIALLY_UNWANTED = 3,
  ClientDownloadResponse_Verdict_DANGEROUS_HOST = 4,
  ClientDownloadResponse_Verdict_UNKNOWN = 5
};
bool ClientDownloadResponse_Verdict_IsValid(int value);
const ClientDownloadResponse_Verdict ClientDownloadResponse_Verdict_Verdict_MIN = ClientDownloadResponse_Verdict_SAFE;
const ClientDownloadResponse_Verdict ClientDownloadResponse_Verdict_Verdict_MAX = ClientDownloadResponse_Verdict_UNKNOWN;
const int ClientDownloadResponse_Verdict_Verdict_ARRAYSIZE = ClientDownloadResponse_Verdict_Verdict_MAX + 1;

enum ClientDownloadReport_Reason {
  ClientDownloadReport_Reason_SHARE = 0,
  ClientDownloadReport_Reason_FALSE_POSITIVE = 1,
  ClientDownloadReport_Reason_APPEAL = 2
};
bool ClientDownloadReport_Reason_IsValid(int value);
const ClientDownloadReport_Reason ClientDownloadReport_Reason_Reason_MIN = ClientDownloadReport_Reason_SHARE;
const ClientDownloadReport_Reason ClientDownloadReport_Reason_Reason_MAX = ClientDownloadReport_Reason_APPEAL;
const int ClientDownloadReport_Reason_Reason_ARRAYSIZE = ClientDownloadReport_Reason_Reason_MAX + 1;

enum ClientUploadResponse_UploadStatus {
  ClientUploadResponse_UploadStatus_SUCCESS = 0,
  ClientUploadResponse_UploadStatus_UPLOAD_FAILURE = 1
};
bool ClientUploadResponse_UploadStatus_IsValid(int value);
const ClientUploadResponse_UploadStatus ClientUploadResponse_UploadStatus_UploadStatus_MIN = ClientUploadResponse_UploadStatus_SUCCESS;
const ClientUploadResponse_UploadStatus ClientUploadResponse_UploadStatus_UploadStatus_MAX = ClientUploadResponse_UploadStatus_UPLOAD_FAILURE;
const int ClientUploadResponse_UploadStatus_UploadStatus_ARRAYSIZE = ClientUploadResponse_UploadStatus_UploadStatus_MAX + 1;

enum ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState {
  ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_UNKNOWN = 0,
  ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_CLEARED = 1,
  ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_WEAK_LEGACY_OBSOLETE = 2,
  ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_CHANGED = 3,
  ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_UNTRUSTED_UNKNOWN_VALUE = 4,
  ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_BYPASS_CLEARED = 5,
  ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_BYPASS_CHANGED = 6
};
bool ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_IsValid(int value);
const ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_ValueState_MIN = ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_UNKNOWN;
const ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_ValueState_MAX = ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_BYPASS_CHANGED;
const int ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_ValueState_ARRAYSIZE = ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_ValueState_MAX + 1;

enum ClientIncidentReport_IncidentData_ResourceRequestIncident_Type {
  ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_UNKNOWN = 0,
  ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_TYPE_PATTERN = 3
};
bool ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_IsValid(int value);
const ClientIncidentReport_IncidentData_ResourceRequestIncident_Type ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_Type_MIN = ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_UNKNOWN;
const ClientIncidentReport_IncidentData_ResourceRequestIncident_Type ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_Type_MAX = ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_TYPE_PATTERN;
const int ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_Type_ARRAYSIZE = ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_Type_MAX + 1;

enum ClientIncidentReport_EnvironmentData_Process_Dll_Feature {
  ClientIncidentReport_EnvironmentData_Process_Dll_Feature_UNKNOWN = 0,
  ClientIncidentReport_EnvironmentData_Process_Dll_Feature_LSP = 1
};
bool ClientIncidentReport_EnvironmentData_Process_Dll_Feature_IsValid(int value);
const ClientIncidentReport_EnvironmentData_Process_Dll_Feature ClientIncidentReport_EnvironmentData_Process_Dll_Feature_Feature_MIN = ClientIncidentReport_EnvironmentData_Process_Dll_Feature_UNKNOWN;
const ClientIncidentReport_EnvironmentData_Process_Dll_Feature ClientIncidentReport_EnvironmentData_Process_Dll_Feature_Feature_MAX = ClientIncidentReport_EnvironmentData_Process_Dll_Feature_LSP;
const int ClientIncidentReport_EnvironmentData_Process_Dll_Feature_Feature_ARRAYSIZE = ClientIncidentReport_EnvironmentData_Process_Dll_Feature_Feature_MAX + 1;

enum ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState {
  ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_UNKNOWN = 0,
  ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_MODULE_STATE_UNKNOWN = 1,
  ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_MODULE_STATE_UNMODIFIED = 2,
  ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_MODULE_STATE_MODIFIED = 3
};
bool ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_IsValid(int value);
const ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_ModifiedState_MIN = ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_UNKNOWN;
const ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_ModifiedState_MAX = ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_MODULE_STATE_MODIFIED;
const int ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_ModifiedState_ARRAYSIZE = ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_ModifiedState_MAX + 1;

enum ClientIncidentReport_EnvironmentData_Process_Channel {
  ClientIncidentReport_EnvironmentData_Process_Channel_CHANNEL_UNKNOWN = 0,
  ClientIncidentReport_EnvironmentData_Process_Channel_CHANNEL_CANARY = 1,
  ClientIncidentReport_EnvironmentData_Process_Channel_CHANNEL_DEV = 2,
  ClientIncidentReport_EnvironmentData_Process_Channel_CHANNEL_BETA = 3,
  ClientIncidentReport_EnvironmentData_Process_Channel_CHANNEL_STABLE = 4
};
bool ClientIncidentReport_EnvironmentData_Process_Channel_IsValid(int value);
const ClientIncidentReport_EnvironmentData_Process_Channel ClientIncidentReport_EnvironmentData_Process_Channel_Channel_MIN = ClientIncidentReport_EnvironmentData_Process_Channel_CHANNEL_UNKNOWN;
const ClientIncidentReport_EnvironmentData_Process_Channel ClientIncidentReport_EnvironmentData_Process_Channel_Channel_MAX = ClientIncidentReport_EnvironmentData_Process_Channel_CHANNEL_STABLE;
const int ClientIncidentReport_EnvironmentData_Process_Channel_Channel_ARRAYSIZE = ClientIncidentReport_EnvironmentData_Process_Channel_Channel_MAX + 1;

enum ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState {
  ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_UNKNOWN = 0,
  ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_ENABLED = 1,
  ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_DISABLED = 2,
  ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_BLACKLISTED = 3,
  ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_BLOCKED = 4,
  ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_TERMINATED = 5
};
bool ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_IsValid(int value);
const ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_ExtensionState_MIN = ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_UNKNOWN;
const ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_ExtensionState_MAX = ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_TERMINATED;
const int ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_ExtensionState_ARRAYSIZE = ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_ExtensionState_MAX + 1;

enum ClientSafeBrowsingReportRequest_ReportType {
  ClientSafeBrowsingReportRequest_ReportType_UNKNOWN = 0,
  ClientSafeBrowsingReportRequest_ReportType_URL_PHISHING = 1,
  ClientSafeBrowsingReportRequest_ReportType_URL_MALWARE = 2,
  ClientSafeBrowsingReportRequest_ReportType_URL_UNWANTED = 3,
  ClientSafeBrowsingReportRequest_ReportType_URL_CLIENT_SIDE_PHISHING = 4,
  ClientSafeBrowsingReportRequest_ReportType_URL_CLIENT_SIDE_MALWARE = 5,
  ClientSafeBrowsingReportRequest_ReportType_DANGEROUS_DOWNLOAD_RECOVERY = 6,
  ClientSafeBrowsingReportRequest_ReportType_DANGEROUS_DOWNLOAD_WARNING = 7,
  ClientSafeBrowsingReportRequest_ReportType_DANGEROUS_DOWNLOAD_BY_API = 10,
  ClientSafeBrowsingReportRequest_ReportType_URL_PASSWORD_PROTECTION_PHISHING = 12,
  ClientSafeBrowsingReportRequest_ReportType_DANGEROUS_DOWNLOAD_OPENED = 13,
  ClientSafeBrowsingReportRequest_ReportType_AD_SAMPLE = 14
};
bool ClientSafeBrowsingReportRequest_ReportType_IsValid(int value);
const ClientSafeBrowsingReportRequest_ReportType ClientSafeBrowsingReportRequest_ReportType_ReportType_MIN = ClientSafeBrowsingReportRequest_ReportType_UNKNOWN;
const ClientSafeBrowsingReportRequest_ReportType ClientSafeBrowsingReportRequest_ReportType_ReportType_MAX = ClientSafeBrowsingReportRequest_ReportType_AD_SAMPLE;
const int ClientSafeBrowsingReportRequest_ReportType_ReportType_ARRAYSIZE = ClientSafeBrowsingReportRequest_ReportType_ReportType_MAX + 1;

enum ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType {
  ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_SAFE_BROWSING_URL_API_TYPE_UNSPECIFIED = 0,
  ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_PVER3_NATIVE = 1,
  ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_PVER4_NATIVE = 2,
  ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_ANDROID_SAFETYNET = 3,
  ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_FLYWHEEL = 4
};
bool ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_IsValid(int value);
const ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_SafeBrowsingUrlApiType_MIN = ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_SAFE_BROWSING_URL_API_TYPE_UNSPECIFIED;
const ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_SafeBrowsingUrlApiType_MAX = ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_FLYWHEEL;
const int ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_SafeBrowsingUrlApiType_ARRAYSIZE = ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_SafeBrowsingUrlApiType_MAX + 1;

// ===================================================================

class ChromeUserPopulation : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ChromeUserPopulation) */ {
 public:
  ChromeUserPopulation();
  virtual ~ChromeUserPopulation();

  ChromeUserPopulation(const ChromeUserPopulation& from);

  inline ChromeUserPopulation& operator=(const ChromeUserPopulation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChromeUserPopulation(ChromeUserPopulation&& from) noexcept
    : ChromeUserPopulation() {
    *this = ::std::move(from);
  }

  inline ChromeUserPopulation& operator=(ChromeUserPopulation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ChromeUserPopulation& default_instance();

  static inline const ChromeUserPopulation* internal_default_instance() {
    return reinterpret_cast<const ChromeUserPopulation*>(
               &_ChromeUserPopulation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ChromeUserPopulation* other);
  friend void swap(ChromeUserPopulation& a, ChromeUserPopulation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChromeUserPopulation* New() const PROTOBUF_FINAL { return New(NULL); }

  ChromeUserPopulation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ChromeUserPopulation& from);
  void MergeFrom(const ChromeUserPopulation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChromeUserPopulation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChromeUserPopulation_UserPopulation UserPopulation;
  static const UserPopulation UNKNOWN_USER_POPULATION =
    ChromeUserPopulation_UserPopulation_UNKNOWN_USER_POPULATION;
  static const UserPopulation SAFE_BROWSING =
    ChromeUserPopulation_UserPopulation_SAFE_BROWSING;
  static const UserPopulation EXTENDED_REPORTING =
    ChromeUserPopulation_UserPopulation_EXTENDED_REPORTING;
  static inline bool UserPopulation_IsValid(int value) {
    return ChromeUserPopulation_UserPopulation_IsValid(value);
  }
  static const UserPopulation UserPopulation_MIN =
    ChromeUserPopulation_UserPopulation_UserPopulation_MIN;
  static const UserPopulation UserPopulation_MAX =
    ChromeUserPopulation_UserPopulation_UserPopulation_MAX;
  static const int UserPopulation_ARRAYSIZE =
    ChromeUserPopulation_UserPopulation_UserPopulation_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated string finch_active_groups = 4;
  int finch_active_groups_size() const;
  void clear_finch_active_groups();
  static const int kFinchActiveGroupsFieldNumber = 4;
  const ::std::string& finch_active_groups(int index) const;
  ::std::string* mutable_finch_active_groups(int index);
  void set_finch_active_groups(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_finch_active_groups(int index, ::std::string&& value);
  #endif
  void set_finch_active_groups(int index, const char* value);
  void set_finch_active_groups(int index, const char* value, size_t size);
  ::std::string* add_finch_active_groups();
  void add_finch_active_groups(const ::std::string& value);
  #if LANG_CXX11
  void add_finch_active_groups(::std::string&& value);
  #endif
  void add_finch_active_groups(const char* value);
  void add_finch_active_groups(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& finch_active_groups() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_finch_active_groups();

  // optional .safe_browsing.ChromeUserPopulation.UserPopulation user_population = 1;
  bool has_user_population() const;
  void clear_user_population();
  static const int kUserPopulationFieldNumber = 1;
  ::safe_browsing::ChromeUserPopulation_UserPopulation user_population() const;
  void set_user_population(::safe_browsing::ChromeUserPopulation_UserPopulation value);

  // optional bool is_history_sync_enabled = 2;
  bool has_is_history_sync_enabled() const;
  void clear_is_history_sync_enabled();
  static const int kIsHistorySyncEnabledFieldNumber = 2;
  bool is_history_sync_enabled() const;
  void set_is_history_sync_enabled(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ChromeUserPopulation)
 private:
  void set_has_user_population();
  void clear_has_user_population();
  void set_has_is_history_sync_enabled();
  void clear_has_is_history_sync_enabled();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> finch_active_groups_;
  int user_population_;
  bool is_history_sync_enabled_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientPhishingRequest_Feature : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientPhishingRequest.Feature) */ {
 public:
  ClientPhishingRequest_Feature();
  virtual ~ClientPhishingRequest_Feature();

  ClientPhishingRequest_Feature(const ClientPhishingRequest_Feature& from);

  inline ClientPhishingRequest_Feature& operator=(const ClientPhishingRequest_Feature& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientPhishingRequest_Feature(ClientPhishingRequest_Feature&& from) noexcept
    : ClientPhishingRequest_Feature() {
    *this = ::std::move(from);
  }

  inline ClientPhishingRequest_Feature& operator=(ClientPhishingRequest_Feature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientPhishingRequest_Feature& default_instance();

  static inline const ClientPhishingRequest_Feature* internal_default_instance() {
    return reinterpret_cast<const ClientPhishingRequest_Feature*>(
               &_ClientPhishingRequest_Feature_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ClientPhishingRequest_Feature* other);
  friend void swap(ClientPhishingRequest_Feature& a, ClientPhishingRequest_Feature& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientPhishingRequest_Feature* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientPhishingRequest_Feature* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientPhishingRequest_Feature& from);
  void MergeFrom(const ClientPhishingRequest_Feature& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientPhishingRequest_Feature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required double value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientPhishingRequest.Feature)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  double value_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientPhishingRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientPhishingRequest) */ {
 public:
  ClientPhishingRequest();
  virtual ~ClientPhishingRequest();

  ClientPhishingRequest(const ClientPhishingRequest& from);

  inline ClientPhishingRequest& operator=(const ClientPhishingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientPhishingRequest(ClientPhishingRequest&& from) noexcept
    : ClientPhishingRequest() {
    *this = ::std::move(from);
  }

  inline ClientPhishingRequest& operator=(ClientPhishingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientPhishingRequest& default_instance();

  static inline const ClientPhishingRequest* internal_default_instance() {
    return reinterpret_cast<const ClientPhishingRequest*>(
               &_ClientPhishingRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ClientPhishingRequest* other);
  friend void swap(ClientPhishingRequest& a, ClientPhishingRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientPhishingRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientPhishingRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientPhishingRequest& from);
  void MergeFrom(const ClientPhishingRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientPhishingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientPhishingRequest_Feature Feature;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientPhishingRequest.Feature feature_map = 5;
  int feature_map_size() const;
  void clear_feature_map();
  static const int kFeatureMapFieldNumber = 5;
  const ::safe_browsing::ClientPhishingRequest_Feature& feature_map(int index) const;
  ::safe_browsing::ClientPhishingRequest_Feature* mutable_feature_map(int index);
  ::safe_browsing::ClientPhishingRequest_Feature* add_feature_map();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientPhishingRequest_Feature >*
      mutable_feature_map();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientPhishingRequest_Feature >&
      feature_map() const;

  // repeated .safe_browsing.ClientPhishingRequest.Feature non_model_feature_map = 8;
  int non_model_feature_map_size() const;
  void clear_non_model_feature_map();
  static const int kNonModelFeatureMapFieldNumber = 8;
  const ::safe_browsing::ClientPhishingRequest_Feature& non_model_feature_map(int index) const;
  ::safe_browsing::ClientPhishingRequest_Feature* mutable_non_model_feature_map(int index);
  ::safe_browsing::ClientPhishingRequest_Feature* add_non_model_feature_map();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientPhishingRequest_Feature >*
      mutable_non_model_feature_map();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientPhishingRequest_Feature >&
      non_model_feature_map() const;

  // repeated uint32 shingle_hashes = 12 [packed = true];
  int shingle_hashes_size() const;
  void clear_shingle_hashes();
  static const int kShingleHashesFieldNumber = 12;
  ::google::protobuf::uint32 shingle_hashes(int index) const;
  void set_shingle_hashes(int index, ::google::protobuf::uint32 value);
  void add_shingle_hashes(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      shingle_hashes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_shingle_hashes();

  // optional string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string OBSOLETE_referrer_url = 9;
  bool has_obsolete_referrer_url() const;
  void clear_obsolete_referrer_url();
  static const int kOBSOLETEReferrerUrlFieldNumber = 9;
  const ::std::string& obsolete_referrer_url() const;
  void set_obsolete_referrer_url(const ::std::string& value);
  #if LANG_CXX11
  void set_obsolete_referrer_url(::std::string&& value);
  #endif
  void set_obsolete_referrer_url(const char* value);
  void set_obsolete_referrer_url(const char* value, size_t size);
  ::std::string* mutable_obsolete_referrer_url();
  ::std::string* release_obsolete_referrer_url();
  void set_allocated_obsolete_referrer_url(::std::string* obsolete_referrer_url);

  // optional bytes OBSOLETE_hash_prefix = 10;
  bool has_obsolete_hash_prefix() const;
  void clear_obsolete_hash_prefix();
  static const int kOBSOLETEHashPrefixFieldNumber = 10;
  const ::std::string& obsolete_hash_prefix() const;
  void set_obsolete_hash_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_obsolete_hash_prefix(::std::string&& value);
  #endif
  void set_obsolete_hash_prefix(const char* value);
  void set_obsolete_hash_prefix(const void* value, size_t size);
  ::std::string* mutable_obsolete_hash_prefix();
  ::std::string* release_obsolete_hash_prefix();
  void set_allocated_obsolete_hash_prefix(::std::string* obsolete_hash_prefix);

  // optional string model_filename = 13;
  bool has_model_filename() const;
  void clear_model_filename();
  static const int kModelFilenameFieldNumber = 13;
  const ::std::string& model_filename() const;
  void set_model_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_model_filename(::std::string&& value);
  #endif
  void set_model_filename(const char* value);
  void set_model_filename(const char* value, size_t size);
  ::std::string* mutable_model_filename();
  ::std::string* release_model_filename();
  void set_allocated_model_filename(::std::string* model_filename);

  // optional .safe_browsing.ChromeUserPopulation population = 14;
  bool has_population() const;
  void clear_population();
  static const int kPopulationFieldNumber = 14;
  const ::safe_browsing::ChromeUserPopulation& population() const;
  ::safe_browsing::ChromeUserPopulation* mutable_population();
  ::safe_browsing::ChromeUserPopulation* release_population();
  void set_allocated_population(::safe_browsing::ChromeUserPopulation* population);

  // required float client_score = 2;
  bool has_client_score() const;
  void clear_client_score();
  static const int kClientScoreFieldNumber = 2;
  float client_score() const;
  void set_client_score(float value);

  // optional bool is_phishing = 4;
  bool has_is_phishing() const;
  void clear_is_phishing();
  static const int kIsPhishingFieldNumber = 4;
  bool is_phishing() const;
  void set_is_phishing(bool value);

  // optional int32 model_version = 6;
  bool has_model_version() const;
  void clear_model_version();
  static const int kModelVersionFieldNumber = 6;
  ::google::protobuf::int32 model_version() const;
  void set_model_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientPhishingRequest)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_obsolete_hash_prefix();
  void clear_has_obsolete_hash_prefix();
  void set_has_client_score();
  void clear_has_client_score();
  void set_has_is_phishing();
  void clear_has_is_phishing();
  void set_has_model_version();
  void clear_has_model_version();
  void set_has_obsolete_referrer_url();
  void clear_has_obsolete_referrer_url();
  void set_has_model_filename();
  void clear_has_model_filename();
  void set_has_population();
  void clear_has_population();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientPhishingRequest_Feature > feature_map_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientPhishingRequest_Feature > non_model_feature_map_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > shingle_hashes_;
  mutable int _shingle_hashes_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr obsolete_referrer_url_;
  ::google::protobuf::internal::ArenaStringPtr obsolete_hash_prefix_;
  ::google::protobuf::internal::ArenaStringPtr model_filename_;
  ::safe_browsing::ChromeUserPopulation* population_;
  float client_score_;
  bool is_phishing_;
  ::google::protobuf::int32 model_version_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientPhishingResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientPhishingResponse) */ {
 public:
  ClientPhishingResponse();
  virtual ~ClientPhishingResponse();

  ClientPhishingResponse(const ClientPhishingResponse& from);

  inline ClientPhishingResponse& operator=(const ClientPhishingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientPhishingResponse(ClientPhishingResponse&& from) noexcept
    : ClientPhishingResponse() {
    *this = ::std::move(from);
  }

  inline ClientPhishingResponse& operator=(ClientPhishingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientPhishingResponse& default_instance();

  static inline const ClientPhishingResponse* internal_default_instance() {
    return reinterpret_cast<const ClientPhishingResponse*>(
               &_ClientPhishingResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ClientPhishingResponse* other);
  friend void swap(ClientPhishingResponse& a, ClientPhishingResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientPhishingResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientPhishingResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientPhishingResponse& from);
  void MergeFrom(const ClientPhishingResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientPhishingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string OBSOLETE_whitelist_expression = 2;
  int obsolete_whitelist_expression_size() const;
  void clear_obsolete_whitelist_expression();
  static const int kOBSOLETEWhitelistExpressionFieldNumber = 2;
  const ::std::string& obsolete_whitelist_expression(int index) const;
  ::std::string* mutable_obsolete_whitelist_expression(int index);
  void set_obsolete_whitelist_expression(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_obsolete_whitelist_expression(int index, ::std::string&& value);
  #endif
  void set_obsolete_whitelist_expression(int index, const char* value);
  void set_obsolete_whitelist_expression(int index, const char* value, size_t size);
  ::std::string* add_obsolete_whitelist_expression();
  void add_obsolete_whitelist_expression(const ::std::string& value);
  #if LANG_CXX11
  void add_obsolete_whitelist_expression(::std::string&& value);
  #endif
  void add_obsolete_whitelist_expression(const char* value);
  void add_obsolete_whitelist_expression(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& obsolete_whitelist_expression() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_obsolete_whitelist_expression();

  // required bool phishy = 1;
  bool has_phishy() const;
  void clear_phishy();
  static const int kPhishyFieldNumber = 1;
  bool phishy() const;
  void set_phishy(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientPhishingResponse)
 private:
  void set_has_phishy();
  void clear_has_phishy();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> obsolete_whitelist_expression_;
  bool phishy_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientMalwareRequest_UrlInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientMalwareRequest.UrlInfo) */ {
 public:
  ClientMalwareRequest_UrlInfo();
  virtual ~ClientMalwareRequest_UrlInfo();

  ClientMalwareRequest_UrlInfo(const ClientMalwareRequest_UrlInfo& from);

  inline ClientMalwareRequest_UrlInfo& operator=(const ClientMalwareRequest_UrlInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientMalwareRequest_UrlInfo(ClientMalwareRequest_UrlInfo&& from) noexcept
    : ClientMalwareRequest_UrlInfo() {
    *this = ::std::move(from);
  }

  inline ClientMalwareRequest_UrlInfo& operator=(ClientMalwareRequest_UrlInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientMalwareRequest_UrlInfo& default_instance();

  static inline const ClientMalwareRequest_UrlInfo* internal_default_instance() {
    return reinterpret_cast<const ClientMalwareRequest_UrlInfo*>(
               &_ClientMalwareRequest_UrlInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ClientMalwareRequest_UrlInfo* other);
  friend void swap(ClientMalwareRequest_UrlInfo& a, ClientMalwareRequest_UrlInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientMalwareRequest_UrlInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientMalwareRequest_UrlInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientMalwareRequest_UrlInfo& from);
  void MergeFrom(const ClientMalwareRequest_UrlInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientMalwareRequest_UrlInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // required string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string method = 3;
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 3;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // optional string referrer = 4;
  bool has_referrer() const;
  void clear_referrer();
  static const int kReferrerFieldNumber = 4;
  const ::std::string& referrer() const;
  void set_referrer(const ::std::string& value);
  #if LANG_CXX11
  void set_referrer(::std::string&& value);
  #endif
  void set_referrer(const char* value);
  void set_referrer(const char* value, size_t size);
  ::std::string* mutable_referrer();
  ::std::string* release_referrer();
  void set_allocated_referrer(::std::string* referrer);

  // optional int32 resource_type = 5;
  bool has_resource_type() const;
  void clear_resource_type();
  static const int kResourceTypeFieldNumber = 5;
  ::google::protobuf::int32 resource_type() const;
  void set_resource_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientMalwareRequest.UrlInfo)
 private:
  void set_has_ip();
  void clear_has_ip();
  void set_has_url();
  void clear_has_url();
  void set_has_method();
  void clear_has_method();
  void set_has_referrer();
  void clear_has_referrer();
  void set_has_resource_type();
  void clear_has_resource_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr referrer_;
  ::google::protobuf::int32 resource_type_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientMalwareRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientMalwareRequest) */ {
 public:
  ClientMalwareRequest();
  virtual ~ClientMalwareRequest();

  ClientMalwareRequest(const ClientMalwareRequest& from);

  inline ClientMalwareRequest& operator=(const ClientMalwareRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientMalwareRequest(ClientMalwareRequest&& from) noexcept
    : ClientMalwareRequest() {
    *this = ::std::move(from);
  }

  inline ClientMalwareRequest& operator=(ClientMalwareRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientMalwareRequest& default_instance();

  static inline const ClientMalwareRequest* internal_default_instance() {
    return reinterpret_cast<const ClientMalwareRequest*>(
               &_ClientMalwareRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ClientMalwareRequest* other);
  friend void swap(ClientMalwareRequest& a, ClientMalwareRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientMalwareRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientMalwareRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientMalwareRequest& from);
  void MergeFrom(const ClientMalwareRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientMalwareRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientMalwareRequest_UrlInfo UrlInfo;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientMalwareRequest.UrlInfo bad_ip_url_info = 7;
  int bad_ip_url_info_size() const;
  void clear_bad_ip_url_info();
  static const int kBadIpUrlInfoFieldNumber = 7;
  const ::safe_browsing::ClientMalwareRequest_UrlInfo& bad_ip_url_info(int index) const;
  ::safe_browsing::ClientMalwareRequest_UrlInfo* mutable_bad_ip_url_info(int index);
  ::safe_browsing::ClientMalwareRequest_UrlInfo* add_bad_ip_url_info();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientMalwareRequest_UrlInfo >*
      mutable_bad_ip_url_info();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientMalwareRequest_UrlInfo >&
      bad_ip_url_info() const;

  // required string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string referrer_url = 4;
  bool has_referrer_url() const;
  void clear_referrer_url();
  static const int kReferrerUrlFieldNumber = 4;
  const ::std::string& referrer_url() const;
  void set_referrer_url(const ::std::string& value);
  #if LANG_CXX11
  void set_referrer_url(::std::string&& value);
  #endif
  void set_referrer_url(const char* value);
  void set_referrer_url(const char* value, size_t size);
  ::std::string* mutable_referrer_url();
  ::std::string* release_referrer_url();
  void set_allocated_referrer_url(::std::string* referrer_url);

  // optional .safe_browsing.ChromeUserPopulation population = 9;
  bool has_population() const;
  void clear_population();
  static const int kPopulationFieldNumber = 9;
  const ::safe_browsing::ChromeUserPopulation& population() const;
  ::safe_browsing::ChromeUserPopulation* mutable_population();
  ::safe_browsing::ChromeUserPopulation* release_population();
  void set_allocated_population(::safe_browsing::ChromeUserPopulation* population);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientMalwareRequest)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_referrer_url();
  void clear_has_referrer_url();
  void set_has_population();
  void clear_has_population();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientMalwareRequest_UrlInfo > bad_ip_url_info_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr referrer_url_;
  ::safe_browsing::ChromeUserPopulation* population_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReputationClientRequest_Frame_Form : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.LoginReputationClientRequest.Frame.Form) */ {
 public:
  LoginReputationClientRequest_Frame_Form();
  virtual ~LoginReputationClientRequest_Frame_Form();

  LoginReputationClientRequest_Frame_Form(const LoginReputationClientRequest_Frame_Form& from);

  inline LoginReputationClientRequest_Frame_Form& operator=(const LoginReputationClientRequest_Frame_Form& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginReputationClientRequest_Frame_Form(LoginReputationClientRequest_Frame_Form&& from) noexcept
    : LoginReputationClientRequest_Frame_Form() {
    *this = ::std::move(from);
  }

  inline LoginReputationClientRequest_Frame_Form& operator=(LoginReputationClientRequest_Frame_Form&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LoginReputationClientRequest_Frame_Form& default_instance();

  static inline const LoginReputationClientRequest_Frame_Form* internal_default_instance() {
    return reinterpret_cast<const LoginReputationClientRequest_Frame_Form*>(
               &_LoginReputationClientRequest_Frame_Form_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(LoginReputationClientRequest_Frame_Form* other);
  friend void swap(LoginReputationClientRequest_Frame_Form& a, LoginReputationClientRequest_Frame_Form& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginReputationClientRequest_Frame_Form* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReputationClientRequest_Frame_Form* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const LoginReputationClientRequest_Frame_Form& from);
  void MergeFrom(const LoginReputationClientRequest_Frame_Form& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginReputationClientRequest_Frame_Form* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string action_url = 1;
  bool has_action_url() const;
  void clear_action_url();
  static const int kActionUrlFieldNumber = 1;
  const ::std::string& action_url() const;
  void set_action_url(const ::std::string& value);
  #if LANG_CXX11
  void set_action_url(::std::string&& value);
  #endif
  void set_action_url(const char* value);
  void set_action_url(const char* value, size_t size);
  ::std::string* mutable_action_url();
  ::std::string* release_action_url();
  void set_allocated_action_url(::std::string* action_url);

  // optional bool has_password_field = 2;
  bool has_has_password_field() const;
  void clear_has_password_field();
  static const int kHasPasswordFieldFieldNumber = 2;
  bool has_password_field() const;
  void set_has_password_field(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.LoginReputationClientRequest.Frame.Form)
 private:
  void set_has_action_url();
  void clear_has_action_url();
  void set_has_has_password_field();
  void clear_has_has_password_field();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr action_url_;
  bool has_password_field_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReputationClientRequest_Frame : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.LoginReputationClientRequest.Frame) */ {
 public:
  LoginReputationClientRequest_Frame();
  virtual ~LoginReputationClientRequest_Frame();

  LoginReputationClientRequest_Frame(const LoginReputationClientRequest_Frame& from);

  inline LoginReputationClientRequest_Frame& operator=(const LoginReputationClientRequest_Frame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginReputationClientRequest_Frame(LoginReputationClientRequest_Frame&& from) noexcept
    : LoginReputationClientRequest_Frame() {
    *this = ::std::move(from);
  }

  inline LoginReputationClientRequest_Frame& operator=(LoginReputationClientRequest_Frame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LoginReputationClientRequest_Frame& default_instance();

  static inline const LoginReputationClientRequest_Frame* internal_default_instance() {
    return reinterpret_cast<const LoginReputationClientRequest_Frame*>(
               &_LoginReputationClientRequest_Frame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(LoginReputationClientRequest_Frame* other);
  friend void swap(LoginReputationClientRequest_Frame& a, LoginReputationClientRequest_Frame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginReputationClientRequest_Frame* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReputationClientRequest_Frame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const LoginReputationClientRequest_Frame& from);
  void MergeFrom(const LoginReputationClientRequest_Frame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginReputationClientRequest_Frame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LoginReputationClientRequest_Frame_Form Form;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ReferrerChainEntry referrer_chain = 5;
  int referrer_chain_size() const;
  void clear_referrer_chain();
  static const int kReferrerChainFieldNumber = 5;
  const ::safe_browsing::ReferrerChainEntry& referrer_chain(int index) const;
  ::safe_browsing::ReferrerChainEntry* mutable_referrer_chain(int index);
  ::safe_browsing::ReferrerChainEntry* add_referrer_chain();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry >*
      mutable_referrer_chain();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry >&
      referrer_chain() const;

  // repeated .safe_browsing.LoginReputationClientRequest.Frame.Form forms = 6;
  int forms_size() const;
  void clear_forms();
  static const int kFormsFieldNumber = 6;
  const ::safe_browsing::LoginReputationClientRequest_Frame_Form& forms(int index) const;
  ::safe_browsing::LoginReputationClientRequest_Frame_Form* mutable_forms(int index);
  ::safe_browsing::LoginReputationClientRequest_Frame_Form* add_forms();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::LoginReputationClientRequest_Frame_Form >*
      mutable_forms();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::LoginReputationClientRequest_Frame_Form >&
      forms() const;

  // optional string url = 3;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional int32 frame_index = 1;
  bool has_frame_index() const;
  void clear_frame_index();
  static const int kFrameIndexFieldNumber = 1;
  ::google::protobuf::int32 frame_index() const;
  void set_frame_index(::google::protobuf::int32 value);

  // optional int32 parent_frame_index = 2;
  bool has_parent_frame_index() const;
  void clear_parent_frame_index();
  static const int kParentFrameIndexFieldNumber = 2;
  ::google::protobuf::int32 parent_frame_index() const;
  void set_parent_frame_index(::google::protobuf::int32 value);

  // optional bool has_password_field = 4;
  bool has_has_password_field() const;
  void clear_has_password_field();
  static const int kHasPasswordFieldFieldNumber = 4;
  bool has_password_field() const;
  void set_has_password_field(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.LoginReputationClientRequest.Frame)
 private:
  void set_has_frame_index();
  void clear_has_frame_index();
  void set_has_parent_frame_index();
  void clear_has_parent_frame_index();
  void set_has_url();
  void clear_has_url();
  void set_has_has_password_field();
  void clear_has_has_password_field();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry > referrer_chain_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::LoginReputationClientRequest_Frame_Form > forms_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int32 frame_index_;
  ::google::protobuf::int32 parent_frame_index_;
  bool has_password_field_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReputationClientRequest_PasswordReuseEvent : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent) */ {
 public:
  LoginReputationClientRequest_PasswordReuseEvent();
  virtual ~LoginReputationClientRequest_PasswordReuseEvent();

  LoginReputationClientRequest_PasswordReuseEvent(const LoginReputationClientRequest_PasswordReuseEvent& from);

  inline LoginReputationClientRequest_PasswordReuseEvent& operator=(const LoginReputationClientRequest_PasswordReuseEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginReputationClientRequest_PasswordReuseEvent(LoginReputationClientRequest_PasswordReuseEvent&& from) noexcept
    : LoginReputationClientRequest_PasswordReuseEvent() {
    *this = ::std::move(from);
  }

  inline LoginReputationClientRequest_PasswordReuseEvent& operator=(LoginReputationClientRequest_PasswordReuseEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LoginReputationClientRequest_PasswordReuseEvent& default_instance();

  static inline const LoginReputationClientRequest_PasswordReuseEvent* internal_default_instance() {
    return reinterpret_cast<const LoginReputationClientRequest_PasswordReuseEvent*>(
               &_LoginReputationClientRequest_PasswordReuseEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(LoginReputationClientRequest_PasswordReuseEvent* other);
  friend void swap(LoginReputationClientRequest_PasswordReuseEvent& a, LoginReputationClientRequest_PasswordReuseEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginReputationClientRequest_PasswordReuseEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReputationClientRequest_PasswordReuseEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const LoginReputationClientRequest_PasswordReuseEvent& from);
  void MergeFrom(const LoginReputationClientRequest_PasswordReuseEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginReputationClientRequest_PasswordReuseEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType SyncAccountType;
  static const SyncAccountType NOT_SIGNED_IN =
    LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_NOT_SIGNED_IN;
  static const SyncAccountType GMAIL =
    LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_GMAIL;
  static const SyncAccountType GSUITE =
    LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_GSUITE;
  static inline bool SyncAccountType_IsValid(int value) {
    return LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_IsValid(value);
  }
  static const SyncAccountType SyncAccountType_MIN =
    LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_SyncAccountType_MIN;
  static const SyncAccountType SyncAccountType_MAX =
    LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_SyncAccountType_MAX;
  static const int SyncAccountType_ARRAYSIZE =
    LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_SyncAccountType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated string domains_matching_password = 1;
  int domains_matching_password_size() const;
  void clear_domains_matching_password();
  static const int kDomainsMatchingPasswordFieldNumber = 1;
  const ::std::string& domains_matching_password(int index) const;
  ::std::string* mutable_domains_matching_password(int index);
  void set_domains_matching_password(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_domains_matching_password(int index, ::std::string&& value);
  #endif
  void set_domains_matching_password(int index, const char* value);
  void set_domains_matching_password(int index, const char* value, size_t size);
  ::std::string* add_domains_matching_password();
  void add_domains_matching_password(const ::std::string& value);
  #if LANG_CXX11
  void add_domains_matching_password(::std::string&& value);
  #endif
  void add_domains_matching_password(const char* value);
  void add_domains_matching_password(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& domains_matching_password() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_domains_matching_password();

  // optional int32 frame_id = 2;
  bool has_frame_id() const;
  void clear_frame_id();
  static const int kFrameIdFieldNumber = 2;
  ::google::protobuf::int32 frame_id() const;
  void set_frame_id(::google::protobuf::int32 value);

  // optional bool is_chrome_signin_password = 3;
  bool has_is_chrome_signin_password() const;
  void clear_is_chrome_signin_password();
  static const int kIsChromeSigninPasswordFieldNumber = 3;
  bool is_chrome_signin_password() const;
  void set_is_chrome_signin_password(bool value);

  // optional .safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.SyncAccountType sync_account_type = 4;
  bool has_sync_account_type() const;
  void clear_sync_account_type();
  static const int kSyncAccountTypeFieldNumber = 4;
  ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType sync_account_type() const;
  void set_sync_account_type(::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType value);

  // @@protoc_insertion_point(class_scope:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent)
 private:
  void set_has_frame_id();
  void clear_has_frame_id();
  void set_has_is_chrome_signin_password();
  void clear_has_is_chrome_signin_password();
  void set_has_sync_account_type();
  void clear_has_sync_account_type();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> domains_matching_password_;
  ::google::protobuf::int32 frame_id_;
  bool is_chrome_signin_password_;
  int sync_account_type_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReputationClientRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.LoginReputationClientRequest) */ {
 public:
  LoginReputationClientRequest();
  virtual ~LoginReputationClientRequest();

  LoginReputationClientRequest(const LoginReputationClientRequest& from);

  inline LoginReputationClientRequest& operator=(const LoginReputationClientRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginReputationClientRequest(LoginReputationClientRequest&& from) noexcept
    : LoginReputationClientRequest() {
    *this = ::std::move(from);
  }

  inline LoginReputationClientRequest& operator=(LoginReputationClientRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LoginReputationClientRequest& default_instance();

  static inline const LoginReputationClientRequest* internal_default_instance() {
    return reinterpret_cast<const LoginReputationClientRequest*>(
               &_LoginReputationClientRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(LoginReputationClientRequest* other);
  friend void swap(LoginReputationClientRequest& a, LoginReputationClientRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginReputationClientRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReputationClientRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const LoginReputationClientRequest& from);
  void MergeFrom(const LoginReputationClientRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginReputationClientRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LoginReputationClientRequest_Frame Frame;
  typedef LoginReputationClientRequest_PasswordReuseEvent PasswordReuseEvent;

  typedef LoginReputationClientRequest_TriggerType TriggerType;
  static const TriggerType TRIGGER_TYPE_UNSPECIFIED =
    LoginReputationClientRequest_TriggerType_TRIGGER_TYPE_UNSPECIFIED;
  static const TriggerType UNFAMILIAR_LOGIN_PAGE =
    LoginReputationClientRequest_TriggerType_UNFAMILIAR_LOGIN_PAGE;
  static const TriggerType PASSWORD_REUSE_EVENT =
    LoginReputationClientRequest_TriggerType_PASSWORD_REUSE_EVENT;
  static inline bool TriggerType_IsValid(int value) {
    return LoginReputationClientRequest_TriggerType_IsValid(value);
  }
  static const TriggerType TriggerType_MIN =
    LoginReputationClientRequest_TriggerType_TriggerType_MIN;
  static const TriggerType TriggerType_MAX =
    LoginReputationClientRequest_TriggerType_TriggerType_MAX;
  static const int TriggerType_ARRAYSIZE =
    LoginReputationClientRequest_TriggerType_TriggerType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.LoginReputationClientRequest.Frame frames = 3;
  int frames_size() const;
  void clear_frames();
  static const int kFramesFieldNumber = 3;
  const ::safe_browsing::LoginReputationClientRequest_Frame& frames(int index) const;
  ::safe_browsing::LoginReputationClientRequest_Frame* mutable_frames(int index);
  ::safe_browsing::LoginReputationClientRequest_Frame* add_frames();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::LoginReputationClientRequest_Frame >*
      mutable_frames();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::LoginReputationClientRequest_Frame >&
      frames() const;

  // optional string page_url = 1;
  bool has_page_url() const;
  void clear_page_url();
  static const int kPageUrlFieldNumber = 1;
  const ::std::string& page_url() const;
  void set_page_url(const ::std::string& value);
  #if LANG_CXX11
  void set_page_url(::std::string&& value);
  #endif
  void set_page_url(const char* value);
  void set_page_url(const char* value, size_t size);
  ::std::string* mutable_page_url();
  ::std::string* release_page_url();
  void set_allocated_page_url(::std::string* page_url);

  // optional .safe_browsing.LoginReputationClientRequest.PasswordReuseEvent password_reuse_event = 4;
  bool has_password_reuse_event() const;
  void clear_password_reuse_event();
  static const int kPasswordReuseEventFieldNumber = 4;
  const ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent& password_reuse_event() const;
  ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent* mutable_password_reuse_event();
  ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent* release_password_reuse_event();
  void set_allocated_password_reuse_event(::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent* password_reuse_event);

  // optional .safe_browsing.ChromeUserPopulation population = 6;
  bool has_population() const;
  void clear_population();
  static const int kPopulationFieldNumber = 6;
  const ::safe_browsing::ChromeUserPopulation& population() const;
  ::safe_browsing::ChromeUserPopulation* mutable_population();
  ::safe_browsing::ChromeUserPopulation* release_population();
  void set_allocated_population(::safe_browsing::ChromeUserPopulation* population);

  // optional .safe_browsing.LoginReputationClientRequest.TriggerType trigger_type = 2;
  bool has_trigger_type() const;
  void clear_trigger_type();
  static const int kTriggerTypeFieldNumber = 2;
  ::safe_browsing::LoginReputationClientRequest_TriggerType trigger_type() const;
  void set_trigger_type(::safe_browsing::LoginReputationClientRequest_TriggerType value);

  // optional int32 stored_verdict_cnt = 5;
  bool has_stored_verdict_cnt() const;
  void clear_stored_verdict_cnt();
  static const int kStoredVerdictCntFieldNumber = 5;
  ::google::protobuf::int32 stored_verdict_cnt() const;
  void set_stored_verdict_cnt(::google::protobuf::int32 value);

  // optional bool clicked_through_interstitial = 7;
  bool has_clicked_through_interstitial() const;
  void clear_clicked_through_interstitial();
  static const int kClickedThroughInterstitialFieldNumber = 7;
  bool clicked_through_interstitial() const;
  void set_clicked_through_interstitial(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.LoginReputationClientRequest)
 private:
  void set_has_page_url();
  void clear_has_page_url();
  void set_has_trigger_type();
  void clear_has_trigger_type();
  void set_has_password_reuse_event();
  void clear_has_password_reuse_event();
  void set_has_stored_verdict_cnt();
  void clear_has_stored_verdict_cnt();
  void set_has_population();
  void clear_has_population();
  void set_has_clicked_through_interstitial();
  void clear_has_clicked_through_interstitial();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::LoginReputationClientRequest_Frame > frames_;
  ::google::protobuf::internal::ArenaStringPtr page_url_;
  ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent* password_reuse_event_;
  ::safe_browsing::ChromeUserPopulation* population_;
  int trigger_type_;
  ::google::protobuf::int32 stored_verdict_cnt_;
  bool clicked_through_interstitial_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReputationClientResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.LoginReputationClientResponse) */ {
 public:
  LoginReputationClientResponse();
  virtual ~LoginReputationClientResponse();

  LoginReputationClientResponse(const LoginReputationClientResponse& from);

  inline LoginReputationClientResponse& operator=(const LoginReputationClientResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginReputationClientResponse(LoginReputationClientResponse&& from) noexcept
    : LoginReputationClientResponse() {
    *this = ::std::move(from);
  }

  inline LoginReputationClientResponse& operator=(LoginReputationClientResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const LoginReputationClientResponse& default_instance();

  static inline const LoginReputationClientResponse* internal_default_instance() {
    return reinterpret_cast<const LoginReputationClientResponse*>(
               &_LoginReputationClientResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(LoginReputationClientResponse* other);
  friend void swap(LoginReputationClientResponse& a, LoginReputationClientResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginReputationClientResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReputationClientResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const LoginReputationClientResponse& from);
  void MergeFrom(const LoginReputationClientResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginReputationClientResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LoginReputationClientResponse_VerdictType VerdictType;
  static const VerdictType VERDICT_TYPE_UNSPECIFIED =
    LoginReputationClientResponse_VerdictType_VERDICT_TYPE_UNSPECIFIED;
  static const VerdictType SAFE =
    LoginReputationClientResponse_VerdictType_SAFE;
  static const VerdictType LOW_REPUTATION =
    LoginReputationClientResponse_VerdictType_LOW_REPUTATION;
  static const VerdictType PHISHING =
    LoginReputationClientResponse_VerdictType_PHISHING;
  static inline bool VerdictType_IsValid(int value) {
    return LoginReputationClientResponse_VerdictType_IsValid(value);
  }
  static const VerdictType VerdictType_MIN =
    LoginReputationClientResponse_VerdictType_VerdictType_MIN;
  static const VerdictType VerdictType_MAX =
    LoginReputationClientResponse_VerdictType_VerdictType_MAX;
  static const int VerdictType_ARRAYSIZE =
    LoginReputationClientResponse_VerdictType_VerdictType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional string cache_expression = 3;
  bool has_cache_expression() const;
  void clear_cache_expression();
  static const int kCacheExpressionFieldNumber = 3;
  const ::std::string& cache_expression() const;
  void set_cache_expression(const ::std::string& value);
  #if LANG_CXX11
  void set_cache_expression(::std::string&& value);
  #endif
  void set_cache_expression(const char* value);
  void set_cache_expression(const char* value, size_t size);
  ::std::string* mutable_cache_expression();
  ::std::string* release_cache_expression();
  void set_allocated_cache_expression(::std::string* cache_expression);

  // optional bytes verdict_token = 5;
  bool has_verdict_token() const;
  void clear_verdict_token();
  static const int kVerdictTokenFieldNumber = 5;
  const ::std::string& verdict_token() const;
  void set_verdict_token(const ::std::string& value);
  #if LANG_CXX11
  void set_verdict_token(::std::string&& value);
  #endif
  void set_verdict_token(const char* value);
  void set_verdict_token(const void* value, size_t size);
  ::std::string* mutable_verdict_token();
  ::std::string* release_verdict_token();
  void set_allocated_verdict_token(::std::string* verdict_token);

  // optional int64 cache_duration_sec = 2;
  bool has_cache_duration_sec() const;
  void clear_cache_duration_sec();
  static const int kCacheDurationSecFieldNumber = 2;
  ::google::protobuf::int64 cache_duration_sec() const;
  void set_cache_duration_sec(::google::protobuf::int64 value);

  // optional .safe_browsing.LoginReputationClientResponse.VerdictType verdict_type = 1;
  bool has_verdict_type() const;
  void clear_verdict_type();
  static const int kVerdictTypeFieldNumber = 1;
  ::safe_browsing::LoginReputationClientResponse_VerdictType verdict_type() const;
  void set_verdict_type(::safe_browsing::LoginReputationClientResponse_VerdictType value);

  // optional bool DEPRECATED_cache_expression_exact_match = 4 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_deprecated_cache_expression_exact_match() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_deprecated_cache_expression_exact_match();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kDEPRECATEDCacheExpressionExactMatchFieldNumber = 4;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool deprecated_cache_expression_exact_match() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_deprecated_cache_expression_exact_match(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.LoginReputationClientResponse)
 private:
  void set_has_verdict_type();
  void clear_has_verdict_type();
  void set_has_cache_duration_sec();
  void clear_has_cache_duration_sec();
  void set_has_cache_expression();
  void clear_has_cache_expression();
  void set_has_deprecated_cache_expression_exact_match();
  void clear_has_deprecated_cache_expression_exact_match();
  void set_has_verdict_token();
  void clear_has_verdict_token();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cache_expression_;
  ::google::protobuf::internal::ArenaStringPtr verdict_token_;
  ::google::protobuf::int64 cache_duration_sec_;
  int verdict_type_;
  bool deprecated_cache_expression_exact_match_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientMalwareResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientMalwareResponse) */ {
 public:
  ClientMalwareResponse();
  virtual ~ClientMalwareResponse();

  ClientMalwareResponse(const ClientMalwareResponse& from);

  inline ClientMalwareResponse& operator=(const ClientMalwareResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientMalwareResponse(ClientMalwareResponse&& from) noexcept
    : ClientMalwareResponse() {
    *this = ::std::move(from);
  }

  inline ClientMalwareResponse& operator=(ClientMalwareResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientMalwareResponse& default_instance();

  static inline const ClientMalwareResponse* internal_default_instance() {
    return reinterpret_cast<const ClientMalwareResponse*>(
               &_ClientMalwareResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ClientMalwareResponse* other);
  friend void swap(ClientMalwareResponse& a, ClientMalwareResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientMalwareResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientMalwareResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientMalwareResponse& from);
  void MergeFrom(const ClientMalwareResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientMalwareResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string bad_ip = 2;
  bool has_bad_ip() const;
  void clear_bad_ip();
  static const int kBadIpFieldNumber = 2;
  const ::std::string& bad_ip() const;
  void set_bad_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_bad_ip(::std::string&& value);
  #endif
  void set_bad_ip(const char* value);
  void set_bad_ip(const char* value, size_t size);
  ::std::string* mutable_bad_ip();
  ::std::string* release_bad_ip();
  void set_allocated_bad_ip(::std::string* bad_ip);

  // optional string bad_url = 3;
  bool has_bad_url() const;
  void clear_bad_url();
  static const int kBadUrlFieldNumber = 3;
  const ::std::string& bad_url() const;
  void set_bad_url(const ::std::string& value);
  #if LANG_CXX11
  void set_bad_url(::std::string&& value);
  #endif
  void set_bad_url(const char* value);
  void set_bad_url(const char* value, size_t size);
  ::std::string* mutable_bad_url();
  ::std::string* release_bad_url();
  void set_allocated_bad_url(::std::string* bad_url);

  // required bool blacklist = 1;
  bool has_blacklist() const;
  void clear_blacklist();
  static const int kBlacklistFieldNumber = 1;
  bool blacklist() const;
  void set_blacklist(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientMalwareResponse)
 private:
  void set_has_blacklist();
  void clear_has_blacklist();
  void set_has_bad_ip();
  void clear_has_bad_ip();
  void set_has_bad_url();
  void clear_has_bad_url();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr bad_ip_;
  ::google::protobuf::internal::ArenaStringPtr bad_url_;
  bool blacklist_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest_Digests : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest.Digests) */ {
 public:
  ClientDownloadRequest_Digests();
  virtual ~ClientDownloadRequest_Digests();

  ClientDownloadRequest_Digests(const ClientDownloadRequest_Digests& from);

  inline ClientDownloadRequest_Digests& operator=(const ClientDownloadRequest_Digests& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest_Digests(ClientDownloadRequest_Digests&& from) noexcept
    : ClientDownloadRequest_Digests() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest_Digests& operator=(ClientDownloadRequest_Digests&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest_Digests& default_instance();

  static inline const ClientDownloadRequest_Digests* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest_Digests*>(
               &_ClientDownloadRequest_Digests_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ClientDownloadRequest_Digests* other);
  friend void swap(ClientDownloadRequest_Digests& a, ClientDownloadRequest_Digests& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest_Digests* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest_Digests* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest_Digests& from);
  void MergeFrom(const ClientDownloadRequest_Digests& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest_Digests* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes sha256 = 1;
  bool has_sha256() const;
  void clear_sha256();
  static const int kSha256FieldNumber = 1;
  const ::std::string& sha256() const;
  void set_sha256(const ::std::string& value);
  #if LANG_CXX11
  void set_sha256(::std::string&& value);
  #endif
  void set_sha256(const char* value);
  void set_sha256(const void* value, size_t size);
  ::std::string* mutable_sha256();
  ::std::string* release_sha256();
  void set_allocated_sha256(::std::string* sha256);

  // optional bytes sha1 = 2;
  bool has_sha1() const;
  void clear_sha1();
  static const int kSha1FieldNumber = 2;
  const ::std::string& sha1() const;
  void set_sha1(const ::std::string& value);
  #if LANG_CXX11
  void set_sha1(::std::string&& value);
  #endif
  void set_sha1(const char* value);
  void set_sha1(const void* value, size_t size);
  ::std::string* mutable_sha1();
  ::std::string* release_sha1();
  void set_allocated_sha1(::std::string* sha1);

  // optional bytes md5 = 3;
  bool has_md5() const;
  void clear_md5();
  static const int kMd5FieldNumber = 3;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_md5(::std::string&& value);
  #endif
  void set_md5(const char* value);
  void set_md5(const void* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest.Digests)
 private:
  void set_has_sha256();
  void clear_has_sha256();
  void set_has_sha1();
  void clear_has_sha1();
  void set_has_md5();
  void clear_has_md5();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sha256_;
  ::google::protobuf::internal::ArenaStringPtr sha1_;
  ::google::protobuf::internal::ArenaStringPtr md5_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest_Resource : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest.Resource) */ {
 public:
  ClientDownloadRequest_Resource();
  virtual ~ClientDownloadRequest_Resource();

  ClientDownloadRequest_Resource(const ClientDownloadRequest_Resource& from);

  inline ClientDownloadRequest_Resource& operator=(const ClientDownloadRequest_Resource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest_Resource(ClientDownloadRequest_Resource&& from) noexcept
    : ClientDownloadRequest_Resource() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest_Resource& operator=(ClientDownloadRequest_Resource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest_Resource& default_instance();

  static inline const ClientDownloadRequest_Resource* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest_Resource*>(
               &_ClientDownloadRequest_Resource_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ClientDownloadRequest_Resource* other);
  friend void swap(ClientDownloadRequest_Resource& a, ClientDownloadRequest_Resource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest_Resource* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest_Resource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest_Resource& from);
  void MergeFrom(const ClientDownloadRequest_Resource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest_Resource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional bytes remote_ip = 3;
  bool has_remote_ip() const;
  void clear_remote_ip();
  static const int kRemoteIpFieldNumber = 3;
  const ::std::string& remote_ip() const;
  void set_remote_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_remote_ip(::std::string&& value);
  #endif
  void set_remote_ip(const char* value);
  void set_remote_ip(const void* value, size_t size);
  ::std::string* mutable_remote_ip();
  ::std::string* release_remote_ip();
  void set_allocated_remote_ip(::std::string* remote_ip);

  // optional string referrer = 4;
  bool has_referrer() const;
  void clear_referrer();
  static const int kReferrerFieldNumber = 4;
  const ::std::string& referrer() const;
  void set_referrer(const ::std::string& value);
  #if LANG_CXX11
  void set_referrer(::std::string&& value);
  #endif
  void set_referrer(const char* value);
  void set_referrer(const char* value, size_t size);
  ::std::string* mutable_referrer();
  ::std::string* release_referrer();
  void set_allocated_referrer(::std::string* referrer);

  // required .safe_browsing.ClientDownloadRequest.ResourceType type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::safe_browsing::ClientDownloadRequest_ResourceType type() const;
  void set_type(::safe_browsing::ClientDownloadRequest_ResourceType value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest.Resource)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_type();
  void clear_has_type();
  void set_has_remote_ip();
  void clear_has_remote_ip();
  void set_has_referrer();
  void clear_has_referrer();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr remote_ip_;
  ::google::protobuf::internal::ArenaStringPtr referrer_;
  int type_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest_CertificateChain_Element : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest.CertificateChain.Element) */ {
 public:
  ClientDownloadRequest_CertificateChain_Element();
  virtual ~ClientDownloadRequest_CertificateChain_Element();

  ClientDownloadRequest_CertificateChain_Element(const ClientDownloadRequest_CertificateChain_Element& from);

  inline ClientDownloadRequest_CertificateChain_Element& operator=(const ClientDownloadRequest_CertificateChain_Element& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest_CertificateChain_Element(ClientDownloadRequest_CertificateChain_Element&& from) noexcept
    : ClientDownloadRequest_CertificateChain_Element() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest_CertificateChain_Element& operator=(ClientDownloadRequest_CertificateChain_Element&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest_CertificateChain_Element& default_instance();

  static inline const ClientDownloadRequest_CertificateChain_Element* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest_CertificateChain_Element*>(
               &_ClientDownloadRequest_CertificateChain_Element_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(ClientDownloadRequest_CertificateChain_Element* other);
  friend void swap(ClientDownloadRequest_CertificateChain_Element& a, ClientDownloadRequest_CertificateChain_Element& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest_CertificateChain_Element* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest_CertificateChain_Element* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest_CertificateChain_Element& from);
  void MergeFrom(const ClientDownloadRequest_CertificateChain_Element& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest_CertificateChain_Element* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes certificate = 1;
  bool has_certificate() const;
  void clear_certificate();
  static const int kCertificateFieldNumber = 1;
  const ::std::string& certificate() const;
  void set_certificate(const ::std::string& value);
  #if LANG_CXX11
  void set_certificate(::std::string&& value);
  #endif
  void set_certificate(const char* value);
  void set_certificate(const void* value, size_t size);
  ::std::string* mutable_certificate();
  ::std::string* release_certificate();
  void set_allocated_certificate(::std::string* certificate);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest.CertificateChain.Element)
 private:
  void set_has_certificate();
  void clear_has_certificate();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr certificate_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest_CertificateChain : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest.CertificateChain) */ {
 public:
  ClientDownloadRequest_CertificateChain();
  virtual ~ClientDownloadRequest_CertificateChain();

  ClientDownloadRequest_CertificateChain(const ClientDownloadRequest_CertificateChain& from);

  inline ClientDownloadRequest_CertificateChain& operator=(const ClientDownloadRequest_CertificateChain& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest_CertificateChain(ClientDownloadRequest_CertificateChain&& from) noexcept
    : ClientDownloadRequest_CertificateChain() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest_CertificateChain& operator=(ClientDownloadRequest_CertificateChain&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest_CertificateChain& default_instance();

  static inline const ClientDownloadRequest_CertificateChain* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest_CertificateChain*>(
               &_ClientDownloadRequest_CertificateChain_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ClientDownloadRequest_CertificateChain* other);
  friend void swap(ClientDownloadRequest_CertificateChain& a, ClientDownloadRequest_CertificateChain& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest_CertificateChain* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest_CertificateChain* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest_CertificateChain& from);
  void MergeFrom(const ClientDownloadRequest_CertificateChain& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest_CertificateChain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientDownloadRequest_CertificateChain_Element Element;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientDownloadRequest.CertificateChain.Element element = 1;
  int element_size() const;
  void clear_element();
  static const int kElementFieldNumber = 1;
  const ::safe_browsing::ClientDownloadRequest_CertificateChain_Element& element(int index) const;
  ::safe_browsing::ClientDownloadRequest_CertificateChain_Element* mutable_element(int index);
  ::safe_browsing::ClientDownloadRequest_CertificateChain_Element* add_element();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_CertificateChain_Element >*
      mutable_element();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_CertificateChain_Element >&
      element() const;

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest.CertificateChain)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_CertificateChain_Element > element_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest_ExtendedAttr : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest.ExtendedAttr) */ {
 public:
  ClientDownloadRequest_ExtendedAttr();
  virtual ~ClientDownloadRequest_ExtendedAttr();

  ClientDownloadRequest_ExtendedAttr(const ClientDownloadRequest_ExtendedAttr& from);

  inline ClientDownloadRequest_ExtendedAttr& operator=(const ClientDownloadRequest_ExtendedAttr& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest_ExtendedAttr(ClientDownloadRequest_ExtendedAttr&& from) noexcept
    : ClientDownloadRequest_ExtendedAttr() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest_ExtendedAttr& operator=(ClientDownloadRequest_ExtendedAttr&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest_ExtendedAttr& default_instance();

  static inline const ClientDownloadRequest_ExtendedAttr* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest_ExtendedAttr*>(
               &_ClientDownloadRequest_ExtendedAttr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(ClientDownloadRequest_ExtendedAttr* other);
  friend void swap(ClientDownloadRequest_ExtendedAttr& a, ClientDownloadRequest_ExtendedAttr& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest_ExtendedAttr* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest_ExtendedAttr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest_ExtendedAttr& from);
  void MergeFrom(const ClientDownloadRequest_ExtendedAttr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest_ExtendedAttr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional bytes value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest.ExtendedAttr)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest_SignatureInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest.SignatureInfo) */ {
 public:
  ClientDownloadRequest_SignatureInfo();
  virtual ~ClientDownloadRequest_SignatureInfo();

  ClientDownloadRequest_SignatureInfo(const ClientDownloadRequest_SignatureInfo& from);

  inline ClientDownloadRequest_SignatureInfo& operator=(const ClientDownloadRequest_SignatureInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest_SignatureInfo(ClientDownloadRequest_SignatureInfo&& from) noexcept
    : ClientDownloadRequest_SignatureInfo() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest_SignatureInfo& operator=(ClientDownloadRequest_SignatureInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest_SignatureInfo& default_instance();

  static inline const ClientDownloadRequest_SignatureInfo* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest_SignatureInfo*>(
               &_ClientDownloadRequest_SignatureInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ClientDownloadRequest_SignatureInfo* other);
  friend void swap(ClientDownloadRequest_SignatureInfo& a, ClientDownloadRequest_SignatureInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest_SignatureInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest_SignatureInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest_SignatureInfo& from);
  void MergeFrom(const ClientDownloadRequest_SignatureInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest_SignatureInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientDownloadRequest.CertificateChain certificate_chain = 1;
  int certificate_chain_size() const;
  void clear_certificate_chain();
  static const int kCertificateChainFieldNumber = 1;
  const ::safe_browsing::ClientDownloadRequest_CertificateChain& certificate_chain(int index) const;
  ::safe_browsing::ClientDownloadRequest_CertificateChain* mutable_certificate_chain(int index);
  ::safe_browsing::ClientDownloadRequest_CertificateChain* add_certificate_chain();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_CertificateChain >*
      mutable_certificate_chain();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_CertificateChain >&
      certificate_chain() const;

  // repeated bytes signed_data = 3;
  int signed_data_size() const;
  void clear_signed_data();
  static const int kSignedDataFieldNumber = 3;
  const ::std::string& signed_data(int index) const;
  ::std::string* mutable_signed_data(int index);
  void set_signed_data(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_signed_data(int index, ::std::string&& value);
  #endif
  void set_signed_data(int index, const char* value);
  void set_signed_data(int index, const void* value, size_t size);
  ::std::string* add_signed_data();
  void add_signed_data(const ::std::string& value);
  #if LANG_CXX11
  void add_signed_data(::std::string&& value);
  #endif
  void add_signed_data(const char* value);
  void add_signed_data(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& signed_data() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_signed_data();

  // repeated .safe_browsing.ClientDownloadRequest.ExtendedAttr xattr = 4;
  int xattr_size() const;
  void clear_xattr();
  static const int kXattrFieldNumber = 4;
  const ::safe_browsing::ClientDownloadRequest_ExtendedAttr& xattr(int index) const;
  ::safe_browsing::ClientDownloadRequest_ExtendedAttr* mutable_xattr(int index);
  ::safe_browsing::ClientDownloadRequest_ExtendedAttr* add_xattr();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_ExtendedAttr >*
      mutable_xattr();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_ExtendedAttr >&
      xattr() const;

  // optional bool trusted = 2;
  bool has_trusted() const;
  void clear_trusted();
  static const int kTrustedFieldNumber = 2;
  bool trusted() const;
  void set_trusted(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest.SignatureInfo)
 private:
  void set_has_trusted();
  void clear_has_trusted();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_CertificateChain > certificate_chain_;
  ::google::protobuf::RepeatedPtrField< ::std::string> signed_data_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_ExtendedAttr > xattr_;
  bool trusted_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest_PEImageHeaders_DebugData : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData) */ {
 public:
  ClientDownloadRequest_PEImageHeaders_DebugData();
  virtual ~ClientDownloadRequest_PEImageHeaders_DebugData();

  ClientDownloadRequest_PEImageHeaders_DebugData(const ClientDownloadRequest_PEImageHeaders_DebugData& from);

  inline ClientDownloadRequest_PEImageHeaders_DebugData& operator=(const ClientDownloadRequest_PEImageHeaders_DebugData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest_PEImageHeaders_DebugData(ClientDownloadRequest_PEImageHeaders_DebugData&& from) noexcept
    : ClientDownloadRequest_PEImageHeaders_DebugData() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest_PEImageHeaders_DebugData& operator=(ClientDownloadRequest_PEImageHeaders_DebugData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest_PEImageHeaders_DebugData& default_instance();

  static inline const ClientDownloadRequest_PEImageHeaders_DebugData* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest_PEImageHeaders_DebugData*>(
               &_ClientDownloadRequest_PEImageHeaders_DebugData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(ClientDownloadRequest_PEImageHeaders_DebugData* other);
  friend void swap(ClientDownloadRequest_PEImageHeaders_DebugData& a, ClientDownloadRequest_PEImageHeaders_DebugData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest_PEImageHeaders_DebugData* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest_PEImageHeaders_DebugData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest_PEImageHeaders_DebugData& from);
  void MergeFrom(const ClientDownloadRequest_PEImageHeaders_DebugData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest_PEImageHeaders_DebugData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes directory_entry = 1;
  bool has_directory_entry() const;
  void clear_directory_entry();
  static const int kDirectoryEntryFieldNumber = 1;
  const ::std::string& directory_entry() const;
  void set_directory_entry(const ::std::string& value);
  #if LANG_CXX11
  void set_directory_entry(::std::string&& value);
  #endif
  void set_directory_entry(const char* value);
  void set_directory_entry(const void* value, size_t size);
  ::std::string* mutable_directory_entry();
  ::std::string* release_directory_entry();
  void set_allocated_directory_entry(::std::string* directory_entry);

  // optional bytes raw_data = 2;
  bool has_raw_data() const;
  void clear_raw_data();
  static const int kRawDataFieldNumber = 2;
  const ::std::string& raw_data() const;
  void set_raw_data(const ::std::string& value);
  #if LANG_CXX11
  void set_raw_data(::std::string&& value);
  #endif
  void set_raw_data(const char* value);
  void set_raw_data(const void* value, size_t size);
  ::std::string* mutable_raw_data();
  ::std::string* release_raw_data();
  void set_allocated_raw_data(::std::string* raw_data);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData)
 private:
  void set_has_directory_entry();
  void clear_has_directory_entry();
  void set_has_raw_data();
  void clear_has_raw_data();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr directory_entry_;
  ::google::protobuf::internal::ArenaStringPtr raw_data_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest_PEImageHeaders : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest.PEImageHeaders) */ {
 public:
  ClientDownloadRequest_PEImageHeaders();
  virtual ~ClientDownloadRequest_PEImageHeaders();

  ClientDownloadRequest_PEImageHeaders(const ClientDownloadRequest_PEImageHeaders& from);

  inline ClientDownloadRequest_PEImageHeaders& operator=(const ClientDownloadRequest_PEImageHeaders& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest_PEImageHeaders(ClientDownloadRequest_PEImageHeaders&& from) noexcept
    : ClientDownloadRequest_PEImageHeaders() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest_PEImageHeaders& operator=(ClientDownloadRequest_PEImageHeaders&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest_PEImageHeaders& default_instance();

  static inline const ClientDownloadRequest_PEImageHeaders* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest_PEImageHeaders*>(
               &_ClientDownloadRequest_PEImageHeaders_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(ClientDownloadRequest_PEImageHeaders* other);
  friend void swap(ClientDownloadRequest_PEImageHeaders& a, ClientDownloadRequest_PEImageHeaders& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest_PEImageHeaders* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest_PEImageHeaders* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest_PEImageHeaders& from);
  void MergeFrom(const ClientDownloadRequest_PEImageHeaders& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest_PEImageHeaders* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientDownloadRequest_PEImageHeaders_DebugData DebugData;

  // accessors -------------------------------------------------------

  // repeated bytes section_header = 5;
  int section_header_size() const;
  void clear_section_header();
  static const int kSectionHeaderFieldNumber = 5;
  const ::std::string& section_header(int index) const;
  ::std::string* mutable_section_header(int index);
  void set_section_header(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_section_header(int index, ::std::string&& value);
  #endif
  void set_section_header(int index, const char* value);
  void set_section_header(int index, const void* value, size_t size);
  ::std::string* add_section_header();
  void add_section_header(const ::std::string& value);
  #if LANG_CXX11
  void add_section_header(::std::string&& value);
  #endif
  void add_section_header(const char* value);
  void add_section_header(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& section_header() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_section_header();

  // repeated .safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData debug_data = 7;
  int debug_data_size() const;
  void clear_debug_data();
  static const int kDebugDataFieldNumber = 7;
  const ::safe_browsing::ClientDownloadRequest_PEImageHeaders_DebugData& debug_data(int index) const;
  ::safe_browsing::ClientDownloadRequest_PEImageHeaders_DebugData* mutable_debug_data(int index);
  ::safe_browsing::ClientDownloadRequest_PEImageHeaders_DebugData* add_debug_data();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_PEImageHeaders_DebugData >*
      mutable_debug_data();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_PEImageHeaders_DebugData >&
      debug_data() const;

  // optional bytes dos_header = 1;
  bool has_dos_header() const;
  void clear_dos_header();
  static const int kDosHeaderFieldNumber = 1;
  const ::std::string& dos_header() const;
  void set_dos_header(const ::std::string& value);
  #if LANG_CXX11
  void set_dos_header(::std::string&& value);
  #endif
  void set_dos_header(const char* value);
  void set_dos_header(const void* value, size_t size);
  ::std::string* mutable_dos_header();
  ::std::string* release_dos_header();
  void set_allocated_dos_header(::std::string* dos_header);

  // optional bytes file_header = 2;
  bool has_file_header() const;
  void clear_file_header();
  static const int kFileHeaderFieldNumber = 2;
  const ::std::string& file_header() const;
  void set_file_header(const ::std::string& value);
  #if LANG_CXX11
  void set_file_header(::std::string&& value);
  #endif
  void set_file_header(const char* value);
  void set_file_header(const void* value, size_t size);
  ::std::string* mutable_file_header();
  ::std::string* release_file_header();
  void set_allocated_file_header(::std::string* file_header);

  // optional bytes optional_headers32 = 3;
  bool has_optional_headers32() const;
  void clear_optional_headers32();
  static const int kOptionalHeaders32FieldNumber = 3;
  const ::std::string& optional_headers32() const;
  void set_optional_headers32(const ::std::string& value);
  #if LANG_CXX11
  void set_optional_headers32(::std::string&& value);
  #endif
  void set_optional_headers32(const char* value);
  void set_optional_headers32(const void* value, size_t size);
  ::std::string* mutable_optional_headers32();
  ::std::string* release_optional_headers32();
  void set_allocated_optional_headers32(::std::string* optional_headers32);

  // optional bytes optional_headers64 = 4;
  bool has_optional_headers64() const;
  void clear_optional_headers64();
  static const int kOptionalHeaders64FieldNumber = 4;
  const ::std::string& optional_headers64() const;
  void set_optional_headers64(const ::std::string& value);
  #if LANG_CXX11
  void set_optional_headers64(::std::string&& value);
  #endif
  void set_optional_headers64(const char* value);
  void set_optional_headers64(const void* value, size_t size);
  ::std::string* mutable_optional_headers64();
  ::std::string* release_optional_headers64();
  void set_allocated_optional_headers64(::std::string* optional_headers64);

  // optional bytes export_section_data = 6;
  bool has_export_section_data() const;
  void clear_export_section_data();
  static const int kExportSectionDataFieldNumber = 6;
  const ::std::string& export_section_data() const;
  void set_export_section_data(const ::std::string& value);
  #if LANG_CXX11
  void set_export_section_data(::std::string&& value);
  #endif
  void set_export_section_data(const char* value);
  void set_export_section_data(const void* value, size_t size);
  ::std::string* mutable_export_section_data();
  ::std::string* release_export_section_data();
  void set_allocated_export_section_data(::std::string* export_section_data);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest.PEImageHeaders)
 private:
  void set_has_dos_header();
  void clear_has_dos_header();
  void set_has_file_header();
  void clear_has_file_header();
  void set_has_optional_headers32();
  void clear_has_optional_headers32();
  void set_has_optional_headers64();
  void clear_has_optional_headers64();
  void set_has_export_section_data();
  void clear_has_export_section_data();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> section_header_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_PEImageHeaders_DebugData > debug_data_;
  ::google::protobuf::internal::ArenaStringPtr dos_header_;
  ::google::protobuf::internal::ArenaStringPtr file_header_;
  ::google::protobuf::internal::ArenaStringPtr optional_headers32_;
  ::google::protobuf::internal::ArenaStringPtr optional_headers64_;
  ::google::protobuf::internal::ArenaStringPtr export_section_data_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest_MachOHeaders_LoadCommand : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand) */ {
 public:
  ClientDownloadRequest_MachOHeaders_LoadCommand();
  virtual ~ClientDownloadRequest_MachOHeaders_LoadCommand();

  ClientDownloadRequest_MachOHeaders_LoadCommand(const ClientDownloadRequest_MachOHeaders_LoadCommand& from);

  inline ClientDownloadRequest_MachOHeaders_LoadCommand& operator=(const ClientDownloadRequest_MachOHeaders_LoadCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest_MachOHeaders_LoadCommand(ClientDownloadRequest_MachOHeaders_LoadCommand&& from) noexcept
    : ClientDownloadRequest_MachOHeaders_LoadCommand() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest_MachOHeaders_LoadCommand& operator=(ClientDownloadRequest_MachOHeaders_LoadCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest_MachOHeaders_LoadCommand& default_instance();

  static inline const ClientDownloadRequest_MachOHeaders_LoadCommand* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest_MachOHeaders_LoadCommand*>(
               &_ClientDownloadRequest_MachOHeaders_LoadCommand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(ClientDownloadRequest_MachOHeaders_LoadCommand* other);
  friend void swap(ClientDownloadRequest_MachOHeaders_LoadCommand& a, ClientDownloadRequest_MachOHeaders_LoadCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest_MachOHeaders_LoadCommand* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest_MachOHeaders_LoadCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest_MachOHeaders_LoadCommand& from);
  void MergeFrom(const ClientDownloadRequest_MachOHeaders_LoadCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest_MachOHeaders_LoadCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes command = 2;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 2;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  #if LANG_CXX11
  void set_command(::std::string&& value);
  #endif
  void set_command(const char* value);
  void set_command(const void* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // required uint32 command_id = 1;
  bool has_command_id() const;
  void clear_command_id();
  static const int kCommandIdFieldNumber = 1;
  ::google::protobuf::uint32 command_id() const;
  void set_command_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand)
 private:
  void set_has_command_id();
  void clear_has_command_id();
  void set_has_command();
  void clear_has_command();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  ::google::protobuf::uint32 command_id_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest_MachOHeaders : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest.MachOHeaders) */ {
 public:
  ClientDownloadRequest_MachOHeaders();
  virtual ~ClientDownloadRequest_MachOHeaders();

  ClientDownloadRequest_MachOHeaders(const ClientDownloadRequest_MachOHeaders& from);

  inline ClientDownloadRequest_MachOHeaders& operator=(const ClientDownloadRequest_MachOHeaders& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest_MachOHeaders(ClientDownloadRequest_MachOHeaders&& from) noexcept
    : ClientDownloadRequest_MachOHeaders() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest_MachOHeaders& operator=(ClientDownloadRequest_MachOHeaders&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest_MachOHeaders& default_instance();

  static inline const ClientDownloadRequest_MachOHeaders* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest_MachOHeaders*>(
               &_ClientDownloadRequest_MachOHeaders_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(ClientDownloadRequest_MachOHeaders* other);
  friend void swap(ClientDownloadRequest_MachOHeaders& a, ClientDownloadRequest_MachOHeaders& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest_MachOHeaders* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest_MachOHeaders* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest_MachOHeaders& from);
  void MergeFrom(const ClientDownloadRequest_MachOHeaders& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest_MachOHeaders* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientDownloadRequest_MachOHeaders_LoadCommand LoadCommand;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand load_commands = 2;
  int load_commands_size() const;
  void clear_load_commands();
  static const int kLoadCommandsFieldNumber = 2;
  const ::safe_browsing::ClientDownloadRequest_MachOHeaders_LoadCommand& load_commands(int index) const;
  ::safe_browsing::ClientDownloadRequest_MachOHeaders_LoadCommand* mutable_load_commands(int index);
  ::safe_browsing::ClientDownloadRequest_MachOHeaders_LoadCommand* add_load_commands();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_MachOHeaders_LoadCommand >*
      mutable_load_commands();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_MachOHeaders_LoadCommand >&
      load_commands() const;

  // required bytes mach_header = 1;
  bool has_mach_header() const;
  void clear_mach_header();
  static const int kMachHeaderFieldNumber = 1;
  const ::std::string& mach_header() const;
  void set_mach_header(const ::std::string& value);
  #if LANG_CXX11
  void set_mach_header(::std::string&& value);
  #endif
  void set_mach_header(const char* value);
  void set_mach_header(const void* value, size_t size);
  ::std::string* mutable_mach_header();
  ::std::string* release_mach_header();
  void set_allocated_mach_header(::std::string* mach_header);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest.MachOHeaders)
 private:
  void set_has_mach_header();
  void clear_has_mach_header();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_MachOHeaders_LoadCommand > load_commands_;
  ::google::protobuf::internal::ArenaStringPtr mach_header_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest_ImageHeaders : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest.ImageHeaders) */ {
 public:
  ClientDownloadRequest_ImageHeaders();
  virtual ~ClientDownloadRequest_ImageHeaders();

  ClientDownloadRequest_ImageHeaders(const ClientDownloadRequest_ImageHeaders& from);

  inline ClientDownloadRequest_ImageHeaders& operator=(const ClientDownloadRequest_ImageHeaders& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest_ImageHeaders(ClientDownloadRequest_ImageHeaders&& from) noexcept
    : ClientDownloadRequest_ImageHeaders() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest_ImageHeaders& operator=(ClientDownloadRequest_ImageHeaders&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest_ImageHeaders& default_instance();

  static inline const ClientDownloadRequest_ImageHeaders* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest_ImageHeaders*>(
               &_ClientDownloadRequest_ImageHeaders_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ClientDownloadRequest_ImageHeaders* other);
  friend void swap(ClientDownloadRequest_ImageHeaders& a, ClientDownloadRequest_ImageHeaders& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest_ImageHeaders* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest_ImageHeaders* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest_ImageHeaders& from);
  void MergeFrom(const ClientDownloadRequest_ImageHeaders& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest_ImageHeaders* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientDownloadRequest.MachOHeaders mach_o_headers = 2;
  int mach_o_headers_size() const;
  void clear_mach_o_headers();
  static const int kMachOHeadersFieldNumber = 2;
  const ::safe_browsing::ClientDownloadRequest_MachOHeaders& mach_o_headers(int index) const;
  ::safe_browsing::ClientDownloadRequest_MachOHeaders* mutable_mach_o_headers(int index);
  ::safe_browsing::ClientDownloadRequest_MachOHeaders* add_mach_o_headers();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_MachOHeaders >*
      mutable_mach_o_headers();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_MachOHeaders >&
      mach_o_headers() const;

  // optional .safe_browsing.ClientDownloadRequest.PEImageHeaders pe_headers = 1;
  bool has_pe_headers() const;
  void clear_pe_headers();
  static const int kPeHeadersFieldNumber = 1;
  const ::safe_browsing::ClientDownloadRequest_PEImageHeaders& pe_headers() const;
  ::safe_browsing::ClientDownloadRequest_PEImageHeaders* mutable_pe_headers();
  ::safe_browsing::ClientDownloadRequest_PEImageHeaders* release_pe_headers();
  void set_allocated_pe_headers(::safe_browsing::ClientDownloadRequest_PEImageHeaders* pe_headers);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest.ImageHeaders)
 private:
  void set_has_pe_headers();
  void clear_has_pe_headers();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_MachOHeaders > mach_o_headers_;
  ::safe_browsing::ClientDownloadRequest_PEImageHeaders* pe_headers_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest_ArchivedBinary : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest.ArchivedBinary) */ {
 public:
  ClientDownloadRequest_ArchivedBinary();
  virtual ~ClientDownloadRequest_ArchivedBinary();

  ClientDownloadRequest_ArchivedBinary(const ClientDownloadRequest_ArchivedBinary& from);

  inline ClientDownloadRequest_ArchivedBinary& operator=(const ClientDownloadRequest_ArchivedBinary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest_ArchivedBinary(ClientDownloadRequest_ArchivedBinary&& from) noexcept
    : ClientDownloadRequest_ArchivedBinary() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest_ArchivedBinary& operator=(ClientDownloadRequest_ArchivedBinary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest_ArchivedBinary& default_instance();

  static inline const ClientDownloadRequest_ArchivedBinary* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest_ArchivedBinary*>(
               &_ClientDownloadRequest_ArchivedBinary_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(ClientDownloadRequest_ArchivedBinary* other);
  friend void swap(ClientDownloadRequest_ArchivedBinary& a, ClientDownloadRequest_ArchivedBinary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest_ArchivedBinary* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest_ArchivedBinary* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest_ArchivedBinary& from);
  void MergeFrom(const ClientDownloadRequest_ArchivedBinary& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest_ArchivedBinary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string file_basename = 1;
  bool has_file_basename() const;
  void clear_file_basename();
  static const int kFileBasenameFieldNumber = 1;
  const ::std::string& file_basename() const;
  void set_file_basename(const ::std::string& value);
  #if LANG_CXX11
  void set_file_basename(::std::string&& value);
  #endif
  void set_file_basename(const char* value);
  void set_file_basename(const char* value, size_t size);
  ::std::string* mutable_file_basename();
  ::std::string* release_file_basename();
  void set_allocated_file_basename(::std::string* file_basename);

  // optional .safe_browsing.ClientDownloadRequest.Digests digests = 3;
  bool has_digests() const;
  void clear_digests();
  static const int kDigestsFieldNumber = 3;
  const ::safe_browsing::ClientDownloadRequest_Digests& digests() const;
  ::safe_browsing::ClientDownloadRequest_Digests* mutable_digests();
  ::safe_browsing::ClientDownloadRequest_Digests* release_digests();
  void set_allocated_digests(::safe_browsing::ClientDownloadRequest_Digests* digests);

  // optional .safe_browsing.ClientDownloadRequest.SignatureInfo signature = 5;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 5;
  const ::safe_browsing::ClientDownloadRequest_SignatureInfo& signature() const;
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* mutable_signature();
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* release_signature();
  void set_allocated_signature(::safe_browsing::ClientDownloadRequest_SignatureInfo* signature);

  // optional .safe_browsing.ClientDownloadRequest.ImageHeaders image_headers = 6;
  bool has_image_headers() const;
  void clear_image_headers();
  static const int kImageHeadersFieldNumber = 6;
  const ::safe_browsing::ClientDownloadRequest_ImageHeaders& image_headers() const;
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* mutable_image_headers();
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* release_image_headers();
  void set_allocated_image_headers(::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers);

  // optional int64 length = 4;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 4;
  ::google::protobuf::int64 length() const;
  void set_length(::google::protobuf::int64 value);

  // optional .safe_browsing.ClientDownloadRequest.DownloadType download_type = 2;
  bool has_download_type() const;
  void clear_download_type();
  static const int kDownloadTypeFieldNumber = 2;
  ::safe_browsing::ClientDownloadRequest_DownloadType download_type() const;
  void set_download_type(::safe_browsing::ClientDownloadRequest_DownloadType value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest.ArchivedBinary)
 private:
  void set_has_file_basename();
  void clear_has_file_basename();
  void set_has_download_type();
  void clear_has_download_type();
  void set_has_digests();
  void clear_has_digests();
  void set_has_length();
  void clear_has_length();
  void set_has_signature();
  void clear_has_signature();
  void set_has_image_headers();
  void clear_has_image_headers();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_basename_;
  ::safe_browsing::ClientDownloadRequest_Digests* digests_;
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* signature_;
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers_;
  ::google::protobuf::int64 length_;
  int download_type_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadRequest) */ {
 public:
  ClientDownloadRequest();
  virtual ~ClientDownloadRequest();

  ClientDownloadRequest(const ClientDownloadRequest& from);

  inline ClientDownloadRequest& operator=(const ClientDownloadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadRequest(ClientDownloadRequest&& from) noexcept
    : ClientDownloadRequest() {
    *this = ::std::move(from);
  }

  inline ClientDownloadRequest& operator=(ClientDownloadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadRequest& default_instance();

  static inline const ClientDownloadRequest* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadRequest*>(
               &_ClientDownloadRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(ClientDownloadRequest* other);
  friend void swap(ClientDownloadRequest& a, ClientDownloadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadRequest& from);
  void MergeFrom(const ClientDownloadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientDownloadRequest_Digests Digests;
  typedef ClientDownloadRequest_Resource Resource;
  typedef ClientDownloadRequest_CertificateChain CertificateChain;
  typedef ClientDownloadRequest_ExtendedAttr ExtendedAttr;
  typedef ClientDownloadRequest_SignatureInfo SignatureInfo;
  typedef ClientDownloadRequest_PEImageHeaders PEImageHeaders;
  typedef ClientDownloadRequest_MachOHeaders MachOHeaders;
  typedef ClientDownloadRequest_ImageHeaders ImageHeaders;
  typedef ClientDownloadRequest_ArchivedBinary ArchivedBinary;

  typedef ClientDownloadRequest_ResourceType ResourceType;
  static const ResourceType DOWNLOAD_URL =
    ClientDownloadRequest_ResourceType_DOWNLOAD_URL;
  static const ResourceType DOWNLOAD_REDIRECT =
    ClientDownloadRequest_ResourceType_DOWNLOAD_REDIRECT;
  static const ResourceType TAB_URL =
    ClientDownloadRequest_ResourceType_TAB_URL;
  static const ResourceType TAB_REDIRECT =
    ClientDownloadRequest_ResourceType_TAB_REDIRECT;
  static const ResourceType PPAPI_DOCUMENT =
    ClientDownloadRequest_ResourceType_PPAPI_DOCUMENT;
  static const ResourceType PPAPI_PLUGIN =
    ClientDownloadRequest_ResourceType_PPAPI_PLUGIN;
  static inline bool ResourceType_IsValid(int value) {
    return ClientDownloadRequest_ResourceType_IsValid(value);
  }
  static const ResourceType ResourceType_MIN =
    ClientDownloadRequest_ResourceType_ResourceType_MIN;
  static const ResourceType ResourceType_MAX =
    ClientDownloadRequest_ResourceType_ResourceType_MAX;
  static const int ResourceType_ARRAYSIZE =
    ClientDownloadRequest_ResourceType_ResourceType_ARRAYSIZE;

  typedef ClientDownloadRequest_DownloadType DownloadType;
  static const DownloadType WIN_EXECUTABLE =
    ClientDownloadRequest_DownloadType_WIN_EXECUTABLE;
  static const DownloadType CHROME_EXTENSION =
    ClientDownloadRequest_DownloadType_CHROME_EXTENSION;
  static const DownloadType ANDROID_APK =
    ClientDownloadRequest_DownloadType_ANDROID_APK;
  static const DownloadType ZIPPED_EXECUTABLE =
    ClientDownloadRequest_DownloadType_ZIPPED_EXECUTABLE;
  static const DownloadType MAC_EXECUTABLE =
    ClientDownloadRequest_DownloadType_MAC_EXECUTABLE;
  static const DownloadType ZIPPED_ARCHIVE =
    ClientDownloadRequest_DownloadType_ZIPPED_ARCHIVE;
  static const DownloadType ARCHIVE =
    ClientDownloadRequest_DownloadType_ARCHIVE;
  static const DownloadType INVALID_ZIP =
    ClientDownloadRequest_DownloadType_INVALID_ZIP;
  static const DownloadType INVALID_MAC_ARCHIVE =
    ClientDownloadRequest_DownloadType_INVALID_MAC_ARCHIVE;
  static const DownloadType PPAPI_SAVE_REQUEST =
    ClientDownloadRequest_DownloadType_PPAPI_SAVE_REQUEST;
  static const DownloadType SAMPLED_UNSUPPORTED_FILE =
    ClientDownloadRequest_DownloadType_SAMPLED_UNSUPPORTED_FILE;
  static inline bool DownloadType_IsValid(int value) {
    return ClientDownloadRequest_DownloadType_IsValid(value);
  }
  static const DownloadType DownloadType_MIN =
    ClientDownloadRequest_DownloadType_DownloadType_MIN;
  static const DownloadType DownloadType_MAX =
    ClientDownloadRequest_DownloadType_DownloadType_MAX;
  static const int DownloadType_ARRAYSIZE =
    ClientDownloadRequest_DownloadType_DownloadType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientDownloadRequest.Resource resources = 4;
  int resources_size() const;
  void clear_resources();
  static const int kResourcesFieldNumber = 4;
  const ::safe_browsing::ClientDownloadRequest_Resource& resources(int index) const;
  ::safe_browsing::ClientDownloadRequest_Resource* mutable_resources(int index);
  ::safe_browsing::ClientDownloadRequest_Resource* add_resources();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_Resource >*
      mutable_resources();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_Resource >&
      resources() const;

  // repeated .safe_browsing.ClientDownloadRequest.ArchivedBinary archived_binary = 22;
  int archived_binary_size() const;
  void clear_archived_binary();
  static const int kArchivedBinaryFieldNumber = 22;
  const ::safe_browsing::ClientDownloadRequest_ArchivedBinary& archived_binary(int index) const;
  ::safe_browsing::ClientDownloadRequest_ArchivedBinary* mutable_archived_binary(int index);
  ::safe_browsing::ClientDownloadRequest_ArchivedBinary* add_archived_binary();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_ArchivedBinary >*
      mutable_archived_binary();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_ArchivedBinary >&
      archived_binary() const;

  // repeated string alternate_extensions = 35;
  int alternate_extensions_size() const;
  void clear_alternate_extensions();
  static const int kAlternateExtensionsFieldNumber = 35;
  const ::std::string& alternate_extensions(int index) const;
  ::std::string* mutable_alternate_extensions(int index);
  void set_alternate_extensions(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_alternate_extensions(int index, ::std::string&& value);
  #endif
  void set_alternate_extensions(int index, const char* value);
  void set_alternate_extensions(int index, const char* value, size_t size);
  ::std::string* add_alternate_extensions();
  void add_alternate_extensions(const ::std::string& value);
  #if LANG_CXX11
  void add_alternate_extensions(::std::string&& value);
  #endif
  void add_alternate_extensions(const char* value);
  void add_alternate_extensions(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& alternate_extensions() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_alternate_extensions();

  // repeated .safe_browsing.ReferrerChainEntry referrer_chain = 36;
  int referrer_chain_size() const;
  void clear_referrer_chain();
  static const int kReferrerChainFieldNumber = 36;
  const ::safe_browsing::ReferrerChainEntry& referrer_chain(int index) const;
  ::safe_browsing::ReferrerChainEntry* mutable_referrer_chain(int index);
  ::safe_browsing::ReferrerChainEntry* add_referrer_chain();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry >*
      mutable_referrer_chain();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry >&
      referrer_chain() const;

  // required string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string file_basename = 9;
  bool has_file_basename() const;
  void clear_file_basename();
  static const int kFileBasenameFieldNumber = 9;
  const ::std::string& file_basename() const;
  void set_file_basename(const ::std::string& value);
  #if LANG_CXX11
  void set_file_basename(::std::string&& value);
  #endif
  void set_file_basename(const char* value);
  void set_file_basename(const char* value, size_t size);
  ::std::string* mutable_file_basename();
  ::std::string* release_file_basename();
  void set_allocated_file_basename(::std::string* file_basename);

  // optional string locale = 11;
  bool has_locale() const;
  void clear_locale();
  static const int kLocaleFieldNumber = 11;
  const ::std::string& locale() const;
  void set_locale(const ::std::string& value);
  #if LANG_CXX11
  void set_locale(::std::string&& value);
  #endif
  void set_locale(const char* value);
  void set_locale(const char* value, size_t size);
  ::std::string* mutable_locale();
  ::std::string* release_locale();
  void set_allocated_locale(::std::string* locale);

  // optional bytes udif_code_signature = 40;
  bool has_udif_code_signature() const;
  void clear_udif_code_signature();
  static const int kUdifCodeSignatureFieldNumber = 40;
  const ::std::string& udif_code_signature() const;
  void set_udif_code_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_udif_code_signature(::std::string&& value);
  #endif
  void set_udif_code_signature(const char* value);
  void set_udif_code_signature(const void* value, size_t size);
  ::std::string* mutable_udif_code_signature();
  ::std::string* release_udif_code_signature();
  void set_allocated_udif_code_signature(::std::string* udif_code_signature);

  // required .safe_browsing.ClientDownloadRequest.Digests digests = 2;
  bool has_digests() const;
  void clear_digests();
  static const int kDigestsFieldNumber = 2;
  const ::safe_browsing::ClientDownloadRequest_Digests& digests() const;
  ::safe_browsing::ClientDownloadRequest_Digests* mutable_digests();
  ::safe_browsing::ClientDownloadRequest_Digests* release_digests();
  void set_allocated_digests(::safe_browsing::ClientDownloadRequest_Digests* digests);

  // optional .safe_browsing.ClientDownloadRequest.SignatureInfo signature = 5;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 5;
  const ::safe_browsing::ClientDownloadRequest_SignatureInfo& signature() const;
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* mutable_signature();
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* release_signature();
  void set_allocated_signature(::safe_browsing::ClientDownloadRequest_SignatureInfo* signature);

  // optional .safe_browsing.ClientDownloadRequest.ImageHeaders image_headers = 18;
  bool has_image_headers() const;
  void clear_image_headers();
  static const int kImageHeadersFieldNumber = 18;
  const ::safe_browsing::ClientDownloadRequest_ImageHeaders& image_headers() const;
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* mutable_image_headers();
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* release_image_headers();
  void set_allocated_image_headers(::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers);

  // optional .safe_browsing.ChromeUserPopulation population = 24;
  bool has_population() const;
  void clear_population();
  static const int kPopulationFieldNumber = 24;
  const ::safe_browsing::ChromeUserPopulation& population() const;
  ::safe_browsing::ChromeUserPopulation* mutable_population();
  ::safe_browsing::ChromeUserPopulation* release_population();
  void set_allocated_population(::safe_browsing::ChromeUserPopulation* population);

  // required int64 length = 3;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 3;
  ::google::protobuf::int64 length() const;
  void set_length(::google::protobuf::int64 value);

  // optional bool DEPRECATED_download_attribution_finch_enabled = 39 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_deprecated_download_attribution_finch_enabled() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_deprecated_download_attribution_finch_enabled();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kDEPRECATEDDownloadAttributionFinchEnabledFieldNumber = 39;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool deprecated_download_attribution_finch_enabled() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_deprecated_download_attribution_finch_enabled(bool value);

  // optional .safe_browsing.ClientDownloadRequest.DownloadType download_type = 10 [default = WIN_EXECUTABLE];
  bool has_download_type() const;
  void clear_download_type();
  static const int kDownloadTypeFieldNumber = 10;
  ::safe_browsing::ClientDownloadRequest_DownloadType download_type() const;
  void set_download_type(::safe_browsing::ClientDownloadRequest_DownloadType value);

  // optional bool user_initiated = 6;
  bool has_user_initiated() const;
  void clear_user_initiated();
  static const int kUserInitiatedFieldNumber = 6;
  bool user_initiated() const;
  void set_user_initiated(bool value);

  // optional bool archive_valid = 26;
  bool has_archive_valid() const;
  void clear_archive_valid();
  static const int kArchiveValidFieldNumber = 26;
  bool archive_valid() const;
  void set_archive_valid(bool value);

  // optional bool skipped_url_whitelist = 28;
  bool has_skipped_url_whitelist() const;
  void clear_skipped_url_whitelist();
  static const int kSkippedUrlWhitelistFieldNumber = 28;
  bool skipped_url_whitelist() const;
  void set_skipped_url_whitelist(bool value);

  // optional bool skipped_certificate_whitelist = 31;
  bool has_skipped_certificate_whitelist() const;
  void clear_skipped_certificate_whitelist();
  static const int kSkippedCertificateWhitelistFieldNumber = 31;
  bool skipped_certificate_whitelist() const;
  void set_skipped_certificate_whitelist(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadRequest)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_digests();
  void clear_has_digests();
  void set_has_length();
  void clear_has_length();
  void set_has_signature();
  void clear_has_signature();
  void set_has_user_initiated();
  void clear_has_user_initiated();
  void set_has_file_basename();
  void clear_has_file_basename();
  void set_has_download_type();
  void clear_has_download_type();
  void set_has_locale();
  void clear_has_locale();
  void set_has_image_headers();
  void clear_has_image_headers();
  void set_has_population();
  void clear_has_population();
  void set_has_archive_valid();
  void clear_has_archive_valid();
  void set_has_skipped_url_whitelist();
  void clear_has_skipped_url_whitelist();
  void set_has_skipped_certificate_whitelist();
  void clear_has_skipped_certificate_whitelist();
  void set_has_deprecated_download_attribution_finch_enabled();
  void clear_has_deprecated_download_attribution_finch_enabled();
  void set_has_udif_code_signature();
  void clear_has_udif_code_signature();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_Resource > resources_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_ArchivedBinary > archived_binary_;
  ::google::protobuf::RepeatedPtrField< ::std::string> alternate_extensions_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry > referrer_chain_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr file_basename_;
  ::google::protobuf::internal::ArenaStringPtr locale_;
  ::google::protobuf::internal::ArenaStringPtr udif_code_signature_;
  ::safe_browsing::ClientDownloadRequest_Digests* digests_;
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* signature_;
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers_;
  ::safe_browsing::ChromeUserPopulation* population_;
  ::google::protobuf::int64 length_;
  bool deprecated_download_attribution_finch_enabled_;
  int download_type_;
  bool user_initiated_;
  bool archive_valid_;
  bool skipped_url_whitelist_;
  bool skipped_certificate_whitelist_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReferrerChainEntry_ServerRedirect : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ReferrerChainEntry.ServerRedirect) */ {
 public:
  ReferrerChainEntry_ServerRedirect();
  virtual ~ReferrerChainEntry_ServerRedirect();

  ReferrerChainEntry_ServerRedirect(const ReferrerChainEntry_ServerRedirect& from);

  inline ReferrerChainEntry_ServerRedirect& operator=(const ReferrerChainEntry_ServerRedirect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReferrerChainEntry_ServerRedirect(ReferrerChainEntry_ServerRedirect&& from) noexcept
    : ReferrerChainEntry_ServerRedirect() {
    *this = ::std::move(from);
  }

  inline ReferrerChainEntry_ServerRedirect& operator=(ReferrerChainEntry_ServerRedirect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ReferrerChainEntry_ServerRedirect& default_instance();

  static inline const ReferrerChainEntry_ServerRedirect* internal_default_instance() {
    return reinterpret_cast<const ReferrerChainEntry_ServerRedirect*>(
               &_ReferrerChainEntry_ServerRedirect_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(ReferrerChainEntry_ServerRedirect* other);
  friend void swap(ReferrerChainEntry_ServerRedirect& a, ReferrerChainEntry_ServerRedirect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReferrerChainEntry_ServerRedirect* New() const PROTOBUF_FINAL { return New(NULL); }

  ReferrerChainEntry_ServerRedirect* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ReferrerChainEntry_ServerRedirect& from);
  void MergeFrom(const ReferrerChainEntry_ServerRedirect& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReferrerChainEntry_ServerRedirect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:safe_browsing.ReferrerChainEntry.ServerRedirect)
 private:
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReferrerChainEntry : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ReferrerChainEntry) */ {
 public:
  ReferrerChainEntry();
  virtual ~ReferrerChainEntry();

  ReferrerChainEntry(const ReferrerChainEntry& from);

  inline ReferrerChainEntry& operator=(const ReferrerChainEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReferrerChainEntry(ReferrerChainEntry&& from) noexcept
    : ReferrerChainEntry() {
    *this = ::std::move(from);
  }

  inline ReferrerChainEntry& operator=(ReferrerChainEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ReferrerChainEntry& default_instance();

  static inline const ReferrerChainEntry* internal_default_instance() {
    return reinterpret_cast<const ReferrerChainEntry*>(
               &_ReferrerChainEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(ReferrerChainEntry* other);
  friend void swap(ReferrerChainEntry& a, ReferrerChainEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReferrerChainEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  ReferrerChainEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ReferrerChainEntry& from);
  void MergeFrom(const ReferrerChainEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReferrerChainEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ReferrerChainEntry_ServerRedirect ServerRedirect;

  typedef ReferrerChainEntry_URLType URLType;
  static const URLType EVENT_URL =
    ReferrerChainEntry_URLType_EVENT_URL;
  static const URLType LANDING_PAGE =
    ReferrerChainEntry_URLType_LANDING_PAGE;
  static const URLType LANDING_REFERRER =
    ReferrerChainEntry_URLType_LANDING_REFERRER;
  static const URLType CLIENT_REDIRECT =
    ReferrerChainEntry_URLType_CLIENT_REDIRECT;
  static const URLType DEPRECATED_SERVER_REDIRECT =
    ReferrerChainEntry_URLType_DEPRECATED_SERVER_REDIRECT;
  static inline bool URLType_IsValid(int value) {
    return ReferrerChainEntry_URLType_IsValid(value);
  }
  static const URLType URLType_MIN =
    ReferrerChainEntry_URLType_URLType_MIN;
  static const URLType URLType_MAX =
    ReferrerChainEntry_URLType_URLType_MAX;
  static const int URLType_ARRAYSIZE =
    ReferrerChainEntry_URLType_URLType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated string ip_addresses = 3;
  int ip_addresses_size() const;
  void clear_ip_addresses();
  static const int kIpAddressesFieldNumber = 3;
  const ::std::string& ip_addresses(int index) const;
  ::std::string* mutable_ip_addresses(int index);
  void set_ip_addresses(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_ip_addresses(int index, ::std::string&& value);
  #endif
  void set_ip_addresses(int index, const char* value);
  void set_ip_addresses(int index, const char* value, size_t size);
  ::std::string* add_ip_addresses();
  void add_ip_addresses(const ::std::string& value);
  #if LANG_CXX11
  void add_ip_addresses(::std::string&& value);
  #endif
  void add_ip_addresses(const char* value);
  void add_ip_addresses(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& ip_addresses() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_ip_addresses();

  // repeated .safe_browsing.ReferrerChainEntry.ServerRedirect server_redirect_chain = 8;
  int server_redirect_chain_size() const;
  void clear_server_redirect_chain();
  static const int kServerRedirectChainFieldNumber = 8;
  const ::safe_browsing::ReferrerChainEntry_ServerRedirect& server_redirect_chain(int index) const;
  ::safe_browsing::ReferrerChainEntry_ServerRedirect* mutable_server_redirect_chain(int index);
  ::safe_browsing::ReferrerChainEntry_ServerRedirect* add_server_redirect_chain();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry_ServerRedirect >*
      mutable_server_redirect_chain();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry_ServerRedirect >&
      server_redirect_chain() const;

  // optional string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string referrer_url = 4;
  bool has_referrer_url() const;
  void clear_referrer_url();
  static const int kReferrerUrlFieldNumber = 4;
  const ::std::string& referrer_url() const;
  void set_referrer_url(const ::std::string& value);
  #if LANG_CXX11
  void set_referrer_url(::std::string&& value);
  #endif
  void set_referrer_url(const char* value);
  void set_referrer_url(const char* value, size_t size);
  ::std::string* mutable_referrer_url();
  ::std::string* release_referrer_url();
  void set_allocated_referrer_url(::std::string* referrer_url);

  // optional string referrer_main_frame_url = 5;
  bool has_referrer_main_frame_url() const;
  void clear_referrer_main_frame_url();
  static const int kReferrerMainFrameUrlFieldNumber = 5;
  const ::std::string& referrer_main_frame_url() const;
  void set_referrer_main_frame_url(const ::std::string& value);
  #if LANG_CXX11
  void set_referrer_main_frame_url(::std::string&& value);
  #endif
  void set_referrer_main_frame_url(const char* value);
  void set_referrer_main_frame_url(const char* value, size_t size);
  ::std::string* mutable_referrer_main_frame_url();
  ::std::string* release_referrer_main_frame_url();
  void set_allocated_referrer_main_frame_url(::std::string* referrer_main_frame_url);

  // optional string main_frame_url = 9;
  bool has_main_frame_url() const;
  void clear_main_frame_url();
  static const int kMainFrameUrlFieldNumber = 9;
  const ::std::string& main_frame_url() const;
  void set_main_frame_url(const ::std::string& value);
  #if LANG_CXX11
  void set_main_frame_url(::std::string&& value);
  #endif
  void set_main_frame_url(const char* value);
  void set_main_frame_url(const char* value, size_t size);
  ::std::string* mutable_main_frame_url();
  ::std::string* release_main_frame_url();
  void set_allocated_main_frame_url(::std::string* main_frame_url);

  // optional double navigation_time_msec = 7;
  bool has_navigation_time_msec() const;
  void clear_navigation_time_msec();
  static const int kNavigationTimeMsecFieldNumber = 7;
  double navigation_time_msec() const;
  void set_navigation_time_msec(double value);

  // optional bool is_retargeting = 6;
  bool has_is_retargeting() const;
  void clear_is_retargeting();
  static const int kIsRetargetingFieldNumber = 6;
  bool is_retargeting() const;
  void set_is_retargeting(bool value);

  // optional .safe_browsing.ReferrerChainEntry.URLType type = 2 [default = CLIENT_REDIRECT];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::safe_browsing::ReferrerChainEntry_URLType type() const;
  void set_type(::safe_browsing::ReferrerChainEntry_URLType value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ReferrerChainEntry)
 private:
  void set_has_url();
  void clear_has_url();
  void set_has_main_frame_url();
  void clear_has_main_frame_url();
  void set_has_type();
  void clear_has_type();
  void set_has_referrer_url();
  void clear_has_referrer_url();
  void set_has_referrer_main_frame_url();
  void clear_has_referrer_main_frame_url();
  void set_has_is_retargeting();
  void clear_has_is_retargeting();
  void set_has_navigation_time_msec();
  void clear_has_navigation_time_msec();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> ip_addresses_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry_ServerRedirect > server_redirect_chain_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr referrer_url_;
  ::google::protobuf::internal::ArenaStringPtr referrer_main_frame_url_;
  ::google::protobuf::internal::ArenaStringPtr main_frame_url_;
  double navigation_time_msec_;
  bool is_retargeting_;
  int type_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadResponse_MoreInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadResponse.MoreInfo) */ {
 public:
  ClientDownloadResponse_MoreInfo();
  virtual ~ClientDownloadResponse_MoreInfo();

  ClientDownloadResponse_MoreInfo(const ClientDownloadResponse_MoreInfo& from);

  inline ClientDownloadResponse_MoreInfo& operator=(const ClientDownloadResponse_MoreInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadResponse_MoreInfo(ClientDownloadResponse_MoreInfo&& from) noexcept
    : ClientDownloadResponse_MoreInfo() {
    *this = ::std::move(from);
  }

  inline ClientDownloadResponse_MoreInfo& operator=(ClientDownloadResponse_MoreInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadResponse_MoreInfo& default_instance();

  static inline const ClientDownloadResponse_MoreInfo* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadResponse_MoreInfo*>(
               &_ClientDownloadResponse_MoreInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(ClientDownloadResponse_MoreInfo* other);
  friend void swap(ClientDownloadResponse_MoreInfo& a, ClientDownloadResponse_MoreInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadResponse_MoreInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadResponse_MoreInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadResponse_MoreInfo& from);
  void MergeFrom(const ClientDownloadResponse_MoreInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadResponse_MoreInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string description = 1;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 1;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadResponse.MoreInfo)
 private:
  void set_has_description();
  void clear_has_description();
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadResponse) */ {
 public:
  ClientDownloadResponse();
  virtual ~ClientDownloadResponse();

  ClientDownloadResponse(const ClientDownloadResponse& from);

  inline ClientDownloadResponse& operator=(const ClientDownloadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadResponse(ClientDownloadResponse&& from) noexcept
    : ClientDownloadResponse() {
    *this = ::std::move(from);
  }

  inline ClientDownloadResponse& operator=(ClientDownloadResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadResponse& default_instance();

  static inline const ClientDownloadResponse* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadResponse*>(
               &_ClientDownloadResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(ClientDownloadResponse* other);
  friend void swap(ClientDownloadResponse& a, ClientDownloadResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadResponse& from);
  void MergeFrom(const ClientDownloadResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientDownloadResponse_MoreInfo MoreInfo;

  typedef ClientDownloadResponse_Verdict Verdict;
  static const Verdict SAFE =
    ClientDownloadResponse_Verdict_SAFE;
  static const Verdict DANGEROUS =
    ClientDownloadResponse_Verdict_DANGEROUS;
  static const Verdict UNCOMMON =
    ClientDownloadResponse_Verdict_UNCOMMON;
  static const Verdict POTENTIALLY_UNWANTED =
    ClientDownloadResponse_Verdict_POTENTIALLY_UNWANTED;
  static const Verdict DANGEROUS_HOST =
    ClientDownloadResponse_Verdict_DANGEROUS_HOST;
  static const Verdict UNKNOWN =
    ClientDownloadResponse_Verdict_UNKNOWN;
  static inline bool Verdict_IsValid(int value) {
    return ClientDownloadResponse_Verdict_IsValid(value);
  }
  static const Verdict Verdict_MIN =
    ClientDownloadResponse_Verdict_Verdict_MIN;
  static const Verdict Verdict_MAX =
    ClientDownloadResponse_Verdict_Verdict_MAX;
  static const int Verdict_ARRAYSIZE =
    ClientDownloadResponse_Verdict_Verdict_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional bytes token = 3;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 3;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional .safe_browsing.ClientDownloadResponse.MoreInfo more_info = 2;
  bool has_more_info() const;
  void clear_more_info();
  static const int kMoreInfoFieldNumber = 2;
  const ::safe_browsing::ClientDownloadResponse_MoreInfo& more_info() const;
  ::safe_browsing::ClientDownloadResponse_MoreInfo* mutable_more_info();
  ::safe_browsing::ClientDownloadResponse_MoreInfo* release_more_info();
  void set_allocated_more_info(::safe_browsing::ClientDownloadResponse_MoreInfo* more_info);

  // optional .safe_browsing.ClientDownloadResponse.Verdict verdict = 1 [default = SAFE];
  bool has_verdict() const;
  void clear_verdict();
  static const int kVerdictFieldNumber = 1;
  ::safe_browsing::ClientDownloadResponse_Verdict verdict() const;
  void set_verdict(::safe_browsing::ClientDownloadResponse_Verdict value);

  // optional bool upload = 5;
  bool has_upload() const;
  void clear_upload();
  static const int kUploadFieldNumber = 5;
  bool upload() const;
  void set_upload(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadResponse)
 private:
  void set_has_verdict();
  void clear_has_verdict();
  void set_has_more_info();
  void clear_has_more_info();
  void set_has_token();
  void clear_has_token();
  void set_has_upload();
  void clear_has_upload();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::safe_browsing::ClientDownloadResponse_MoreInfo* more_info_;
  int verdict_;
  bool upload_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadReport_UserInformation : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadReport.UserInformation) */ {
 public:
  ClientDownloadReport_UserInformation();
  virtual ~ClientDownloadReport_UserInformation();

  ClientDownloadReport_UserInformation(const ClientDownloadReport_UserInformation& from);

  inline ClientDownloadReport_UserInformation& operator=(const ClientDownloadReport_UserInformation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadReport_UserInformation(ClientDownloadReport_UserInformation&& from) noexcept
    : ClientDownloadReport_UserInformation() {
    *this = ::std::move(from);
  }

  inline ClientDownloadReport_UserInformation& operator=(ClientDownloadReport_UserInformation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadReport_UserInformation& default_instance();

  static inline const ClientDownloadReport_UserInformation* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadReport_UserInformation*>(
               &_ClientDownloadReport_UserInformation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(ClientDownloadReport_UserInformation* other);
  friend void swap(ClientDownloadReport_UserInformation& a, ClientDownloadReport_UserInformation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadReport_UserInformation* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadReport_UserInformation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadReport_UserInformation& from);
  void MergeFrom(const ClientDownloadReport_UserInformation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadReport_UserInformation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string email = 1;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 1;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadReport.UserInformation)
 private:
  void set_has_email();
  void clear_has_email();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientDownloadReport : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientDownloadReport) */ {
 public:
  ClientDownloadReport();
  virtual ~ClientDownloadReport();

  ClientDownloadReport(const ClientDownloadReport& from);

  inline ClientDownloadReport& operator=(const ClientDownloadReport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientDownloadReport(ClientDownloadReport&& from) noexcept
    : ClientDownloadReport() {
    *this = ::std::move(from);
  }

  inline ClientDownloadReport& operator=(ClientDownloadReport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientDownloadReport& default_instance();

  static inline const ClientDownloadReport* internal_default_instance() {
    return reinterpret_cast<const ClientDownloadReport*>(
               &_ClientDownloadReport_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(ClientDownloadReport* other);
  friend void swap(ClientDownloadReport& a, ClientDownloadReport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientDownloadReport* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientDownloadReport* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientDownloadReport& from);
  void MergeFrom(const ClientDownloadReport& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDownloadReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientDownloadReport_UserInformation UserInformation;

  typedef ClientDownloadReport_Reason Reason;
  static const Reason SHARE =
    ClientDownloadReport_Reason_SHARE;
  static const Reason FALSE_POSITIVE =
    ClientDownloadReport_Reason_FALSE_POSITIVE;
  static const Reason APPEAL =
    ClientDownloadReport_Reason_APPEAL;
  static inline bool Reason_IsValid(int value) {
    return ClientDownloadReport_Reason_IsValid(value);
  }
  static const Reason Reason_MIN =
    ClientDownloadReport_Reason_Reason_MIN;
  static const Reason Reason_MAX =
    ClientDownloadReport_Reason_Reason_MAX;
  static const int Reason_ARRAYSIZE =
    ClientDownloadReport_Reason_Reason_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional bytes comment = 4;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 4;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const void* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional .safe_browsing.ClientDownloadRequest download_request = 2;
  bool has_download_request() const;
  void clear_download_request();
  static const int kDownloadRequestFieldNumber = 2;
  const ::safe_browsing::ClientDownloadRequest& download_request() const;
  ::safe_browsing::ClientDownloadRequest* mutable_download_request();
  ::safe_browsing::ClientDownloadRequest* release_download_request();
  void set_allocated_download_request(::safe_browsing::ClientDownloadRequest* download_request);

  // optional .safe_browsing.ClientDownloadReport.UserInformation user_information = 3;
  bool has_user_information() const;
  void clear_user_information();
  static const int kUserInformationFieldNumber = 3;
  const ::safe_browsing::ClientDownloadReport_UserInformation& user_information() const;
  ::safe_browsing::ClientDownloadReport_UserInformation* mutable_user_information();
  ::safe_browsing::ClientDownloadReport_UserInformation* release_user_information();
  void set_allocated_user_information(::safe_browsing::ClientDownloadReport_UserInformation* user_information);

  // optional .safe_browsing.ClientDownloadResponse download_response = 5;
  bool has_download_response() const;
  void clear_download_response();
  static const int kDownloadResponseFieldNumber = 5;
  const ::safe_browsing::ClientDownloadResponse& download_response() const;
  ::safe_browsing::ClientDownloadResponse* mutable_download_response();
  ::safe_browsing::ClientDownloadResponse* release_download_response();
  void set_allocated_download_response(::safe_browsing::ClientDownloadResponse* download_response);

  // optional .safe_browsing.ClientDownloadReport.Reason reason = 1;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::safe_browsing::ClientDownloadReport_Reason reason() const;
  void set_reason(::safe_browsing::ClientDownloadReport_Reason value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientDownloadReport)
 private:
  void set_has_reason();
  void clear_has_reason();
  void set_has_download_request();
  void clear_has_download_request();
  void set_has_user_information();
  void clear_has_user_information();
  void set_has_comment();
  void clear_has_comment();
  void set_has_download_response();
  void clear_has_download_response();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::safe_browsing::ClientDownloadRequest* download_request_;
  ::safe_browsing::ClientDownloadReport_UserInformation* user_information_;
  ::safe_browsing::ClientDownloadResponse* download_response_;
  int reason_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientUploadResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientUploadResponse) */ {
 public:
  ClientUploadResponse();
  virtual ~ClientUploadResponse();

  ClientUploadResponse(const ClientUploadResponse& from);

  inline ClientUploadResponse& operator=(const ClientUploadResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientUploadResponse(ClientUploadResponse&& from) noexcept
    : ClientUploadResponse() {
    *this = ::std::move(from);
  }

  inline ClientUploadResponse& operator=(ClientUploadResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientUploadResponse& default_instance();

  static inline const ClientUploadResponse* internal_default_instance() {
    return reinterpret_cast<const ClientUploadResponse*>(
               &_ClientUploadResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(ClientUploadResponse* other);
  friend void swap(ClientUploadResponse& a, ClientUploadResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientUploadResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientUploadResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientUploadResponse& from);
  void MergeFrom(const ClientUploadResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientUploadResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientUploadResponse_UploadStatus UploadStatus;
  static const UploadStatus SUCCESS =
    ClientUploadResponse_UploadStatus_SUCCESS;
  static const UploadStatus UPLOAD_FAILURE =
    ClientUploadResponse_UploadStatus_UPLOAD_FAILURE;
  static inline bool UploadStatus_IsValid(int value) {
    return ClientUploadResponse_UploadStatus_IsValid(value);
  }
  static const UploadStatus UploadStatus_MIN =
    ClientUploadResponse_UploadStatus_UploadStatus_MIN;
  static const UploadStatus UploadStatus_MAX =
    ClientUploadResponse_UploadStatus_UploadStatus_MAX;
  static const int UploadStatus_ARRAYSIZE =
    ClientUploadResponse_UploadStatus_UploadStatus_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional string permalink = 2;
  bool has_permalink() const;
  void clear_permalink();
  static const int kPermalinkFieldNumber = 2;
  const ::std::string& permalink() const;
  void set_permalink(const ::std::string& value);
  #if LANG_CXX11
  void set_permalink(::std::string&& value);
  #endif
  void set_permalink(const char* value);
  void set_permalink(const char* value, size_t size);
  ::std::string* mutable_permalink();
  ::std::string* release_permalink();
  void set_allocated_permalink(::std::string* permalink);

  // optional .safe_browsing.ClientUploadResponse.UploadStatus status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::safe_browsing::ClientUploadResponse_UploadStatus status() const;
  void set_status(::safe_browsing::ClientUploadResponse_UploadStatus value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientUploadResponse)
 private:
  void set_has_status();
  void clear_has_status();
  void set_has_permalink();
  void clear_has_permalink();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr permalink_;
  int status_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_IncidentData_TrackedPreferenceIncident : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident) */ {
 public:
  ClientIncidentReport_IncidentData_TrackedPreferenceIncident();
  virtual ~ClientIncidentReport_IncidentData_TrackedPreferenceIncident();

  ClientIncidentReport_IncidentData_TrackedPreferenceIncident(const ClientIncidentReport_IncidentData_TrackedPreferenceIncident& from);

  inline ClientIncidentReport_IncidentData_TrackedPreferenceIncident& operator=(const ClientIncidentReport_IncidentData_TrackedPreferenceIncident& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_IncidentData_TrackedPreferenceIncident(ClientIncidentReport_IncidentData_TrackedPreferenceIncident&& from) noexcept
    : ClientIncidentReport_IncidentData_TrackedPreferenceIncident() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_IncidentData_TrackedPreferenceIncident& operator=(ClientIncidentReport_IncidentData_TrackedPreferenceIncident&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_IncidentData_TrackedPreferenceIncident& default_instance();

  static inline const ClientIncidentReport_IncidentData_TrackedPreferenceIncident* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_IncidentData_TrackedPreferenceIncident*>(
               &_ClientIncidentReport_IncidentData_TrackedPreferenceIncident_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(ClientIncidentReport_IncidentData_TrackedPreferenceIncident* other);
  friend void swap(ClientIncidentReport_IncidentData_TrackedPreferenceIncident& a, ClientIncidentReport_IncidentData_TrackedPreferenceIncident& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_IncidentData_TrackedPreferenceIncident* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_IncidentData_TrackedPreferenceIncident* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_IncidentData_TrackedPreferenceIncident& from);
  void MergeFrom(const ClientIncidentReport_IncidentData_TrackedPreferenceIncident& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_IncidentData_TrackedPreferenceIncident* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState ValueState;
  static const ValueState UNKNOWN =
    ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_UNKNOWN;
  static const ValueState CLEARED =
    ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_CLEARED;
  static const ValueState WEAK_LEGACY_OBSOLETE =
    ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_WEAK_LEGACY_OBSOLETE;
  static const ValueState CHANGED =
    ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_CHANGED;
  static const ValueState UNTRUSTED_UNKNOWN_VALUE =
    ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_UNTRUSTED_UNKNOWN_VALUE;
  static const ValueState BYPASS_CLEARED =
    ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_BYPASS_CLEARED;
  static const ValueState BYPASS_CHANGED =
    ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_BYPASS_CHANGED;
  static inline bool ValueState_IsValid(int value) {
    return ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_IsValid(value);
  }
  static const ValueState ValueState_MIN =
    ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_ValueState_MIN;
  static const ValueState ValueState_MAX =
    ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_ValueState_MAX;
  static const int ValueState_ARRAYSIZE =
    ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_ValueState_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated string split_key = 3;
  int split_key_size() const;
  void clear_split_key();
  static const int kSplitKeyFieldNumber = 3;
  const ::std::string& split_key(int index) const;
  ::std::string* mutable_split_key(int index);
  void set_split_key(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_split_key(int index, ::std::string&& value);
  #endif
  void set_split_key(int index, const char* value);
  void set_split_key(int index, const char* value, size_t size);
  ::std::string* add_split_key();
  void add_split_key(const ::std::string& value);
  #if LANG_CXX11
  void add_split_key(::std::string&& value);
  #endif
  void add_split_key(const char* value);
  void add_split_key(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& split_key() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_split_key();

  // optional string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string atomic_value = 2;
  bool has_atomic_value() const;
  void clear_atomic_value();
  static const int kAtomicValueFieldNumber = 2;
  const ::std::string& atomic_value() const;
  void set_atomic_value(const ::std::string& value);
  #if LANG_CXX11
  void set_atomic_value(::std::string&& value);
  #endif
  void set_atomic_value(const char* value);
  void set_atomic_value(const char* value, size_t size);
  ::std::string* mutable_atomic_value();
  ::std::string* release_atomic_value();
  void set_allocated_atomic_value(::std::string* atomic_value);

  // optional .safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.ValueState value_state = 4;
  bool has_value_state() const;
  void clear_value_state();
  static const int kValueStateFieldNumber = 4;
  ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState value_state() const;
  void set_value_state(::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident)
 private:
  void set_has_path();
  void clear_has_path();
  void set_has_atomic_value();
  void clear_has_atomic_value();
  void set_has_value_state();
  void clear_has_value_state();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> split_key_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr atomic_value_;
  int value_state_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile) */ {
 public:
  ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile();
  virtual ~ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile();

  ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile(const ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile& from);

  inline ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile& operator=(const ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile(ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile&& from) noexcept
    : ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile& operator=(ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile& default_instance();

  static inline const ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile*>(
               &_ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile* other);
  friend void swap(ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile& a, ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile& from);
  void MergeFrom(const ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string relative_path = 1;
  bool has_relative_path() const;
  void clear_relative_path();
  static const int kRelativePathFieldNumber = 1;
  const ::std::string& relative_path() const;
  void set_relative_path(const ::std::string& value);
  #if LANG_CXX11
  void set_relative_path(::std::string&& value);
  #endif
  void set_relative_path(const char* value);
  void set_relative_path(const char* value, size_t size);
  ::std::string* mutable_relative_path();
  ::std::string* release_relative_path();
  void set_allocated_relative_path(::std::string* relative_path);

  // optional .safe_browsing.ClientDownloadRequest.SignatureInfo signature = 2;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 2;
  const ::safe_browsing::ClientDownloadRequest_SignatureInfo& signature() const;
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* mutable_signature();
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* release_signature();
  void set_allocated_signature(::safe_browsing::ClientDownloadRequest_SignatureInfo* signature);

  // optional .safe_browsing.ClientDownloadRequest.ImageHeaders image_headers = 3;
  bool has_image_headers() const;
  void clear_image_headers();
  static const int kImageHeadersFieldNumber = 3;
  const ::safe_browsing::ClientDownloadRequest_ImageHeaders& image_headers() const;
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* mutable_image_headers();
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* release_image_headers();
  void set_allocated_image_headers(::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile)
 private:
  void set_has_relative_path();
  void clear_has_relative_path();
  void set_has_signature();
  void clear_has_signature();
  void set_has_image_headers();
  void clear_has_image_headers();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr relative_path_;
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* signature_;
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_IncidentData_BinaryIntegrityIncident : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident) */ {
 public:
  ClientIncidentReport_IncidentData_BinaryIntegrityIncident();
  virtual ~ClientIncidentReport_IncidentData_BinaryIntegrityIncident();

  ClientIncidentReport_IncidentData_BinaryIntegrityIncident(const ClientIncidentReport_IncidentData_BinaryIntegrityIncident& from);

  inline ClientIncidentReport_IncidentData_BinaryIntegrityIncident& operator=(const ClientIncidentReport_IncidentData_BinaryIntegrityIncident& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_IncidentData_BinaryIntegrityIncident(ClientIncidentReport_IncidentData_BinaryIntegrityIncident&& from) noexcept
    : ClientIncidentReport_IncidentData_BinaryIntegrityIncident() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_IncidentData_BinaryIntegrityIncident& operator=(ClientIncidentReport_IncidentData_BinaryIntegrityIncident&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_IncidentData_BinaryIntegrityIncident& default_instance();

  static inline const ClientIncidentReport_IncidentData_BinaryIntegrityIncident* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_IncidentData_BinaryIntegrityIncident*>(
               &_ClientIncidentReport_IncidentData_BinaryIntegrityIncident_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(ClientIncidentReport_IncidentData_BinaryIntegrityIncident* other);
  friend void swap(ClientIncidentReport_IncidentData_BinaryIntegrityIncident& a, ClientIncidentReport_IncidentData_BinaryIntegrityIncident& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_IncidentData_BinaryIntegrityIncident* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_IncidentData_BinaryIntegrityIncident* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_IncidentData_BinaryIntegrityIncident& from);
  void MergeFrom(const ClientIncidentReport_IncidentData_BinaryIntegrityIncident& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_IncidentData_BinaryIntegrityIncident* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile ContainedFile;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile contained_file = 5;
  int contained_file_size() const;
  void clear_contained_file();
  static const int kContainedFileFieldNumber = 5;
  const ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile& contained_file(int index) const;
  ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile* mutable_contained_file(int index);
  ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile* add_contained_file();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile >*
      mutable_contained_file();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile >&
      contained_file() const;

  // optional string file_basename = 1;
  bool has_file_basename() const;
  void clear_file_basename();
  static const int kFileBasenameFieldNumber = 1;
  const ::std::string& file_basename() const;
  void set_file_basename(const ::std::string& value);
  #if LANG_CXX11
  void set_file_basename(::std::string&& value);
  #endif
  void set_file_basename(const char* value);
  void set_file_basename(const char* value, size_t size);
  ::std::string* mutable_file_basename();
  ::std::string* release_file_basename();
  void set_allocated_file_basename(::std::string* file_basename);

  // optional .safe_browsing.ClientDownloadRequest.SignatureInfo signature = 2;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 2;
  const ::safe_browsing::ClientDownloadRequest_SignatureInfo& signature() const;
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* mutable_signature();
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* release_signature();
  void set_allocated_signature(::safe_browsing::ClientDownloadRequest_SignatureInfo* signature);

  // optional .safe_browsing.ClientDownloadRequest.ImageHeaders image_headers = 3;
  bool has_image_headers() const;
  void clear_image_headers();
  static const int kImageHeadersFieldNumber = 3;
  const ::safe_browsing::ClientDownloadRequest_ImageHeaders& image_headers() const;
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* mutable_image_headers();
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* release_image_headers();
  void set_allocated_image_headers(::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers);

  // optional int32 sec_error = 4;
  bool has_sec_error() const;
  void clear_sec_error();
  static const int kSecErrorFieldNumber = 4;
  ::google::protobuf::int32 sec_error() const;
  void set_sec_error(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident)
 private:
  void set_has_file_basename();
  void clear_has_file_basename();
  void set_has_signature();
  void clear_has_signature();
  void set_has_image_headers();
  void clear_has_image_headers();
  void set_has_sec_error();
  void clear_has_sec_error();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile > contained_file_;
  ::google::protobuf::internal::ArenaStringPtr file_basename_;
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* signature_;
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers_;
  ::google::protobuf::int32 sec_error_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_IncidentData_ResourceRequestIncident : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident) */ {
 public:
  ClientIncidentReport_IncidentData_ResourceRequestIncident();
  virtual ~ClientIncidentReport_IncidentData_ResourceRequestIncident();

  ClientIncidentReport_IncidentData_ResourceRequestIncident(const ClientIncidentReport_IncidentData_ResourceRequestIncident& from);

  inline ClientIncidentReport_IncidentData_ResourceRequestIncident& operator=(const ClientIncidentReport_IncidentData_ResourceRequestIncident& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_IncidentData_ResourceRequestIncident(ClientIncidentReport_IncidentData_ResourceRequestIncident&& from) noexcept
    : ClientIncidentReport_IncidentData_ResourceRequestIncident() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_IncidentData_ResourceRequestIncident& operator=(ClientIncidentReport_IncidentData_ResourceRequestIncident&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_IncidentData_ResourceRequestIncident& default_instance();

  static inline const ClientIncidentReport_IncidentData_ResourceRequestIncident* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_IncidentData_ResourceRequestIncident*>(
               &_ClientIncidentReport_IncidentData_ResourceRequestIncident_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(ClientIncidentReport_IncidentData_ResourceRequestIncident* other);
  friend void swap(ClientIncidentReport_IncidentData_ResourceRequestIncident& a, ClientIncidentReport_IncidentData_ResourceRequestIncident& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_IncidentData_ResourceRequestIncident* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_IncidentData_ResourceRequestIncident* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_IncidentData_ResourceRequestIncident& from);
  void MergeFrom(const ClientIncidentReport_IncidentData_ResourceRequestIncident& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_IncidentData_ResourceRequestIncident* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentReport_IncidentData_ResourceRequestIncident_Type Type;
  static const Type UNKNOWN =
    ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_UNKNOWN;
  static const Type TYPE_PATTERN =
    ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_TYPE_PATTERN;
  static inline bool Type_IsValid(int value) {
    return ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_IsValid(value);
  }
  static const Type Type_MIN =
    ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_Type_MIN;
  static const Type Type_MAX =
    ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_Type_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional bytes digest = 1;
  bool has_digest() const;
  void clear_digest();
  static const int kDigestFieldNumber = 1;
  const ::std::string& digest() const;
  void set_digest(const ::std::string& value);
  #if LANG_CXX11
  void set_digest(::std::string&& value);
  #endif
  void set_digest(const char* value);
  void set_digest(const void* value, size_t size);
  ::std::string* mutable_digest();
  ::std::string* release_digest();
  void set_allocated_digest(::std::string* digest);

  // optional string origin = 2;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 2;
  const ::std::string& origin() const;
  void set_origin(const ::std::string& value);
  #if LANG_CXX11
  void set_origin(::std::string&& value);
  #endif
  void set_origin(const char* value);
  void set_origin(const char* value, size_t size);
  ::std::string* mutable_origin();
  ::std::string* release_origin();
  void set_allocated_origin(::std::string* origin);

  // optional .safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.Type type = 3 [default = UNKNOWN];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident_Type type() const;
  void set_type(::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident_Type value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident)
 private:
  void set_has_digest();
  void clear_has_digest();
  void set_has_origin();
  void clear_has_origin();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr digest_;
  ::google::protobuf::internal::ArenaStringPtr origin_;
  int type_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_IncidentData : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.IncidentData) */ {
 public:
  ClientIncidentReport_IncidentData();
  virtual ~ClientIncidentReport_IncidentData();

  ClientIncidentReport_IncidentData(const ClientIncidentReport_IncidentData& from);

  inline ClientIncidentReport_IncidentData& operator=(const ClientIncidentReport_IncidentData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_IncidentData(ClientIncidentReport_IncidentData&& from) noexcept
    : ClientIncidentReport_IncidentData() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_IncidentData& operator=(ClientIncidentReport_IncidentData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_IncidentData& default_instance();

  static inline const ClientIncidentReport_IncidentData* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_IncidentData*>(
               &_ClientIncidentReport_IncidentData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(ClientIncidentReport_IncidentData* other);
  friend void swap(ClientIncidentReport_IncidentData& a, ClientIncidentReport_IncidentData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_IncidentData* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_IncidentData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_IncidentData& from);
  void MergeFrom(const ClientIncidentReport_IncidentData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_IncidentData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentReport_IncidentData_TrackedPreferenceIncident TrackedPreferenceIncident;
  typedef ClientIncidentReport_IncidentData_BinaryIntegrityIncident BinaryIntegrityIncident;
  typedef ClientIncidentReport_IncidentData_ResourceRequestIncident ResourceRequestIncident;

  // accessors -------------------------------------------------------

  // optional .safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident tracked_preference = 2;
  bool has_tracked_preference() const;
  void clear_tracked_preference();
  static const int kTrackedPreferenceFieldNumber = 2;
  const ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident& tracked_preference() const;
  ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident* mutable_tracked_preference();
  ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident* release_tracked_preference();
  void set_allocated_tracked_preference(::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident* tracked_preference);

  // optional .safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident binary_integrity = 3;
  bool has_binary_integrity() const;
  void clear_binary_integrity();
  static const int kBinaryIntegrityFieldNumber = 3;
  const ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident& binary_integrity() const;
  ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident* mutable_binary_integrity();
  ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident* release_binary_integrity();
  void set_allocated_binary_integrity(::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident* binary_integrity);

  // optional .safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident resource_request = 7;
  bool has_resource_request() const;
  void clear_resource_request();
  static const int kResourceRequestFieldNumber = 7;
  const ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident& resource_request() const;
  ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident* mutable_resource_request();
  ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident* release_resource_request();
  void set_allocated_resource_request(::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident* resource_request);

  // optional int64 incident_time_msec = 1;
  bool has_incident_time_msec() const;
  void clear_incident_time_msec();
  static const int kIncidentTimeMsecFieldNumber = 1;
  ::google::protobuf::int64 incident_time_msec() const;
  void set_incident_time_msec(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.IncidentData)
 private:
  void set_has_incident_time_msec();
  void clear_has_incident_time_msec();
  void set_has_tracked_preference();
  void clear_has_tracked_preference();
  void set_has_binary_integrity();
  void clear_has_binary_integrity();
  void set_has_resource_request();
  void clear_has_resource_request();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident* tracked_preference_;
  ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident* binary_integrity_;
  ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident* resource_request_;
  ::google::protobuf::int64 incident_time_msec_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_DownloadDetails : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.DownloadDetails) */ {
 public:
  ClientIncidentReport_DownloadDetails();
  virtual ~ClientIncidentReport_DownloadDetails();

  ClientIncidentReport_DownloadDetails(const ClientIncidentReport_DownloadDetails& from);

  inline ClientIncidentReport_DownloadDetails& operator=(const ClientIncidentReport_DownloadDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_DownloadDetails(ClientIncidentReport_DownloadDetails&& from) noexcept
    : ClientIncidentReport_DownloadDetails() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_DownloadDetails& operator=(ClientIncidentReport_DownloadDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_DownloadDetails& default_instance();

  static inline const ClientIncidentReport_DownloadDetails* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_DownloadDetails*>(
               &_ClientIncidentReport_DownloadDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(ClientIncidentReport_DownloadDetails* other);
  friend void swap(ClientIncidentReport_DownloadDetails& a, ClientIncidentReport_DownloadDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_DownloadDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_DownloadDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_DownloadDetails& from);
  void MergeFrom(const ClientIncidentReport_DownloadDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_DownloadDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional .safe_browsing.ClientDownloadRequest download = 2;
  bool has_download() const;
  void clear_download();
  static const int kDownloadFieldNumber = 2;
  const ::safe_browsing::ClientDownloadRequest& download() const;
  ::safe_browsing::ClientDownloadRequest* mutable_download();
  ::safe_browsing::ClientDownloadRequest* release_download();
  void set_allocated_download(::safe_browsing::ClientDownloadRequest* download);

  // optional int64 download_time_msec = 3;
  bool has_download_time_msec() const;
  void clear_download_time_msec();
  static const int kDownloadTimeMsecFieldNumber = 3;
  ::google::protobuf::int64 download_time_msec() const;
  void set_download_time_msec(::google::protobuf::int64 value);

  // optional int64 open_time_msec = 4;
  bool has_open_time_msec() const;
  void clear_open_time_msec();
  static const int kOpenTimeMsecFieldNumber = 4;
  ::google::protobuf::int64 open_time_msec() const;
  void set_open_time_msec(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.DownloadDetails)
 private:
  void set_has_token();
  void clear_has_token();
  void set_has_download();
  void clear_has_download();
  void set_has_download_time_msec();
  void clear_has_download_time_msec();
  void set_has_open_time_msec();
  void clear_has_open_time_msec();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::safe_browsing::ClientDownloadRequest* download_;
  ::google::protobuf::int64 download_time_msec_;
  ::google::protobuf::int64 open_time_msec_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_EnvironmentData_OS_RegistryValue : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue) */ {
 public:
  ClientIncidentReport_EnvironmentData_OS_RegistryValue();
  virtual ~ClientIncidentReport_EnvironmentData_OS_RegistryValue();

  ClientIncidentReport_EnvironmentData_OS_RegistryValue(const ClientIncidentReport_EnvironmentData_OS_RegistryValue& from);

  inline ClientIncidentReport_EnvironmentData_OS_RegistryValue& operator=(const ClientIncidentReport_EnvironmentData_OS_RegistryValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_EnvironmentData_OS_RegistryValue(ClientIncidentReport_EnvironmentData_OS_RegistryValue&& from) noexcept
    : ClientIncidentReport_EnvironmentData_OS_RegistryValue() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_EnvironmentData_OS_RegistryValue& operator=(ClientIncidentReport_EnvironmentData_OS_RegistryValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_EnvironmentData_OS_RegistryValue& default_instance();

  static inline const ClientIncidentReport_EnvironmentData_OS_RegistryValue* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_EnvironmentData_OS_RegistryValue*>(
               &_ClientIncidentReport_EnvironmentData_OS_RegistryValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(ClientIncidentReport_EnvironmentData_OS_RegistryValue* other);
  friend void swap(ClientIncidentReport_EnvironmentData_OS_RegistryValue& a, ClientIncidentReport_EnvironmentData_OS_RegistryValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_EnvironmentData_OS_RegistryValue* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_EnvironmentData_OS_RegistryValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_EnvironmentData_OS_RegistryValue& from);
  void MergeFrom(const ClientIncidentReport_EnvironmentData_OS_RegistryValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_EnvironmentData_OS_RegistryValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_type();
  void clear_has_type();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_EnvironmentData_OS_RegistryKey : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey) */ {
 public:
  ClientIncidentReport_EnvironmentData_OS_RegistryKey();
  virtual ~ClientIncidentReport_EnvironmentData_OS_RegistryKey();

  ClientIncidentReport_EnvironmentData_OS_RegistryKey(const ClientIncidentReport_EnvironmentData_OS_RegistryKey& from);

  inline ClientIncidentReport_EnvironmentData_OS_RegistryKey& operator=(const ClientIncidentReport_EnvironmentData_OS_RegistryKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_EnvironmentData_OS_RegistryKey(ClientIncidentReport_EnvironmentData_OS_RegistryKey&& from) noexcept
    : ClientIncidentReport_EnvironmentData_OS_RegistryKey() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_EnvironmentData_OS_RegistryKey& operator=(ClientIncidentReport_EnvironmentData_OS_RegistryKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_EnvironmentData_OS_RegistryKey& default_instance();

  static inline const ClientIncidentReport_EnvironmentData_OS_RegistryKey* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_EnvironmentData_OS_RegistryKey*>(
               &_ClientIncidentReport_EnvironmentData_OS_RegistryKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(ClientIncidentReport_EnvironmentData_OS_RegistryKey* other);
  friend void swap(ClientIncidentReport_EnvironmentData_OS_RegistryKey& a, ClientIncidentReport_EnvironmentData_OS_RegistryKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_EnvironmentData_OS_RegistryKey* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_EnvironmentData_OS_RegistryKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_EnvironmentData_OS_RegistryKey& from);
  void MergeFrom(const ClientIncidentReport_EnvironmentData_OS_RegistryKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_EnvironmentData_OS_RegistryKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue value = 2;
  int value_size() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryValue& value(int index) const;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryValue* mutable_value(int index);
  ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryValue* add_value();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryValue >*
      mutable_value();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryValue >&
      value() const;

  // repeated .safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey key = 3;
  int key_size() const;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey& key(int index) const;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey* mutable_key(int index);
  ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey* add_key();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey >*
      mutable_key();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey >&
      key() const;

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryValue > value_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey > key_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_EnvironmentData_OS : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.EnvironmentData.OS) */ {
 public:
  ClientIncidentReport_EnvironmentData_OS();
  virtual ~ClientIncidentReport_EnvironmentData_OS();

  ClientIncidentReport_EnvironmentData_OS(const ClientIncidentReport_EnvironmentData_OS& from);

  inline ClientIncidentReport_EnvironmentData_OS& operator=(const ClientIncidentReport_EnvironmentData_OS& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_EnvironmentData_OS(ClientIncidentReport_EnvironmentData_OS&& from) noexcept
    : ClientIncidentReport_EnvironmentData_OS() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_EnvironmentData_OS& operator=(ClientIncidentReport_EnvironmentData_OS&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_EnvironmentData_OS& default_instance();

  static inline const ClientIncidentReport_EnvironmentData_OS* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_EnvironmentData_OS*>(
               &_ClientIncidentReport_EnvironmentData_OS_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(ClientIncidentReport_EnvironmentData_OS* other);
  friend void swap(ClientIncidentReport_EnvironmentData_OS& a, ClientIncidentReport_EnvironmentData_OS& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_EnvironmentData_OS* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_EnvironmentData_OS* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_EnvironmentData_OS& from);
  void MergeFrom(const ClientIncidentReport_EnvironmentData_OS& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_EnvironmentData_OS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentReport_EnvironmentData_OS_RegistryValue RegistryValue;
  typedef ClientIncidentReport_EnvironmentData_OS_RegistryKey RegistryKey;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey registry_key = 3;
  int registry_key_size() const;
  void clear_registry_key();
  static const int kRegistryKeyFieldNumber = 3;
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey& registry_key(int index) const;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey* mutable_registry_key(int index);
  ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey* add_registry_key();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey >*
      mutable_registry_key();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey >&
      registry_key() const;

  // optional string os_name = 1;
  bool has_os_name() const;
  void clear_os_name();
  static const int kOsNameFieldNumber = 1;
  const ::std::string& os_name() const;
  void set_os_name(const ::std::string& value);
  #if LANG_CXX11
  void set_os_name(::std::string&& value);
  #endif
  void set_os_name(const char* value);
  void set_os_name(const char* value, size_t size);
  ::std::string* mutable_os_name();
  ::std::string* release_os_name();
  void set_allocated_os_name(::std::string* os_name);

  // optional string os_version = 2;
  bool has_os_version() const;
  void clear_os_version();
  static const int kOsVersionFieldNumber = 2;
  const ::std::string& os_version() const;
  void set_os_version(const ::std::string& value);
  #if LANG_CXX11
  void set_os_version(::std::string&& value);
  #endif
  void set_os_version(const char* value);
  void set_os_version(const char* value, size_t size);
  ::std::string* mutable_os_version();
  ::std::string* release_os_version();
  void set_allocated_os_version(::std::string* os_version);

  // optional bool is_enrolled_to_domain = 4;
  bool has_is_enrolled_to_domain() const;
  void clear_is_enrolled_to_domain();
  static const int kIsEnrolledToDomainFieldNumber = 4;
  bool is_enrolled_to_domain() const;
  void set_is_enrolled_to_domain(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.EnvironmentData.OS)
 private:
  void set_has_os_name();
  void clear_has_os_name();
  void set_has_os_version();
  void clear_has_os_version();
  void set_has_is_enrolled_to_domain();
  void clear_has_is_enrolled_to_domain();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey > registry_key_;
  ::google::protobuf::internal::ArenaStringPtr os_name_;
  ::google::protobuf::internal::ArenaStringPtr os_version_;
  bool is_enrolled_to_domain_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_EnvironmentData_Machine : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.EnvironmentData.Machine) */ {
 public:
  ClientIncidentReport_EnvironmentData_Machine();
  virtual ~ClientIncidentReport_EnvironmentData_Machine();

  ClientIncidentReport_EnvironmentData_Machine(const ClientIncidentReport_EnvironmentData_Machine& from);

  inline ClientIncidentReport_EnvironmentData_Machine& operator=(const ClientIncidentReport_EnvironmentData_Machine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_EnvironmentData_Machine(ClientIncidentReport_EnvironmentData_Machine&& from) noexcept
    : ClientIncidentReport_EnvironmentData_Machine() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_EnvironmentData_Machine& operator=(ClientIncidentReport_EnvironmentData_Machine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_EnvironmentData_Machine& default_instance();

  static inline const ClientIncidentReport_EnvironmentData_Machine* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_EnvironmentData_Machine*>(
               &_ClientIncidentReport_EnvironmentData_Machine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(ClientIncidentReport_EnvironmentData_Machine* other);
  friend void swap(ClientIncidentReport_EnvironmentData_Machine& a, ClientIncidentReport_EnvironmentData_Machine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_EnvironmentData_Machine* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_EnvironmentData_Machine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_EnvironmentData_Machine& from);
  void MergeFrom(const ClientIncidentReport_EnvironmentData_Machine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_EnvironmentData_Machine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cpu_architecture = 1;
  bool has_cpu_architecture() const;
  void clear_cpu_architecture();
  static const int kCpuArchitectureFieldNumber = 1;
  const ::std::string& cpu_architecture() const;
  void set_cpu_architecture(const ::std::string& value);
  #if LANG_CXX11
  void set_cpu_architecture(::std::string&& value);
  #endif
  void set_cpu_architecture(const char* value);
  void set_cpu_architecture(const char* value, size_t size);
  ::std::string* mutable_cpu_architecture();
  ::std::string* release_cpu_architecture();
  void set_allocated_cpu_architecture(::std::string* cpu_architecture);

  // optional string cpu_vendor = 2;
  bool has_cpu_vendor() const;
  void clear_cpu_vendor();
  static const int kCpuVendorFieldNumber = 2;
  const ::std::string& cpu_vendor() const;
  void set_cpu_vendor(const ::std::string& value);
  #if LANG_CXX11
  void set_cpu_vendor(::std::string&& value);
  #endif
  void set_cpu_vendor(const char* value);
  void set_cpu_vendor(const char* value, size_t size);
  ::std::string* mutable_cpu_vendor();
  ::std::string* release_cpu_vendor();
  void set_allocated_cpu_vendor(::std::string* cpu_vendor);

  // optional uint32 cpuid = 3;
  bool has_cpuid() const;
  void clear_cpuid();
  static const int kCpuidFieldNumber = 3;
  ::google::protobuf::uint32 cpuid() const;
  void set_cpuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.EnvironmentData.Machine)
 private:
  void set_has_cpu_architecture();
  void clear_has_cpu_architecture();
  void set_has_cpu_vendor();
  void clear_has_cpu_vendor();
  void set_has_cpuid();
  void clear_has_cpuid();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cpu_architecture_;
  ::google::protobuf::internal::ArenaStringPtr cpu_vendor_;
  ::google::protobuf::uint32 cpuid_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_EnvironmentData_Process_Patch : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch) */ {
 public:
  ClientIncidentReport_EnvironmentData_Process_Patch();
  virtual ~ClientIncidentReport_EnvironmentData_Process_Patch();

  ClientIncidentReport_EnvironmentData_Process_Patch(const ClientIncidentReport_EnvironmentData_Process_Patch& from);

  inline ClientIncidentReport_EnvironmentData_Process_Patch& operator=(const ClientIncidentReport_EnvironmentData_Process_Patch& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_EnvironmentData_Process_Patch(ClientIncidentReport_EnvironmentData_Process_Patch&& from) noexcept
    : ClientIncidentReport_EnvironmentData_Process_Patch() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_EnvironmentData_Process_Patch& operator=(ClientIncidentReport_EnvironmentData_Process_Patch&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_EnvironmentData_Process_Patch& default_instance();

  static inline const ClientIncidentReport_EnvironmentData_Process_Patch* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_EnvironmentData_Process_Patch*>(
               &_ClientIncidentReport_EnvironmentData_Process_Patch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(ClientIncidentReport_EnvironmentData_Process_Patch* other);
  friend void swap(ClientIncidentReport_EnvironmentData_Process_Patch& a, ClientIncidentReport_EnvironmentData_Process_Patch& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_EnvironmentData_Process_Patch* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_EnvironmentData_Process_Patch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_EnvironmentData_Process_Patch& from);
  void MergeFrom(const ClientIncidentReport_EnvironmentData_Process_Patch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_EnvironmentData_Process_Patch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string function = 1;
  bool has_function() const;
  void clear_function();
  static const int kFunctionFieldNumber = 1;
  const ::std::string& function() const;
  void set_function(const ::std::string& value);
  #if LANG_CXX11
  void set_function(::std::string&& value);
  #endif
  void set_function(const char* value);
  void set_function(const char* value, size_t size);
  ::std::string* mutable_function();
  ::std::string* release_function();
  void set_allocated_function(::std::string* function);

  // optional string target_dll = 2;
  bool has_target_dll() const;
  void clear_target_dll();
  static const int kTargetDllFieldNumber = 2;
  const ::std::string& target_dll() const;
  void set_target_dll(const ::std::string& value);
  #if LANG_CXX11
  void set_target_dll(::std::string&& value);
  #endif
  void set_target_dll(const char* value);
  void set_target_dll(const char* value, size_t size);
  ::std::string* mutable_target_dll();
  ::std::string* release_target_dll();
  void set_allocated_target_dll(::std::string* target_dll);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch)
 private:
  void set_has_function();
  void clear_has_function();
  void set_has_target_dll();
  void clear_has_target_dll();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr function_;
  ::google::protobuf::internal::ArenaStringPtr target_dll_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_EnvironmentData_Process_NetworkProvider : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.EnvironmentData.Process.NetworkProvider) */ {
 public:
  ClientIncidentReport_EnvironmentData_Process_NetworkProvider();
  virtual ~ClientIncidentReport_EnvironmentData_Process_NetworkProvider();

  ClientIncidentReport_EnvironmentData_Process_NetworkProvider(const ClientIncidentReport_EnvironmentData_Process_NetworkProvider& from);

  inline ClientIncidentReport_EnvironmentData_Process_NetworkProvider& operator=(const ClientIncidentReport_EnvironmentData_Process_NetworkProvider& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_EnvironmentData_Process_NetworkProvider(ClientIncidentReport_EnvironmentData_Process_NetworkProvider&& from) noexcept
    : ClientIncidentReport_EnvironmentData_Process_NetworkProvider() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_EnvironmentData_Process_NetworkProvider& operator=(ClientIncidentReport_EnvironmentData_Process_NetworkProvider&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_EnvironmentData_Process_NetworkProvider& default_instance();

  static inline const ClientIncidentReport_EnvironmentData_Process_NetworkProvider* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_EnvironmentData_Process_NetworkProvider*>(
               &_ClientIncidentReport_EnvironmentData_Process_NetworkProvider_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(ClientIncidentReport_EnvironmentData_Process_NetworkProvider* other);
  friend void swap(ClientIncidentReport_EnvironmentData_Process_NetworkProvider& a, ClientIncidentReport_EnvironmentData_Process_NetworkProvider& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_EnvironmentData_Process_NetworkProvider* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_EnvironmentData_Process_NetworkProvider* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_EnvironmentData_Process_NetworkProvider& from);
  void MergeFrom(const ClientIncidentReport_EnvironmentData_Process_NetworkProvider& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_EnvironmentData_Process_NetworkProvider* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.EnvironmentData.Process.NetworkProvider)
 private:

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_EnvironmentData_Process_Dll : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll) */ {
 public:
  ClientIncidentReport_EnvironmentData_Process_Dll();
  virtual ~ClientIncidentReport_EnvironmentData_Process_Dll();

  ClientIncidentReport_EnvironmentData_Process_Dll(const ClientIncidentReport_EnvironmentData_Process_Dll& from);

  inline ClientIncidentReport_EnvironmentData_Process_Dll& operator=(const ClientIncidentReport_EnvironmentData_Process_Dll& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_EnvironmentData_Process_Dll(ClientIncidentReport_EnvironmentData_Process_Dll&& from) noexcept
    : ClientIncidentReport_EnvironmentData_Process_Dll() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_EnvironmentData_Process_Dll& operator=(ClientIncidentReport_EnvironmentData_Process_Dll&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_EnvironmentData_Process_Dll& default_instance();

  static inline const ClientIncidentReport_EnvironmentData_Process_Dll* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_EnvironmentData_Process_Dll*>(
               &_ClientIncidentReport_EnvironmentData_Process_Dll_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(ClientIncidentReport_EnvironmentData_Process_Dll* other);
  friend void swap(ClientIncidentReport_EnvironmentData_Process_Dll& a, ClientIncidentReport_EnvironmentData_Process_Dll& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_EnvironmentData_Process_Dll* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_EnvironmentData_Process_Dll* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_EnvironmentData_Process_Dll& from);
  void MergeFrom(const ClientIncidentReport_EnvironmentData_Process_Dll& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_EnvironmentData_Process_Dll* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentReport_EnvironmentData_Process_Dll_Feature Feature;
  static const Feature UNKNOWN =
    ClientIncidentReport_EnvironmentData_Process_Dll_Feature_UNKNOWN;
  static const Feature LSP =
    ClientIncidentReport_EnvironmentData_Process_Dll_Feature_LSP;
  static inline bool Feature_IsValid(int value) {
    return ClientIncidentReport_EnvironmentData_Process_Dll_Feature_IsValid(value);
  }
  static const Feature Feature_MIN =
    ClientIncidentReport_EnvironmentData_Process_Dll_Feature_Feature_MIN;
  static const Feature Feature_MAX =
    ClientIncidentReport_EnvironmentData_Process_Dll_Feature_Feature_MAX;
  static const int Feature_ARRAYSIZE =
    ClientIncidentReport_EnvironmentData_Process_Dll_Feature_Feature_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.Feature feature = 4;
  int feature_size() const;
  void clear_feature();
  static const int kFeatureFieldNumber = 4;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll_Feature feature(int index) const;
  void set_feature(int index, ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll_Feature value);
  void add_feature(::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll_Feature value);
  const ::google::protobuf::RepeatedField<int>& feature() const;
  ::google::protobuf::RepeatedField<int>* mutable_feature();

  // optional string path = 1;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional .safe_browsing.ClientDownloadRequest.ImageHeaders image_headers = 5;
  bool has_image_headers() const;
  void clear_image_headers();
  static const int kImageHeadersFieldNumber = 5;
  const ::safe_browsing::ClientDownloadRequest_ImageHeaders& image_headers() const;
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* mutable_image_headers();
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* release_image_headers();
  void set_allocated_image_headers(::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers);

  // optional uint64 base_address = 2;
  bool has_base_address() const;
  void clear_base_address();
  static const int kBaseAddressFieldNumber = 2;
  ::google::protobuf::uint64 base_address() const;
  void set_base_address(::google::protobuf::uint64 value);

  // optional uint32 length = 3;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 3;
  ::google::protobuf::uint32 length() const;
  void set_length(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll)
 private:
  void set_has_path();
  void clear_has_path();
  void set_has_base_address();
  void clear_has_base_address();
  void set_has_length();
  void clear_has_length();
  void set_has_image_headers();
  void clear_has_image_headers();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> feature_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers_;
  ::google::protobuf::uint64 base_address_;
  ::google::protobuf::uint32 length_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification) */ {
 public:
  ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification();
  virtual ~ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification();

  ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification(const ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification& from);

  inline ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification& operator=(const ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification(ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification&& from) noexcept
    : ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification& operator=(ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification& default_instance();

  static inline const ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification*>(
               &_ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification* other);
  friend void swap(ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification& a, ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification& from);
  void MergeFrom(const ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes modified_bytes = 3;
  bool has_modified_bytes() const;
  void clear_modified_bytes();
  static const int kModifiedBytesFieldNumber = 3;
  const ::std::string& modified_bytes() const;
  void set_modified_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_modified_bytes(::std::string&& value);
  #endif
  void set_modified_bytes(const char* value);
  void set_modified_bytes(const void* value, size_t size);
  ::std::string* mutable_modified_bytes();
  ::std::string* release_modified_bytes();
  void set_allocated_modified_bytes(::std::string* modified_bytes);

  // optional string export_name = 4;
  bool has_export_name() const;
  void clear_export_name();
  static const int kExportNameFieldNumber = 4;
  const ::std::string& export_name() const;
  void set_export_name(const ::std::string& value);
  #if LANG_CXX11
  void set_export_name(::std::string&& value);
  #endif
  void set_export_name(const char* value);
  void set_export_name(const char* value, size_t size);
  ::std::string* mutable_export_name();
  ::std::string* release_export_name();
  void set_allocated_export_name(::std::string* export_name);

  // optional uint32 file_offset = 1;
  bool has_file_offset() const;
  void clear_file_offset();
  static const int kFileOffsetFieldNumber = 1;
  ::google::protobuf::uint32 file_offset() const;
  void set_file_offset(::google::protobuf::uint32 value);

  // optional int32 byte_count = 2;
  bool has_byte_count() const;
  void clear_byte_count();
  static const int kByteCountFieldNumber = 2;
  ::google::protobuf::int32 byte_count() const;
  void set_byte_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification)
 private:
  void set_has_file_offset();
  void clear_has_file_offset();
  void set_has_byte_count();
  void clear_has_byte_count();
  void set_has_modified_bytes();
  void clear_has_modified_bytes();
  void set_has_export_name();
  void clear_has_export_name();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr modified_bytes_;
  ::google::protobuf::internal::ArenaStringPtr export_name_;
  ::google::protobuf::uint32 file_offset_;
  ::google::protobuf::int32 byte_count_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_EnvironmentData_Process_ModuleState : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState) */ {
 public:
  ClientIncidentReport_EnvironmentData_Process_ModuleState();
  virtual ~ClientIncidentReport_EnvironmentData_Process_ModuleState();

  ClientIncidentReport_EnvironmentData_Process_ModuleState(const ClientIncidentReport_EnvironmentData_Process_ModuleState& from);

  inline ClientIncidentReport_EnvironmentData_Process_ModuleState& operator=(const ClientIncidentReport_EnvironmentData_Process_ModuleState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_EnvironmentData_Process_ModuleState(ClientIncidentReport_EnvironmentData_Process_ModuleState&& from) noexcept
    : ClientIncidentReport_EnvironmentData_Process_ModuleState() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_EnvironmentData_Process_ModuleState& operator=(ClientIncidentReport_EnvironmentData_Process_ModuleState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_EnvironmentData_Process_ModuleState& default_instance();

  static inline const ClientIncidentReport_EnvironmentData_Process_ModuleState* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_EnvironmentData_Process_ModuleState*>(
               &_ClientIncidentReport_EnvironmentData_Process_ModuleState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(ClientIncidentReport_EnvironmentData_Process_ModuleState* other);
  friend void swap(ClientIncidentReport_EnvironmentData_Process_ModuleState& a, ClientIncidentReport_EnvironmentData_Process_ModuleState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_EnvironmentData_Process_ModuleState* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_EnvironmentData_Process_ModuleState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_EnvironmentData_Process_ModuleState& from);
  void MergeFrom(const ClientIncidentReport_EnvironmentData_Process_ModuleState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_EnvironmentData_Process_ModuleState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification Modification;

  typedef ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState ModifiedState;
  static const ModifiedState UNKNOWN =
    ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_UNKNOWN;
  static const ModifiedState MODULE_STATE_UNKNOWN =
    ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_MODULE_STATE_UNKNOWN;
  static const ModifiedState MODULE_STATE_UNMODIFIED =
    ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_MODULE_STATE_UNMODIFIED;
  static const ModifiedState MODULE_STATE_MODIFIED =
    ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_MODULE_STATE_MODIFIED;
  static inline bool ModifiedState_IsValid(int value) {
    return ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_IsValid(value);
  }
  static const ModifiedState ModifiedState_MIN =
    ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_ModifiedState_MIN;
  static const ModifiedState ModifiedState_MAX =
    ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_ModifiedState_MAX;
  static const int ModifiedState_ARRAYSIZE =
    ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_ModifiedState_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated string OBSOLETE_modified_export = 3;
  int obsolete_modified_export_size() const;
  void clear_obsolete_modified_export();
  static const int kOBSOLETEModifiedExportFieldNumber = 3;
  const ::std::string& obsolete_modified_export(int index) const;
  ::std::string* mutable_obsolete_modified_export(int index);
  void set_obsolete_modified_export(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_obsolete_modified_export(int index, ::std::string&& value);
  #endif
  void set_obsolete_modified_export(int index, const char* value);
  void set_obsolete_modified_export(int index, const char* value, size_t size);
  ::std::string* add_obsolete_modified_export();
  void add_obsolete_modified_export(const ::std::string& value);
  #if LANG_CXX11
  void add_obsolete_modified_export(::std::string&& value);
  #endif
  void add_obsolete_modified_export(const char* value);
  void add_obsolete_modified_export(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& obsolete_modified_export() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_obsolete_modified_export();

  // repeated .safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification modification = 4;
  int modification_size() const;
  void clear_modification();
  static const int kModificationFieldNumber = 4;
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification& modification(int index) const;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification* mutable_modification(int index);
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification* add_modification();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification >*
      mutable_modification();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification >&
      modification() const;

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.ModifiedState modified_state = 2;
  bool has_modified_state() const;
  void clear_modified_state();
  static const int kModifiedStateFieldNumber = 2;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState modified_state() const;
  void set_modified_state(::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_modified_state();
  void clear_has_modified_state();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> obsolete_modified_export_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification > modification_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  int modified_state_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_EnvironmentData_Process : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.EnvironmentData.Process) */ {
 public:
  ClientIncidentReport_EnvironmentData_Process();
  virtual ~ClientIncidentReport_EnvironmentData_Process();

  ClientIncidentReport_EnvironmentData_Process(const ClientIncidentReport_EnvironmentData_Process& from);

  inline ClientIncidentReport_EnvironmentData_Process& operator=(const ClientIncidentReport_EnvironmentData_Process& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_EnvironmentData_Process(ClientIncidentReport_EnvironmentData_Process&& from) noexcept
    : ClientIncidentReport_EnvironmentData_Process() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_EnvironmentData_Process& operator=(ClientIncidentReport_EnvironmentData_Process&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_EnvironmentData_Process& default_instance();

  static inline const ClientIncidentReport_EnvironmentData_Process* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_EnvironmentData_Process*>(
               &_ClientIncidentReport_EnvironmentData_Process_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(ClientIncidentReport_EnvironmentData_Process* other);
  friend void swap(ClientIncidentReport_EnvironmentData_Process& a, ClientIncidentReport_EnvironmentData_Process& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_EnvironmentData_Process* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_EnvironmentData_Process* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_EnvironmentData_Process& from);
  void MergeFrom(const ClientIncidentReport_EnvironmentData_Process& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_EnvironmentData_Process* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentReport_EnvironmentData_Process_Patch Patch;
  typedef ClientIncidentReport_EnvironmentData_Process_NetworkProvider NetworkProvider;
  typedef ClientIncidentReport_EnvironmentData_Process_Dll Dll;
  typedef ClientIncidentReport_EnvironmentData_Process_ModuleState ModuleState;

  typedef ClientIncidentReport_EnvironmentData_Process_Channel Channel;
  static const Channel CHANNEL_UNKNOWN =
    ClientIncidentReport_EnvironmentData_Process_Channel_CHANNEL_UNKNOWN;
  static const Channel CHANNEL_CANARY =
    ClientIncidentReport_EnvironmentData_Process_Channel_CHANNEL_CANARY;
  static const Channel CHANNEL_DEV =
    ClientIncidentReport_EnvironmentData_Process_Channel_CHANNEL_DEV;
  static const Channel CHANNEL_BETA =
    ClientIncidentReport_EnvironmentData_Process_Channel_CHANNEL_BETA;
  static const Channel CHANNEL_STABLE =
    ClientIncidentReport_EnvironmentData_Process_Channel_CHANNEL_STABLE;
  static inline bool Channel_IsValid(int value) {
    return ClientIncidentReport_EnvironmentData_Process_Channel_IsValid(value);
  }
  static const Channel Channel_MIN =
    ClientIncidentReport_EnvironmentData_Process_Channel_Channel_MIN;
  static const Channel Channel_MAX =
    ClientIncidentReport_EnvironmentData_Process_Channel_Channel_MAX;
  static const int Channel_ARRAYSIZE =
    ClientIncidentReport_EnvironmentData_Process_Channel_Channel_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated string OBSOLETE_dlls = 2;
  int obsolete_dlls_size() const;
  void clear_obsolete_dlls();
  static const int kOBSOLETEDllsFieldNumber = 2;
  const ::std::string& obsolete_dlls(int index) const;
  ::std::string* mutable_obsolete_dlls(int index);
  void set_obsolete_dlls(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_obsolete_dlls(int index, ::std::string&& value);
  #endif
  void set_obsolete_dlls(int index, const char* value);
  void set_obsolete_dlls(int index, const char* value, size_t size);
  ::std::string* add_obsolete_dlls();
  void add_obsolete_dlls(const ::std::string& value);
  #if LANG_CXX11
  void add_obsolete_dlls(::std::string&& value);
  #endif
  void add_obsolete_dlls(const char* value);
  void add_obsolete_dlls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& obsolete_dlls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_obsolete_dlls();

  // repeated .safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch patches = 3;
  int patches_size() const;
  void clear_patches();
  static const int kPatchesFieldNumber = 3;
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Patch& patches(int index) const;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Patch* mutable_patches(int index);
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Patch* add_patches();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Patch >*
      mutable_patches();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Patch >&
      patches() const;

  // repeated .safe_browsing.ClientIncidentReport.EnvironmentData.Process.NetworkProvider network_providers = 4;
  int network_providers_size() const;
  void clear_network_providers();
  static const int kNetworkProvidersFieldNumber = 4;
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_NetworkProvider& network_providers(int index) const;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_NetworkProvider* mutable_network_providers(int index);
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_NetworkProvider* add_network_providers();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_NetworkProvider >*
      mutable_network_providers();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_NetworkProvider >&
      network_providers() const;

  // repeated .safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll dll = 9;
  int dll_size() const;
  void clear_dll();
  static const int kDllFieldNumber = 9;
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll& dll(int index) const;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll* mutable_dll(int index);
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll* add_dll();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll >*
      mutable_dll();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll >&
      dll() const;

  // repeated string blacklisted_dll = 10;
  int blacklisted_dll_size() const;
  void clear_blacklisted_dll();
  static const int kBlacklistedDllFieldNumber = 10;
  const ::std::string& blacklisted_dll(int index) const;
  ::std::string* mutable_blacklisted_dll(int index);
  void set_blacklisted_dll(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_blacklisted_dll(int index, ::std::string&& value);
  #endif
  void set_blacklisted_dll(int index, const char* value);
  void set_blacklisted_dll(int index, const char* value, size_t size);
  ::std::string* add_blacklisted_dll();
  void add_blacklisted_dll(const ::std::string& value);
  #if LANG_CXX11
  void add_blacklisted_dll(::std::string&& value);
  #endif
  void add_blacklisted_dll(const char* value);
  void add_blacklisted_dll(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& blacklisted_dll() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_blacklisted_dll();

  // repeated .safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState module_state = 11;
  int module_state_size() const;
  void clear_module_state();
  static const int kModuleStateFieldNumber = 11;
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState& module_state(int index) const;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState* mutable_module_state(int index);
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState* add_module_state();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState >*
      mutable_module_state();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState >&
      module_state() const;

  // optional string version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional int64 uptime_msec = 6;
  bool has_uptime_msec() const;
  void clear_uptime_msec();
  static const int kUptimeMsecFieldNumber = 6;
  ::google::protobuf::int64 uptime_msec() const;
  void set_uptime_msec(::google::protobuf::int64 value);

  // optional .safe_browsing.ClientIncidentReport.EnvironmentData.Process.Channel chrome_update_channel = 5;
  bool has_chrome_update_channel() const;
  void clear_chrome_update_channel();
  static const int kChromeUpdateChannelFieldNumber = 5;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Channel chrome_update_channel() const;
  void set_chrome_update_channel(::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Channel value);

  // optional bool metrics_consent = 7;
  bool has_metrics_consent() const;
  void clear_metrics_consent();
  static const int kMetricsConsentFieldNumber = 7;
  bool metrics_consent() const;
  void set_metrics_consent(bool value);

  // optional bool OBSOLETE_extended_consent = 8;
  bool has_obsolete_extended_consent() const;
  void clear_obsolete_extended_consent();
  static const int kOBSOLETEExtendedConsentFieldNumber = 8;
  bool obsolete_extended_consent() const;
  void set_obsolete_extended_consent(bool value);

  // optional bool OBSOLETE_field_trial_participant = 12;
  bool has_obsolete_field_trial_participant() const;
  void clear_obsolete_field_trial_participant();
  static const int kOBSOLETEFieldTrialParticipantFieldNumber = 12;
  bool obsolete_field_trial_participant() const;
  void set_obsolete_field_trial_participant(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.EnvironmentData.Process)
 private:
  void set_has_version();
  void clear_has_version();
  void set_has_chrome_update_channel();
  void clear_has_chrome_update_channel();
  void set_has_uptime_msec();
  void clear_has_uptime_msec();
  void set_has_metrics_consent();
  void clear_has_metrics_consent();
  void set_has_obsolete_extended_consent();
  void clear_has_obsolete_extended_consent();
  void set_has_obsolete_field_trial_participant();
  void clear_has_obsolete_field_trial_participant();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> obsolete_dlls_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Patch > patches_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_NetworkProvider > network_providers_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll > dll_;
  ::google::protobuf::RepeatedPtrField< ::std::string> blacklisted_dll_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState > module_state_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::int64 uptime_msec_;
  int chrome_update_channel_;
  bool metrics_consent_;
  bool obsolete_extended_consent_;
  bool obsolete_field_trial_participant_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_EnvironmentData : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.EnvironmentData) */ {
 public:
  ClientIncidentReport_EnvironmentData();
  virtual ~ClientIncidentReport_EnvironmentData();

  ClientIncidentReport_EnvironmentData(const ClientIncidentReport_EnvironmentData& from);

  inline ClientIncidentReport_EnvironmentData& operator=(const ClientIncidentReport_EnvironmentData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_EnvironmentData(ClientIncidentReport_EnvironmentData&& from) noexcept
    : ClientIncidentReport_EnvironmentData() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_EnvironmentData& operator=(ClientIncidentReport_EnvironmentData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_EnvironmentData& default_instance();

  static inline const ClientIncidentReport_EnvironmentData* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_EnvironmentData*>(
               &_ClientIncidentReport_EnvironmentData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(ClientIncidentReport_EnvironmentData* other);
  friend void swap(ClientIncidentReport_EnvironmentData& a, ClientIncidentReport_EnvironmentData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_EnvironmentData* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_EnvironmentData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_EnvironmentData& from);
  void MergeFrom(const ClientIncidentReport_EnvironmentData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_EnvironmentData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentReport_EnvironmentData_OS OS;
  typedef ClientIncidentReport_EnvironmentData_Machine Machine;
  typedef ClientIncidentReport_EnvironmentData_Process Process;

  // accessors -------------------------------------------------------

  // optional .safe_browsing.ClientIncidentReport.EnvironmentData.OS os = 1;
  bool has_os() const;
  void clear_os();
  static const int kOsFieldNumber = 1;
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_OS& os() const;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_OS* mutable_os();
  ::safe_browsing::ClientIncidentReport_EnvironmentData_OS* release_os();
  void set_allocated_os(::safe_browsing::ClientIncidentReport_EnvironmentData_OS* os);

  // optional .safe_browsing.ClientIncidentReport.EnvironmentData.Machine machine = 2;
  bool has_machine() const;
  void clear_machine();
  static const int kMachineFieldNumber = 2;
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_Machine& machine() const;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Machine* mutable_machine();
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Machine* release_machine();
  void set_allocated_machine(::safe_browsing::ClientIncidentReport_EnvironmentData_Machine* machine);

  // optional .safe_browsing.ClientIncidentReport.EnvironmentData.Process process = 3;
  bool has_process() const;
  void clear_process();
  static const int kProcessFieldNumber = 3;
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process& process() const;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process* mutable_process();
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process* release_process();
  void set_allocated_process(::safe_browsing::ClientIncidentReport_EnvironmentData_Process* process);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.EnvironmentData)
 private:
  void set_has_os();
  void clear_has_os();
  void set_has_machine();
  void clear_has_machine();
  void set_has_process();
  void clear_has_process();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_OS* os_;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Machine* machine_;
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process* process_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_ExtensionData_ExtensionInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo) */ {
 public:
  ClientIncidentReport_ExtensionData_ExtensionInfo();
  virtual ~ClientIncidentReport_ExtensionData_ExtensionInfo();

  ClientIncidentReport_ExtensionData_ExtensionInfo(const ClientIncidentReport_ExtensionData_ExtensionInfo& from);

  inline ClientIncidentReport_ExtensionData_ExtensionInfo& operator=(const ClientIncidentReport_ExtensionData_ExtensionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_ExtensionData_ExtensionInfo(ClientIncidentReport_ExtensionData_ExtensionInfo&& from) noexcept
    : ClientIncidentReport_ExtensionData_ExtensionInfo() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_ExtensionData_ExtensionInfo& operator=(ClientIncidentReport_ExtensionData_ExtensionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_ExtensionData_ExtensionInfo& default_instance();

  static inline const ClientIncidentReport_ExtensionData_ExtensionInfo* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_ExtensionData_ExtensionInfo*>(
               &_ClientIncidentReport_ExtensionData_ExtensionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(ClientIncidentReport_ExtensionData_ExtensionInfo* other);
  friend void swap(ClientIncidentReport_ExtensionData_ExtensionInfo& a, ClientIncidentReport_ExtensionData_ExtensionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_ExtensionData_ExtensionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_ExtensionData_ExtensionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_ExtensionData_ExtensionInfo& from);
  void MergeFrom(const ClientIncidentReport_ExtensionData_ExtensionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_ExtensionData_ExtensionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState ExtensionState;
  static const ExtensionState STATE_UNKNOWN =
    ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_UNKNOWN;
  static const ExtensionState STATE_ENABLED =
    ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_ENABLED;
  static const ExtensionState STATE_DISABLED =
    ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_DISABLED;
  static const ExtensionState STATE_BLACKLISTED =
    ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_BLACKLISTED;
  static const ExtensionState STATE_BLOCKED =
    ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_BLOCKED;
  static const ExtensionState STATE_TERMINATED =
    ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_STATE_TERMINATED;
  static inline bool ExtensionState_IsValid(int value) {
    return ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_IsValid(value);
  }
  static const ExtensionState ExtensionState_MIN =
    ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_ExtensionState_MIN;
  static const ExtensionState ExtensionState_MAX =
    ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_ExtensionState_MAX;
  static const int ExtensionState_ARRAYSIZE =
    ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_ExtensionState_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional string version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string description = 4;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 4;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string update_url = 7;
  bool has_update_url() const;
  void clear_update_url();
  static const int kUpdateUrlFieldNumber = 7;
  const ::std::string& update_url() const;
  void set_update_url(const ::std::string& value);
  #if LANG_CXX11
  void set_update_url(::std::string&& value);
  #endif
  void set_update_url(const char* value);
  void set_update_url(const char* value, size_t size);
  ::std::string* mutable_update_url();
  ::std::string* release_update_url();
  void set_allocated_update_url(::std::string* update_url);

  // optional string manifest = 19;
  bool has_manifest() const;
  void clear_manifest();
  static const int kManifestFieldNumber = 19;
  const ::std::string& manifest() const;
  void set_manifest(const ::std::string& value);
  #if LANG_CXX11
  void set_manifest(::std::string&& value);
  #endif
  void set_manifest(const char* value);
  void set_manifest(const char* value, size_t size);
  ::std::string* mutable_manifest();
  ::std::string* release_manifest();
  void set_allocated_manifest(::std::string* manifest);

  // optional .safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.ExtensionState state = 5 [default = STATE_UNKNOWN];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState state() const;
  void set_state(::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState value);

  // optional int32 type = 6;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 6;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional bool has_signature_validation = 8;
  bool has_has_signature_validation() const;
  void clear_has_signature_validation();
  static const int kHasSignatureValidationFieldNumber = 8;
  bool has_signature_validation() const;
  void set_has_signature_validation(bool value);

  // optional bool signature_is_valid = 9;
  bool has_signature_is_valid() const;
  void clear_signature_is_valid();
  static const int kSignatureIsValidFieldNumber = 9;
  bool signature_is_valid() const;
  void set_signature_is_valid(bool value);

  // optional bool installed_by_custodian = 10;
  bool has_installed_by_custodian() const;
  void clear_installed_by_custodian();
  static const int kInstalledByCustodianFieldNumber = 10;
  bool installed_by_custodian() const;
  void set_installed_by_custodian(bool value);

  // optional bool installed_by_default = 11;
  bool has_installed_by_default() const;
  void clear_installed_by_default();
  static const int kInstalledByDefaultFieldNumber = 11;
  bool installed_by_default() const;
  void set_installed_by_default(bool value);

  // optional bool installed_by_oem = 12;
  bool has_installed_by_oem() const;
  void clear_installed_by_oem();
  static const int kInstalledByOemFieldNumber = 12;
  bool installed_by_oem() const;
  void set_installed_by_oem(bool value);

  // optional bool from_bookmark = 13;
  bool has_from_bookmark() const;
  void clear_from_bookmark();
  static const int kFromBookmarkFieldNumber = 13;
  bool from_bookmark() const;
  void set_from_bookmark(bool value);

  // optional bool from_webstore = 14;
  bool has_from_webstore() const;
  void clear_from_webstore();
  static const int kFromWebstoreFieldNumber = 14;
  bool from_webstore() const;
  void set_from_webstore(bool value);

  // optional bool converted_from_user_script = 15;
  bool has_converted_from_user_script() const;
  void clear_converted_from_user_script();
  static const int kConvertedFromUserScriptFieldNumber = 15;
  bool converted_from_user_script() const;
  void set_converted_from_user_script(bool value);

  // optional int64 install_time_msec = 17;
  bool has_install_time_msec() const;
  void clear_install_time_msec();
  static const int kInstallTimeMsecFieldNumber = 17;
  ::google::protobuf::int64 install_time_msec() const;
  void set_install_time_msec(::google::protobuf::int64 value);

  // optional bool may_be_untrusted = 16;
  bool has_may_be_untrusted() const;
  void clear_may_be_untrusted();
  static const int kMayBeUntrustedFieldNumber = 16;
  bool may_be_untrusted() const;
  void set_may_be_untrusted(bool value);

  // optional int32 manifest_location_type = 18;
  bool has_manifest_location_type() const;
  void clear_manifest_location_type();
  static const int kManifestLocationTypeFieldNumber = 18;
  ::google::protobuf::int32 manifest_location_type() const;
  void set_manifest_location_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_version();
  void clear_has_version();
  void set_has_name();
  void clear_has_name();
  void set_has_description();
  void clear_has_description();
  void set_has_state();
  void clear_has_state();
  void set_has_type();
  void clear_has_type();
  void set_has_update_url();
  void clear_has_update_url();
  void set_has_has_signature_validation();
  void clear_has_has_signature_validation();
  void set_has_signature_is_valid();
  void clear_has_signature_is_valid();
  void set_has_installed_by_custodian();
  void clear_has_installed_by_custodian();
  void set_has_installed_by_default();
  void clear_has_installed_by_default();
  void set_has_installed_by_oem();
  void clear_has_installed_by_oem();
  void set_has_from_bookmark();
  void clear_has_from_bookmark();
  void set_has_from_webstore();
  void clear_has_from_webstore();
  void set_has_converted_from_user_script();
  void clear_has_converted_from_user_script();
  void set_has_may_be_untrusted();
  void clear_has_may_be_untrusted();
  void set_has_install_time_msec();
  void clear_has_install_time_msec();
  void set_has_manifest_location_type();
  void clear_has_manifest_location_type();
  void set_has_manifest();
  void clear_has_manifest();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr update_url_;
  ::google::protobuf::internal::ArenaStringPtr manifest_;
  int state_;
  ::google::protobuf::int32 type_;
  bool has_signature_validation_;
  bool signature_is_valid_;
  bool installed_by_custodian_;
  bool installed_by_default_;
  bool installed_by_oem_;
  bool from_bookmark_;
  bool from_webstore_;
  bool converted_from_user_script_;
  ::google::protobuf::int64 install_time_msec_;
  bool may_be_untrusted_;
  ::google::protobuf::int32 manifest_location_type_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_ExtensionData : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.ExtensionData) */ {
 public:
  ClientIncidentReport_ExtensionData();
  virtual ~ClientIncidentReport_ExtensionData();

  ClientIncidentReport_ExtensionData(const ClientIncidentReport_ExtensionData& from);

  inline ClientIncidentReport_ExtensionData& operator=(const ClientIncidentReport_ExtensionData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_ExtensionData(ClientIncidentReport_ExtensionData&& from) noexcept
    : ClientIncidentReport_ExtensionData() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_ExtensionData& operator=(ClientIncidentReport_ExtensionData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_ExtensionData& default_instance();

  static inline const ClientIncidentReport_ExtensionData* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_ExtensionData*>(
               &_ClientIncidentReport_ExtensionData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(ClientIncidentReport_ExtensionData* other);
  friend void swap(ClientIncidentReport_ExtensionData& a, ClientIncidentReport_ExtensionData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_ExtensionData* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_ExtensionData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_ExtensionData& from);
  void MergeFrom(const ClientIncidentReport_ExtensionData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_ExtensionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentReport_ExtensionData_ExtensionInfo ExtensionInfo;

  // accessors -------------------------------------------------------

  // optional .safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo last_installed_extension = 1;
  bool has_last_installed_extension() const;
  void clear_last_installed_extension();
  static const int kLastInstalledExtensionFieldNumber = 1;
  const ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo& last_installed_extension() const;
  ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo* mutable_last_installed_extension();
  ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo* release_last_installed_extension();
  void set_allocated_last_installed_extension(::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo* last_installed_extension);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.ExtensionData)
 private:
  void set_has_last_installed_extension();
  void clear_has_last_installed_extension();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo* last_installed_extension_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport_NonBinaryDownloadDetails : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails) */ {
 public:
  ClientIncidentReport_NonBinaryDownloadDetails();
  virtual ~ClientIncidentReport_NonBinaryDownloadDetails();

  ClientIncidentReport_NonBinaryDownloadDetails(const ClientIncidentReport_NonBinaryDownloadDetails& from);

  inline ClientIncidentReport_NonBinaryDownloadDetails& operator=(const ClientIncidentReport_NonBinaryDownloadDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport_NonBinaryDownloadDetails(ClientIncidentReport_NonBinaryDownloadDetails&& from) noexcept
    : ClientIncidentReport_NonBinaryDownloadDetails() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport_NonBinaryDownloadDetails& operator=(ClientIncidentReport_NonBinaryDownloadDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport_NonBinaryDownloadDetails& default_instance();

  static inline const ClientIncidentReport_NonBinaryDownloadDetails* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport_NonBinaryDownloadDetails*>(
               &_ClientIncidentReport_NonBinaryDownloadDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(ClientIncidentReport_NonBinaryDownloadDetails* other);
  friend void swap(ClientIncidentReport_NonBinaryDownloadDetails& a, ClientIncidentReport_NonBinaryDownloadDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport_NonBinaryDownloadDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport_NonBinaryDownloadDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport_NonBinaryDownloadDetails& from);
  void MergeFrom(const ClientIncidentReport_NonBinaryDownloadDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport_NonBinaryDownloadDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string file_type = 1;
  bool has_file_type() const;
  void clear_file_type();
  static const int kFileTypeFieldNumber = 1;
  const ::std::string& file_type() const;
  void set_file_type(const ::std::string& value);
  #if LANG_CXX11
  void set_file_type(::std::string&& value);
  #endif
  void set_file_type(const char* value);
  void set_file_type(const char* value, size_t size);
  ::std::string* mutable_file_type();
  ::std::string* release_file_type();
  void set_allocated_file_type(::std::string* file_type);

  // optional bytes url_spec_sha256 = 2;
  bool has_url_spec_sha256() const;
  void clear_url_spec_sha256();
  static const int kUrlSpecSha256FieldNumber = 2;
  const ::std::string& url_spec_sha256() const;
  void set_url_spec_sha256(const ::std::string& value);
  #if LANG_CXX11
  void set_url_spec_sha256(::std::string&& value);
  #endif
  void set_url_spec_sha256(const char* value);
  void set_url_spec_sha256(const void* value, size_t size);
  ::std::string* mutable_url_spec_sha256();
  ::std::string* release_url_spec_sha256();
  void set_allocated_url_spec_sha256(::std::string* url_spec_sha256);

  // optional string host = 3;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 3;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional int64 length = 4;
  bool has_length() const;
  void clear_length();
  static const int kLengthFieldNumber = 4;
  ::google::protobuf::int64 length() const;
  void set_length(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails)
 private:
  void set_has_file_type();
  void clear_has_file_type();
  void set_has_url_spec_sha256();
  void clear_has_url_spec_sha256();
  void set_has_host();
  void clear_has_host();
  void set_has_length();
  void clear_has_length();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_type_;
  ::google::protobuf::internal::ArenaStringPtr url_spec_sha256_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::int64 length_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentReport : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentReport) */ {
 public:
  ClientIncidentReport();
  virtual ~ClientIncidentReport();

  ClientIncidentReport(const ClientIncidentReport& from);

  inline ClientIncidentReport& operator=(const ClientIncidentReport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentReport(ClientIncidentReport&& from) noexcept
    : ClientIncidentReport() {
    *this = ::std::move(from);
  }

  inline ClientIncidentReport& operator=(ClientIncidentReport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentReport& default_instance();

  static inline const ClientIncidentReport* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentReport*>(
               &_ClientIncidentReport_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(ClientIncidentReport* other);
  friend void swap(ClientIncidentReport& a, ClientIncidentReport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentReport* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentReport* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentReport& from);
  void MergeFrom(const ClientIncidentReport& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentReport_IncidentData IncidentData;
  typedef ClientIncidentReport_DownloadDetails DownloadDetails;
  typedef ClientIncidentReport_EnvironmentData EnvironmentData;
  typedef ClientIncidentReport_ExtensionData ExtensionData;
  typedef ClientIncidentReport_NonBinaryDownloadDetails NonBinaryDownloadDetails;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientIncidentReport.IncidentData incident = 1;
  int incident_size() const;
  void clear_incident();
  static const int kIncidentFieldNumber = 1;
  const ::safe_browsing::ClientIncidentReport_IncidentData& incident(int index) const;
  ::safe_browsing::ClientIncidentReport_IncidentData* mutable_incident(int index);
  ::safe_browsing::ClientIncidentReport_IncidentData* add_incident();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_IncidentData >*
      mutable_incident();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_IncidentData >&
      incident() const;

  // optional .safe_browsing.ClientIncidentReport.DownloadDetails download = 2;
  bool has_download() const;
  void clear_download();
  static const int kDownloadFieldNumber = 2;
  const ::safe_browsing::ClientIncidentReport_DownloadDetails& download() const;
  ::safe_browsing::ClientIncidentReport_DownloadDetails* mutable_download();
  ::safe_browsing::ClientIncidentReport_DownloadDetails* release_download();
  void set_allocated_download(::safe_browsing::ClientIncidentReport_DownloadDetails* download);

  // optional .safe_browsing.ClientIncidentReport.EnvironmentData environment = 3;
  bool has_environment() const;
  void clear_environment();
  static const int kEnvironmentFieldNumber = 3;
  const ::safe_browsing::ClientIncidentReport_EnvironmentData& environment() const;
  ::safe_browsing::ClientIncidentReport_EnvironmentData* mutable_environment();
  ::safe_browsing::ClientIncidentReport_EnvironmentData* release_environment();
  void set_allocated_environment(::safe_browsing::ClientIncidentReport_EnvironmentData* environment);

  // optional .safe_browsing.ChromeUserPopulation population = 7;
  bool has_population() const;
  void clear_population();
  static const int kPopulationFieldNumber = 7;
  const ::safe_browsing::ChromeUserPopulation& population() const;
  ::safe_browsing::ChromeUserPopulation* mutable_population();
  ::safe_browsing::ChromeUserPopulation* release_population();
  void set_allocated_population(::safe_browsing::ChromeUserPopulation* population);

  // optional .safe_browsing.ClientIncidentReport.ExtensionData extension_data = 8;
  bool has_extension_data() const;
  void clear_extension_data();
  static const int kExtensionDataFieldNumber = 8;
  const ::safe_browsing::ClientIncidentReport_ExtensionData& extension_data() const;
  ::safe_browsing::ClientIncidentReport_ExtensionData* mutable_extension_data();
  ::safe_browsing::ClientIncidentReport_ExtensionData* release_extension_data();
  void set_allocated_extension_data(::safe_browsing::ClientIncidentReport_ExtensionData* extension_data);

  // optional .safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails non_binary_download = 9;
  bool has_non_binary_download() const;
  void clear_non_binary_download();
  static const int kNonBinaryDownloadFieldNumber = 9;
  const ::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails& non_binary_download() const;
  ::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails* mutable_non_binary_download();
  ::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails* release_non_binary_download();
  void set_allocated_non_binary_download(::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails* non_binary_download);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentReport)
 private:
  void set_has_download();
  void clear_has_download();
  void set_has_environment();
  void clear_has_environment();
  void set_has_population();
  void clear_has_population();
  void set_has_extension_data();
  void clear_has_extension_data();
  void set_has_non_binary_download();
  void clear_has_non_binary_download();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_IncidentData > incident_;
  ::safe_browsing::ClientIncidentReport_DownloadDetails* download_;
  ::safe_browsing::ClientIncidentReport_EnvironmentData* environment_;
  ::safe_browsing::ChromeUserPopulation* population_;
  ::safe_browsing::ClientIncidentReport_ExtensionData* extension_data_;
  ::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails* non_binary_download_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentResponse_EnvironmentRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentResponse.EnvironmentRequest) */ {
 public:
  ClientIncidentResponse_EnvironmentRequest();
  virtual ~ClientIncidentResponse_EnvironmentRequest();

  ClientIncidentResponse_EnvironmentRequest(const ClientIncidentResponse_EnvironmentRequest& from);

  inline ClientIncidentResponse_EnvironmentRequest& operator=(const ClientIncidentResponse_EnvironmentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentResponse_EnvironmentRequest(ClientIncidentResponse_EnvironmentRequest&& from) noexcept
    : ClientIncidentResponse_EnvironmentRequest() {
    *this = ::std::move(from);
  }

  inline ClientIncidentResponse_EnvironmentRequest& operator=(ClientIncidentResponse_EnvironmentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentResponse_EnvironmentRequest& default_instance();

  static inline const ClientIncidentResponse_EnvironmentRequest* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentResponse_EnvironmentRequest*>(
               &_ClientIncidentResponse_EnvironmentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(ClientIncidentResponse_EnvironmentRequest* other);
  friend void swap(ClientIncidentResponse_EnvironmentRequest& a, ClientIncidentResponse_EnvironmentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentResponse_EnvironmentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentResponse_EnvironmentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentResponse_EnvironmentRequest& from);
  void MergeFrom(const ClientIncidentResponse_EnvironmentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentResponse_EnvironmentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dll_index = 1;
  bool has_dll_index() const;
  void clear_dll_index();
  static const int kDllIndexFieldNumber = 1;
  ::google::protobuf::int32 dll_index() const;
  void set_dll_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentResponse.EnvironmentRequest)
 private:
  void set_has_dll_index();
  void clear_has_dll_index();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 dll_index_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientIncidentResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientIncidentResponse) */ {
 public:
  ClientIncidentResponse();
  virtual ~ClientIncidentResponse();

  ClientIncidentResponse(const ClientIncidentResponse& from);

  inline ClientIncidentResponse& operator=(const ClientIncidentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientIncidentResponse(ClientIncidentResponse&& from) noexcept
    : ClientIncidentResponse() {
    *this = ::std::move(from);
  }

  inline ClientIncidentResponse& operator=(ClientIncidentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientIncidentResponse& default_instance();

  static inline const ClientIncidentResponse* internal_default_instance() {
    return reinterpret_cast<const ClientIncidentResponse*>(
               &_ClientIncidentResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(ClientIncidentResponse* other);
  friend void swap(ClientIncidentResponse& a, ClientIncidentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientIncidentResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientIncidentResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientIncidentResponse& from);
  void MergeFrom(const ClientIncidentResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientIncidentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientIncidentResponse_EnvironmentRequest EnvironmentRequest;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientIncidentResponse.EnvironmentRequest environment_requests = 3;
  int environment_requests_size() const;
  void clear_environment_requests();
  static const int kEnvironmentRequestsFieldNumber = 3;
  const ::safe_browsing::ClientIncidentResponse_EnvironmentRequest& environment_requests(int index) const;
  ::safe_browsing::ClientIncidentResponse_EnvironmentRequest* mutable_environment_requests(int index);
  ::safe_browsing::ClientIncidentResponse_EnvironmentRequest* add_environment_requests();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentResponse_EnvironmentRequest >*
      mutable_environment_requests();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentResponse_EnvironmentRequest >&
      environment_requests() const;

  // optional bytes token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional bool download_requested = 2;
  bool has_download_requested() const;
  void clear_download_requested();
  static const int kDownloadRequestedFieldNumber = 2;
  bool download_requested() const;
  void set_download_requested(bool value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientIncidentResponse)
 private:
  void set_has_token();
  void clear_has_token();
  void set_has_download_requested();
  void clear_has_download_requested();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentResponse_EnvironmentRequest > environment_requests_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  bool download_requested_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DownloadMetadata : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.DownloadMetadata) */ {
 public:
  DownloadMetadata();
  virtual ~DownloadMetadata();

  DownloadMetadata(const DownloadMetadata& from);

  inline DownloadMetadata& operator=(const DownloadMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DownloadMetadata(DownloadMetadata&& from) noexcept
    : DownloadMetadata() {
    *this = ::std::move(from);
  }

  inline DownloadMetadata& operator=(DownloadMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const DownloadMetadata& default_instance();

  static inline const DownloadMetadata* internal_default_instance() {
    return reinterpret_cast<const DownloadMetadata*>(
               &_DownloadMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(DownloadMetadata* other);
  friend void swap(DownloadMetadata& a, DownloadMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DownloadMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const DownloadMetadata& from);
  void MergeFrom(const DownloadMetadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DownloadMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .safe_browsing.ClientIncidentReport.DownloadDetails download = 2;
  bool has_download() const;
  void clear_download();
  static const int kDownloadFieldNumber = 2;
  const ::safe_browsing::ClientIncidentReport_DownloadDetails& download() const;
  ::safe_browsing::ClientIncidentReport_DownloadDetails* mutable_download();
  ::safe_browsing::ClientIncidentReport_DownloadDetails* release_download();
  void set_allocated_download(::safe_browsing::ClientIncidentReport_DownloadDetails* download);

  // optional uint32 download_id = 1;
  bool has_download_id() const;
  void clear_download_id();
  static const int kDownloadIdFieldNumber = 1;
  ::google::protobuf::uint32 download_id() const;
  void set_download_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.DownloadMetadata)
 private:
  void set_has_download_id();
  void clear_has_download_id();
  void set_has_download();
  void clear_has_download();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::safe_browsing::ClientIncidentReport_DownloadDetails* download_;
  ::google::protobuf::uint32 download_id_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientSafeBrowsingReportRequest_HTTPHeader : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader) */ {
 public:
  ClientSafeBrowsingReportRequest_HTTPHeader();
  virtual ~ClientSafeBrowsingReportRequest_HTTPHeader();

  ClientSafeBrowsingReportRequest_HTTPHeader(const ClientSafeBrowsingReportRequest_HTTPHeader& from);

  inline ClientSafeBrowsingReportRequest_HTTPHeader& operator=(const ClientSafeBrowsingReportRequest_HTTPHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientSafeBrowsingReportRequest_HTTPHeader(ClientSafeBrowsingReportRequest_HTTPHeader&& from) noexcept
    : ClientSafeBrowsingReportRequest_HTTPHeader() {
    *this = ::std::move(from);
  }

  inline ClientSafeBrowsingReportRequest_HTTPHeader& operator=(ClientSafeBrowsingReportRequest_HTTPHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientSafeBrowsingReportRequest_HTTPHeader& default_instance();

  static inline const ClientSafeBrowsingReportRequest_HTTPHeader* internal_default_instance() {
    return reinterpret_cast<const ClientSafeBrowsingReportRequest_HTTPHeader*>(
               &_ClientSafeBrowsingReportRequest_HTTPHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(ClientSafeBrowsingReportRequest_HTTPHeader* other);
  friend void swap(ClientSafeBrowsingReportRequest_HTTPHeader& a, ClientSafeBrowsingReportRequest_HTTPHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientSafeBrowsingReportRequest_HTTPHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientSafeBrowsingReportRequest_HTTPHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientSafeBrowsingReportRequest_HTTPHeader& from);
  void MergeFrom(const ClientSafeBrowsingReportRequest_HTTPHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientSafeBrowsingReportRequest_HTTPHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine) */ {
 public:
  ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine();
  virtual ~ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine();

  ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine(const ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine& from);

  inline ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine& operator=(const ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine(ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine&& from) noexcept
    : ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine() {
    *this = ::std::move(from);
  }

  inline ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine& operator=(ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine& default_instance();

  static inline const ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* internal_default_instance() {
    return reinterpret_cast<const ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine*>(
               &_ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* other);
  friend void swap(ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine& a, ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine& from);
  void MergeFrom(const ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes verb = 1;
  bool has_verb() const;
  void clear_verb();
  static const int kVerbFieldNumber = 1;
  const ::std::string& verb() const;
  void set_verb(const ::std::string& value);
  #if LANG_CXX11
  void set_verb(::std::string&& value);
  #endif
  void set_verb(const char* value);
  void set_verb(const void* value, size_t size);
  ::std::string* mutable_verb();
  ::std::string* release_verb();
  void set_allocated_verb(::std::string* verb);

  // optional bytes uri = 2;
  bool has_uri() const;
  void clear_uri();
  static const int kUriFieldNumber = 2;
  const ::std::string& uri() const;
  void set_uri(const ::std::string& value);
  #if LANG_CXX11
  void set_uri(::std::string&& value);
  #endif
  void set_uri(const char* value);
  void set_uri(const void* value, size_t size);
  ::std::string* mutable_uri();
  ::std::string* release_uri();
  void set_allocated_uri(::std::string* uri);

  // optional bytes version = 3;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine)
 private:
  void set_has_verb();
  void clear_has_verb();
  void set_has_uri();
  void clear_has_uri();
  void set_has_version();
  void clear_has_version();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr verb_;
  ::google::protobuf::internal::ArenaStringPtr uri_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientSafeBrowsingReportRequest_HTTPRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest) */ {
 public:
  ClientSafeBrowsingReportRequest_HTTPRequest();
  virtual ~ClientSafeBrowsingReportRequest_HTTPRequest();

  ClientSafeBrowsingReportRequest_HTTPRequest(const ClientSafeBrowsingReportRequest_HTTPRequest& from);

  inline ClientSafeBrowsingReportRequest_HTTPRequest& operator=(const ClientSafeBrowsingReportRequest_HTTPRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientSafeBrowsingReportRequest_HTTPRequest(ClientSafeBrowsingReportRequest_HTTPRequest&& from) noexcept
    : ClientSafeBrowsingReportRequest_HTTPRequest() {
    *this = ::std::move(from);
  }

  inline ClientSafeBrowsingReportRequest_HTTPRequest& operator=(ClientSafeBrowsingReportRequest_HTTPRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientSafeBrowsingReportRequest_HTTPRequest& default_instance();

  static inline const ClientSafeBrowsingReportRequest_HTTPRequest* internal_default_instance() {
    return reinterpret_cast<const ClientSafeBrowsingReportRequest_HTTPRequest*>(
               &_ClientSafeBrowsingReportRequest_HTTPRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(ClientSafeBrowsingReportRequest_HTTPRequest* other);
  friend void swap(ClientSafeBrowsingReportRequest_HTTPRequest& a, ClientSafeBrowsingReportRequest_HTTPRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientSafeBrowsingReportRequest_HTTPRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientSafeBrowsingReportRequest_HTTPRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientSafeBrowsingReportRequest_HTTPRequest& from);
  void MergeFrom(const ClientSafeBrowsingReportRequest_HTTPRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientSafeBrowsingReportRequest_HTTPRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine FirstLine;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader headers = 2;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 2;
  const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader& headers(int index) const;
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader* mutable_headers(int index);
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader* add_headers();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader >*
      mutable_headers();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader >&
      headers() const;

  // optional bytes body = 3;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // optional bytes bodydigest = 4;
  bool has_bodydigest() const;
  void clear_bodydigest();
  static const int kBodydigestFieldNumber = 4;
  const ::std::string& bodydigest() const;
  void set_bodydigest(const ::std::string& value);
  #if LANG_CXX11
  void set_bodydigest(::std::string&& value);
  #endif
  void set_bodydigest(const char* value);
  void set_bodydigest(const void* value, size_t size);
  ::std::string* mutable_bodydigest();
  ::std::string* release_bodydigest();
  void set_allocated_bodydigest(::std::string* bodydigest);

  // optional .safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine firstline = 1;
  bool has_firstline() const;
  void clear_firstline();
  static const int kFirstlineFieldNumber = 1;
  const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine& firstline() const;
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* mutable_firstline();
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* release_firstline();
  void set_allocated_firstline(::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* firstline);

  // optional int32 bodylength = 5;
  bool has_bodylength() const;
  void clear_bodylength();
  static const int kBodylengthFieldNumber = 5;
  ::google::protobuf::int32 bodylength() const;
  void set_bodylength(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest)
 private:
  void set_has_firstline();
  void clear_has_firstline();
  void set_has_body();
  void clear_has_body();
  void set_has_bodydigest();
  void clear_has_bodydigest();
  void set_has_bodylength();
  void clear_has_bodylength();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader > headers_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::internal::ArenaStringPtr bodydigest_;
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* firstline_;
  ::google::protobuf::int32 bodylength_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine) */ {
 public:
  ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine();
  virtual ~ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine();

  ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine(const ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine& from);

  inline ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine& operator=(const ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine(ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine&& from) noexcept
    : ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine() {
    *this = ::std::move(from);
  }

  inline ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine& operator=(ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine& default_instance();

  static inline const ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* internal_default_instance() {
    return reinterpret_cast<const ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine*>(
               &_ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* other);
  friend void swap(ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine& a, ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine& from);
  void MergeFrom(const ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional bytes version = 3;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_message();
  void clear_has_message();
  void set_has_version();
  void clear_has_version();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::int32 code_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientSafeBrowsingReportRequest_HTTPResponse : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse) */ {
 public:
  ClientSafeBrowsingReportRequest_HTTPResponse();
  virtual ~ClientSafeBrowsingReportRequest_HTTPResponse();

  ClientSafeBrowsingReportRequest_HTTPResponse(const ClientSafeBrowsingReportRequest_HTTPResponse& from);

  inline ClientSafeBrowsingReportRequest_HTTPResponse& operator=(const ClientSafeBrowsingReportRequest_HTTPResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientSafeBrowsingReportRequest_HTTPResponse(ClientSafeBrowsingReportRequest_HTTPResponse&& from) noexcept
    : ClientSafeBrowsingReportRequest_HTTPResponse() {
    *this = ::std::move(from);
  }

  inline ClientSafeBrowsingReportRequest_HTTPResponse& operator=(ClientSafeBrowsingReportRequest_HTTPResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientSafeBrowsingReportRequest_HTTPResponse& default_instance();

  static inline const ClientSafeBrowsingReportRequest_HTTPResponse* internal_default_instance() {
    return reinterpret_cast<const ClientSafeBrowsingReportRequest_HTTPResponse*>(
               &_ClientSafeBrowsingReportRequest_HTTPResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(ClientSafeBrowsingReportRequest_HTTPResponse* other);
  friend void swap(ClientSafeBrowsingReportRequest_HTTPResponse& a, ClientSafeBrowsingReportRequest_HTTPResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientSafeBrowsingReportRequest_HTTPResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientSafeBrowsingReportRequest_HTTPResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientSafeBrowsingReportRequest_HTTPResponse& from);
  void MergeFrom(const ClientSafeBrowsingReportRequest_HTTPResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientSafeBrowsingReportRequest_HTTPResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine FirstLine;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader headers = 2;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 2;
  const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader& headers(int index) const;
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader* mutable_headers(int index);
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader* add_headers();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader >*
      mutable_headers();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader >&
      headers() const;

  // optional bytes body = 3;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // optional bytes bodydigest = 4;
  bool has_bodydigest() const;
  void clear_bodydigest();
  static const int kBodydigestFieldNumber = 4;
  const ::std::string& bodydigest() const;
  void set_bodydigest(const ::std::string& value);
  #if LANG_CXX11
  void set_bodydigest(::std::string&& value);
  #endif
  void set_bodydigest(const char* value);
  void set_bodydigest(const void* value, size_t size);
  ::std::string* mutable_bodydigest();
  ::std::string* release_bodydigest();
  void set_allocated_bodydigest(::std::string* bodydigest);

  // optional bytes remote_ip = 6;
  bool has_remote_ip() const;
  void clear_remote_ip();
  static const int kRemoteIpFieldNumber = 6;
  const ::std::string& remote_ip() const;
  void set_remote_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_remote_ip(::std::string&& value);
  #endif
  void set_remote_ip(const char* value);
  void set_remote_ip(const void* value, size_t size);
  ::std::string* mutable_remote_ip();
  ::std::string* release_remote_ip();
  void set_allocated_remote_ip(::std::string* remote_ip);

  // optional .safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine firstline = 1;
  bool has_firstline() const;
  void clear_firstline();
  static const int kFirstlineFieldNumber = 1;
  const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine& firstline() const;
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* mutable_firstline();
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* release_firstline();
  void set_allocated_firstline(::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* firstline);

  // optional int32 bodylength = 5;
  bool has_bodylength() const;
  void clear_bodylength();
  static const int kBodylengthFieldNumber = 5;
  ::google::protobuf::int32 bodylength() const;
  void set_bodylength(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse)
 private:
  void set_has_firstline();
  void clear_has_firstline();
  void set_has_body();
  void clear_has_body();
  void set_has_bodydigest();
  void clear_has_bodydigest();
  void set_has_bodylength();
  void clear_has_bodylength();
  void set_has_remote_ip();
  void clear_has_remote_ip();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader > headers_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::internal::ArenaStringPtr bodydigest_;
  ::google::protobuf::internal::ArenaStringPtr remote_ip_;
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* firstline_;
  ::google::protobuf::int32 bodylength_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientSafeBrowsingReportRequest_Resource : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientSafeBrowsingReportRequest.Resource) */ {
 public:
  ClientSafeBrowsingReportRequest_Resource();
  virtual ~ClientSafeBrowsingReportRequest_Resource();

  ClientSafeBrowsingReportRequest_Resource(const ClientSafeBrowsingReportRequest_Resource& from);

  inline ClientSafeBrowsingReportRequest_Resource& operator=(const ClientSafeBrowsingReportRequest_Resource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientSafeBrowsingReportRequest_Resource(ClientSafeBrowsingReportRequest_Resource&& from) noexcept
    : ClientSafeBrowsingReportRequest_Resource() {
    *this = ::std::move(from);
  }

  inline ClientSafeBrowsingReportRequest_Resource& operator=(ClientSafeBrowsingReportRequest_Resource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientSafeBrowsingReportRequest_Resource& default_instance();

  static inline const ClientSafeBrowsingReportRequest_Resource* internal_default_instance() {
    return reinterpret_cast<const ClientSafeBrowsingReportRequest_Resource*>(
               &_ClientSafeBrowsingReportRequest_Resource_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(ClientSafeBrowsingReportRequest_Resource* other);
  friend void swap(ClientSafeBrowsingReportRequest_Resource& a, ClientSafeBrowsingReportRequest_Resource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientSafeBrowsingReportRequest_Resource* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientSafeBrowsingReportRequest_Resource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientSafeBrowsingReportRequest_Resource& from);
  void MergeFrom(const ClientSafeBrowsingReportRequest_Resource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientSafeBrowsingReportRequest_Resource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 child_ids = 6;
  int child_ids_size() const;
  void clear_child_ids();
  static const int kChildIdsFieldNumber = 6;
  ::google::protobuf::int32 child_ids(int index) const;
  void set_child_ids(int index, ::google::protobuf::int32 value);
  void add_child_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      child_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_child_ids();

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string tag_name = 7;
  bool has_tag_name() const;
  void clear_tag_name();
  static const int kTagNameFieldNumber = 7;
  const ::std::string& tag_name() const;
  void set_tag_name(const ::std::string& value);
  #if LANG_CXX11
  void set_tag_name(::std::string&& value);
  #endif
  void set_tag_name(const char* value);
  void set_tag_name(const char* value, size_t size);
  ::std::string* mutable_tag_name();
  ::std::string* release_tag_name();
  void set_allocated_tag_name(::std::string* tag_name);

  // optional .safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest request = 3;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 3;
  const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest& request() const;
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest* mutable_request();
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest* release_request();
  void set_allocated_request(::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest* request);

  // optional .safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse response = 4;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 4;
  const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse& response() const;
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse* mutable_response();
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse* release_response();
  void set_allocated_response(::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse* response);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 parent_id = 5;
  bool has_parent_id() const;
  void clear_parent_id();
  static const int kParentIdFieldNumber = 5;
  ::google::protobuf::int32 parent_id() const;
  void set_parent_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientSafeBrowsingReportRequest.Resource)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_url();
  void clear_has_url();
  void set_has_request();
  void clear_has_request();
  void set_has_response();
  void clear_has_response();
  void set_has_parent_id();
  void clear_has_parent_id();
  void set_has_tag_name();
  void clear_has_tag_name();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > child_ids_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr tag_name_;
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest* request_;
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse* response_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 parent_id_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties) */ {
 public:
  ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties();
  virtual ~ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties();

  ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties(const ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties& from);

  inline ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties& operator=(const ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties(ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties&& from) noexcept
    : ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties() {
    *this = ::std::move(from);
  }

  inline ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties& operator=(ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties& default_instance();

  static inline const ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* internal_default_instance() {
    return reinterpret_cast<const ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties*>(
               &_ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* other);
  friend void swap(ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties& a, ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties& from);
  void MergeFrom(const ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string client_version = 1;
  bool has_client_version() const;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 1;
  const ::std::string& client_version() const;
  void set_client_version(const ::std::string& value);
  #if LANG_CXX11
  void set_client_version(::std::string&& value);
  #endif
  void set_client_version(const char* value);
  void set_client_version(const char* value, size_t size);
  ::std::string* mutable_client_version();
  ::std::string* release_client_version();
  void set_allocated_client_version(::std::string* client_version);

  // optional int64 google_play_services_version = 2;
  bool has_google_play_services_version() const;
  void clear_google_play_services_version();
  static const int kGooglePlayServicesVersionFieldNumber = 2;
  ::google::protobuf::int64 google_play_services_version() const;
  void set_google_play_services_version(::google::protobuf::int64 value);

  // optional bool is_instant_apps = 3;
  bool has_is_instant_apps() const;
  void clear_is_instant_apps();
  static const int kIsInstantAppsFieldNumber = 3;
  bool is_instant_apps() const;
  void set_is_instant_apps(bool value);

  // optional .safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingUrlApiType url_api_type = 4;
  bool has_url_api_type() const;
  void clear_url_api_type();
  static const int kUrlApiTypeFieldNumber = 4;
  ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType url_api_type() const;
  void set_url_api_type(::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties)
 private:
  void set_has_client_version();
  void clear_has_client_version();
  void set_has_google_play_services_version();
  void clear_has_google_play_services_version();
  void set_has_is_instant_apps();
  void clear_has_is_instant_apps();
  void set_has_url_api_type();
  void clear_has_url_api_type();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr client_version_;
  ::google::protobuf::int64 google_play_services_version_;
  bool is_instant_apps_;
  int url_api_type_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientSafeBrowsingReportRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ClientSafeBrowsingReportRequest) */ {
 public:
  ClientSafeBrowsingReportRequest();
  virtual ~ClientSafeBrowsingReportRequest();

  ClientSafeBrowsingReportRequest(const ClientSafeBrowsingReportRequest& from);

  inline ClientSafeBrowsingReportRequest& operator=(const ClientSafeBrowsingReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientSafeBrowsingReportRequest(ClientSafeBrowsingReportRequest&& from) noexcept
    : ClientSafeBrowsingReportRequest() {
    *this = ::std::move(from);
  }

  inline ClientSafeBrowsingReportRequest& operator=(ClientSafeBrowsingReportRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ClientSafeBrowsingReportRequest& default_instance();

  static inline const ClientSafeBrowsingReportRequest* internal_default_instance() {
    return reinterpret_cast<const ClientSafeBrowsingReportRequest*>(
               &_ClientSafeBrowsingReportRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(ClientSafeBrowsingReportRequest* other);
  friend void swap(ClientSafeBrowsingReportRequest& a, ClientSafeBrowsingReportRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientSafeBrowsingReportRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientSafeBrowsingReportRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ClientSafeBrowsingReportRequest& from);
  void MergeFrom(const ClientSafeBrowsingReportRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientSafeBrowsingReportRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientSafeBrowsingReportRequest_HTTPHeader HTTPHeader;
  typedef ClientSafeBrowsingReportRequest_HTTPRequest HTTPRequest;
  typedef ClientSafeBrowsingReportRequest_HTTPResponse HTTPResponse;
  typedef ClientSafeBrowsingReportRequest_Resource Resource;
  typedef ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties SafeBrowsingClientProperties;

  typedef ClientSafeBrowsingReportRequest_ReportType ReportType;
  static const ReportType UNKNOWN =
    ClientSafeBrowsingReportRequest_ReportType_UNKNOWN;
  static const ReportType URL_PHISHING =
    ClientSafeBrowsingReportRequest_ReportType_URL_PHISHING;
  static const ReportType URL_MALWARE =
    ClientSafeBrowsingReportRequest_ReportType_URL_MALWARE;
  static const ReportType URL_UNWANTED =
    ClientSafeBrowsingReportRequest_ReportType_URL_UNWANTED;
  static const ReportType URL_CLIENT_SIDE_PHISHING =
    ClientSafeBrowsingReportRequest_ReportType_URL_CLIENT_SIDE_PHISHING;
  static const ReportType URL_CLIENT_SIDE_MALWARE =
    ClientSafeBrowsingReportRequest_ReportType_URL_CLIENT_SIDE_MALWARE;
  static const ReportType DANGEROUS_DOWNLOAD_RECOVERY =
    ClientSafeBrowsingReportRequest_ReportType_DANGEROUS_DOWNLOAD_RECOVERY;
  static const ReportType DANGEROUS_DOWNLOAD_WARNING =
    ClientSafeBrowsingReportRequest_ReportType_DANGEROUS_DOWNLOAD_WARNING;
  static const ReportType DANGEROUS_DOWNLOAD_BY_API =
    ClientSafeBrowsingReportRequest_ReportType_DANGEROUS_DOWNLOAD_BY_API;
  static const ReportType URL_PASSWORD_PROTECTION_PHISHING =
    ClientSafeBrowsingReportRequest_ReportType_URL_PASSWORD_PROTECTION_PHISHING;
  static const ReportType DANGEROUS_DOWNLOAD_OPENED =
    ClientSafeBrowsingReportRequest_ReportType_DANGEROUS_DOWNLOAD_OPENED;
  static const ReportType AD_SAMPLE =
    ClientSafeBrowsingReportRequest_ReportType_AD_SAMPLE;
  static inline bool ReportType_IsValid(int value) {
    return ClientSafeBrowsingReportRequest_ReportType_IsValid(value);
  }
  static const ReportType ReportType_MIN =
    ClientSafeBrowsingReportRequest_ReportType_ReportType_MIN;
  static const ReportType ReportType_MAX =
    ClientSafeBrowsingReportRequest_ReportType_ReportType_MAX;
  static const int ReportType_ARRAYSIZE =
    ClientSafeBrowsingReportRequest_ReportType_ReportType_ARRAYSIZE;

  typedef ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType SafeBrowsingUrlApiType;
  static const SafeBrowsingUrlApiType SAFE_BROWSING_URL_API_TYPE_UNSPECIFIED =
    ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_SAFE_BROWSING_URL_API_TYPE_UNSPECIFIED;
  static const SafeBrowsingUrlApiType PVER3_NATIVE =
    ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_PVER3_NATIVE;
  static const SafeBrowsingUrlApiType PVER4_NATIVE =
    ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_PVER4_NATIVE;
  static const SafeBrowsingUrlApiType ANDROID_SAFETYNET =
    ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_ANDROID_SAFETYNET;
  static const SafeBrowsingUrlApiType FLYWHEEL =
    ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_FLYWHEEL;
  static inline bool SafeBrowsingUrlApiType_IsValid(int value) {
    return ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_IsValid(value);
  }
  static const SafeBrowsingUrlApiType SafeBrowsingUrlApiType_MIN =
    ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_SafeBrowsingUrlApiType_MIN;
  static const SafeBrowsingUrlApiType SafeBrowsingUrlApiType_MAX =
    ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_SafeBrowsingUrlApiType_MAX;
  static const int SafeBrowsingUrlApiType_ARRAYSIZE =
    ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_SafeBrowsingUrlApiType_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // repeated .safe_browsing.ClientSafeBrowsingReportRequest.Resource resources = 4;
  int resources_size() const;
  void clear_resources();
  static const int kResourcesFieldNumber = 4;
  const ::safe_browsing::ClientSafeBrowsingReportRequest_Resource& resources(int index) const;
  ::safe_browsing::ClientSafeBrowsingReportRequest_Resource* mutable_resources(int index);
  ::safe_browsing::ClientSafeBrowsingReportRequest_Resource* add_resources();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_Resource >*
      mutable_resources();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_Resource >&
      resources() const;

  // repeated string client_asn = 6;
  int client_asn_size() const;
  void clear_client_asn();
  static const int kClientAsnFieldNumber = 6;
  const ::std::string& client_asn(int index) const;
  ::std::string* mutable_client_asn(int index);
  void set_client_asn(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_client_asn(int index, ::std::string&& value);
  #endif
  void set_client_asn(int index, const char* value);
  void set_client_asn(int index, const char* value, size_t size);
  ::std::string* add_client_asn();
  void add_client_asn(const ::std::string& value);
  #if LANG_CXX11
  void add_client_asn(::std::string&& value);
  #endif
  void add_client_asn(const char* value);
  void add_client_asn(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& client_asn() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_client_asn();

  // repeated .safe_browsing.HTMLElement dom = 16;
  int dom_size() const;
  void clear_dom();
  static const int kDomFieldNumber = 16;
  const ::safe_browsing::HTMLElement& dom(int index) const;
  ::safe_browsing::HTMLElement* mutable_dom(int index);
  ::safe_browsing::HTMLElement* add_dom();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::HTMLElement >*
      mutable_dom();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::HTMLElement >&
      dom() const;

  // optional string url = 1;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string page_url = 2;
  bool has_page_url() const;
  void clear_page_url();
  static const int kPageUrlFieldNumber = 2;
  const ::std::string& page_url() const;
  void set_page_url(const ::std::string& value);
  #if LANG_CXX11
  void set_page_url(::std::string&& value);
  #endif
  void set_page_url(const char* value);
  void set_page_url(const char* value, size_t size);
  ::std::string* mutable_page_url();
  ::std::string* release_page_url();
  void set_allocated_page_url(::std::string* page_url);

  // optional string referrer_url = 3;
  bool has_referrer_url() const;
  void clear_referrer_url();
  static const int kReferrerUrlFieldNumber = 3;
  const ::std::string& referrer_url() const;
  void set_referrer_url(const ::std::string& value);
  #if LANG_CXX11
  void set_referrer_url(::std::string&& value);
  #endif
  void set_referrer_url(const char* value);
  void set_referrer_url(const char* value, size_t size);
  ::std::string* mutable_referrer_url();
  ::std::string* release_referrer_url();
  void set_allocated_referrer_url(::std::string* referrer_url);

  // optional string client_country = 7;
  bool has_client_country() const;
  void clear_client_country();
  static const int kClientCountryFieldNumber = 7;
  const ::std::string& client_country() const;
  void set_client_country(const ::std::string& value);
  #if LANG_CXX11
  void set_client_country(::std::string&& value);
  #endif
  void set_client_country(const char* value);
  void set_client_country(const char* value, size_t size);
  ::std::string* mutable_client_country();
  ::std::string* release_client_country();
  void set_allocated_client_country(::std::string* client_country);

  // optional bytes token = 15;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 15;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional .safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties client_properties = 17;
  bool has_client_properties() const;
  void clear_client_properties();
  static const int kClientPropertiesFieldNumber = 17;
  const ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties& client_properties() const;
  ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* mutable_client_properties();
  ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* release_client_properties();
  void set_allocated_client_properties(::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* client_properties);

  // optional .safe_browsing.ClientSafeBrowsingReportRequest.ReportType type = 10;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 10;
  ::safe_browsing::ClientSafeBrowsingReportRequest_ReportType type() const;
  void set_type(::safe_browsing::ClientSafeBrowsingReportRequest_ReportType value);

  // optional bool complete = 5;
  bool has_complete() const;
  void clear_complete();
  static const int kCompleteFieldNumber = 5;
  bool complete() const;
  void set_complete(bool value);

  // optional bool did_proceed = 8;
  bool has_did_proceed() const;
  void clear_did_proceed();
  static const int kDidProceedFieldNumber = 8;
  bool did_proceed() const;
  void set_did_proceed(bool value);

  // optional bool repeat_visit = 9;
  bool has_repeat_visit() const;
  void clear_repeat_visit();
  static const int kRepeatVisitFieldNumber = 9;
  bool repeat_visit() const;
  void set_repeat_visit(bool value);

  // optional bool show_download_in_folder = 18;
  bool has_show_download_in_folder() const;
  void clear_show_download_in_folder();
  static const int kShowDownloadInFolderFieldNumber = 18;
  bool show_download_in_folder() const;
  void set_show_download_in_folder(bool value);

  // optional .safe_browsing.ClientDownloadResponse.Verdict download_verdict = 11;
  bool has_download_verdict() const;
  void clear_download_verdict();
  static const int kDownloadVerdictFieldNumber = 11;
  ::safe_browsing::ClientDownloadResponse_Verdict download_verdict() const;
  void set_download_verdict(::safe_browsing::ClientDownloadResponse_Verdict value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ClientSafeBrowsingReportRequest)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_download_verdict();
  void clear_has_download_verdict();
  void set_has_url();
  void clear_has_url();
  void set_has_page_url();
  void clear_has_page_url();
  void set_has_referrer_url();
  void clear_has_referrer_url();
  void set_has_complete();
  void clear_has_complete();
  void set_has_client_country();
  void clear_has_client_country();
  void set_has_did_proceed();
  void clear_has_did_proceed();
  void set_has_repeat_visit();
  void clear_has_repeat_visit();
  void set_has_token();
  void clear_has_token();
  void set_has_client_properties();
  void clear_has_client_properties();
  void set_has_show_download_in_folder();
  void clear_has_show_download_in_folder();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_Resource > resources_;
  ::google::protobuf::RepeatedPtrField< ::std::string> client_asn_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::HTMLElement > dom_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr page_url_;
  ::google::protobuf::internal::ArenaStringPtr referrer_url_;
  ::google::protobuf::internal::ArenaStringPtr client_country_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* client_properties_;
  int type_;
  bool complete_;
  bool did_proceed_;
  bool repeat_visit_;
  bool show_download_in_folder_;
  int download_verdict_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HTMLElement_Attribute : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.HTMLElement.Attribute) */ {
 public:
  HTMLElement_Attribute();
  virtual ~HTMLElement_Attribute();

  HTMLElement_Attribute(const HTMLElement_Attribute& from);

  inline HTMLElement_Attribute& operator=(const HTMLElement_Attribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HTMLElement_Attribute(HTMLElement_Attribute&& from) noexcept
    : HTMLElement_Attribute() {
    *this = ::std::move(from);
  }

  inline HTMLElement_Attribute& operator=(HTMLElement_Attribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HTMLElement_Attribute& default_instance();

  static inline const HTMLElement_Attribute* internal_default_instance() {
    return reinterpret_cast<const HTMLElement_Attribute*>(
               &_HTMLElement_Attribute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(HTMLElement_Attribute* other);
  friend void swap(HTMLElement_Attribute& a, HTMLElement_Attribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HTMLElement_Attribute* New() const PROTOBUF_FINAL { return New(NULL); }

  HTMLElement_Attribute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HTMLElement_Attribute& from);
  void MergeFrom(const HTMLElement_Attribute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HTMLElement_Attribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:safe_browsing.HTMLElement.Attribute)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HTMLElement : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.HTMLElement) */ {
 public:
  HTMLElement();
  virtual ~HTMLElement();

  HTMLElement(const HTMLElement& from);

  inline HTMLElement& operator=(const HTMLElement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HTMLElement(HTMLElement&& from) noexcept
    : HTMLElement() {
    *this = ::std::move(from);
  }

  inline HTMLElement& operator=(HTMLElement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const HTMLElement& default_instance();

  static inline const HTMLElement* internal_default_instance() {
    return reinterpret_cast<const HTMLElement*>(
               &_HTMLElement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(HTMLElement* other);
  friend void swap(HTMLElement& a, HTMLElement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HTMLElement* New() const PROTOBUF_FINAL { return New(NULL); }

  HTMLElement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const HTMLElement& from);
  void MergeFrom(const HTMLElement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HTMLElement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HTMLElement_Attribute Attribute;

  // accessors -------------------------------------------------------

  // repeated int32 child_ids = 3;
  int child_ids_size() const;
  void clear_child_ids();
  static const int kChildIdsFieldNumber = 3;
  ::google::protobuf::int32 child_ids(int index) const;
  void set_child_ids(int index, ::google::protobuf::int32 value);
  void add_child_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      child_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_child_ids();

  // repeated .safe_browsing.HTMLElement.Attribute attribute = 6;
  int attribute_size() const;
  void clear_attribute();
  static const int kAttributeFieldNumber = 6;
  const ::safe_browsing::HTMLElement_Attribute& attribute(int index) const;
  ::safe_browsing::HTMLElement_Attribute* mutable_attribute(int index);
  ::safe_browsing::HTMLElement_Attribute* add_attribute();
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::HTMLElement_Attribute >*
      mutable_attribute();
  const ::google::protobuf::RepeatedPtrField< ::safe_browsing::HTMLElement_Attribute >&
      attribute() const;

  // optional string tag = 2;
  bool has_tag() const;
  void clear_tag();
  static const int kTagFieldNumber = 2;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 resource_id = 5;
  bool has_resource_id() const;
  void clear_resource_id();
  static const int kResourceIdFieldNumber = 5;
  ::google::protobuf::int32 resource_id() const;
  void set_resource_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.HTMLElement)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_tag();
  void clear_has_tag();
  void set_has_resource_id();
  void clear_has_resource_id();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > child_ids_;
  ::google::protobuf::RepeatedPtrField< ::safe_browsing::HTMLElement_Attribute > attribute_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 resource_id_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImageData_Dimensions : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ImageData.Dimensions) */ {
 public:
  ImageData_Dimensions();
  virtual ~ImageData_Dimensions();

  ImageData_Dimensions(const ImageData_Dimensions& from);

  inline ImageData_Dimensions& operator=(const ImageData_Dimensions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageData_Dimensions(ImageData_Dimensions&& from) noexcept
    : ImageData_Dimensions() {
    *this = ::std::move(from);
  }

  inline ImageData_Dimensions& operator=(ImageData_Dimensions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ImageData_Dimensions& default_instance();

  static inline const ImageData_Dimensions* internal_default_instance() {
    return reinterpret_cast<const ImageData_Dimensions*>(
               &_ImageData_Dimensions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(ImageData_Dimensions* other);
  friend void swap(ImageData_Dimensions& a, ImageData_Dimensions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageData_Dimensions* New() const PROTOBUF_FINAL { return New(NULL); }

  ImageData_Dimensions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ImageData_Dimensions& from);
  void MergeFrom(const ImageData_Dimensions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageData_Dimensions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 width = 1;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 1;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // optional int32 height = 2;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 2;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:safe_browsing.ImageData.Dimensions)
 private:
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ImageData : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.ImageData) */ {
 public:
  ImageData();
  virtual ~ImageData();

  ImageData(const ImageData& from);

  inline ImageData& operator=(const ImageData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ImageData(ImageData&& from) noexcept
    : ImageData() {
    *this = ::std::move(from);
  }

  inline ImageData& operator=(ImageData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ImageData& default_instance();

  static inline const ImageData* internal_default_instance() {
    return reinterpret_cast<const ImageData*>(
               &_ImageData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(ImageData* other);
  friend void swap(ImageData& a, ImageData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ImageData* New() const PROTOBUF_FINAL { return New(NULL); }

  ImageData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const ImageData& from);
  void MergeFrom(const ImageData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ImageData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ImageData_Dimensions Dimensions;

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional string mime_type = 2;
  bool has_mime_type() const;
  void clear_mime_type();
  static const int kMimeTypeFieldNumber = 2;
  const ::std::string& mime_type() const;
  void set_mime_type(const ::std::string& value);
  #if LANG_CXX11
  void set_mime_type(::std::string&& value);
  #endif
  void set_mime_type(const char* value);
  void set_mime_type(const char* value, size_t size);
  ::std::string* mutable_mime_type();
  ::std::string* release_mime_type();
  void set_allocated_mime_type(::std::string* mime_type);

  // optional .safe_browsing.ImageData.Dimensions dimensions = 3;
  bool has_dimensions() const;
  void clear_dimensions();
  static const int kDimensionsFieldNumber = 3;
  const ::safe_browsing::ImageData_Dimensions& dimensions() const;
  ::safe_browsing::ImageData_Dimensions* mutable_dimensions();
  ::safe_browsing::ImageData_Dimensions* release_dimensions();
  void set_allocated_dimensions(::safe_browsing::ImageData_Dimensions* dimensions);

  // optional .safe_browsing.ImageData.Dimensions original_dimensions = 4;
  bool has_original_dimensions() const;
  void clear_original_dimensions();
  static const int kOriginalDimensionsFieldNumber = 4;
  const ::safe_browsing::ImageData_Dimensions& original_dimensions() const;
  ::safe_browsing::ImageData_Dimensions* mutable_original_dimensions();
  ::safe_browsing::ImageData_Dimensions* release_original_dimensions();
  void set_allocated_original_dimensions(::safe_browsing::ImageData_Dimensions* original_dimensions);

  // @@protoc_insertion_point(class_scope:safe_browsing.ImageData)
 private:
  void set_has_data();
  void clear_has_data();
  void set_has_mime_type();
  void clear_has_mime_type();
  void set_has_dimensions();
  void clear_has_dimensions();
  void set_has_original_dimensions();
  void clear_has_original_dimensions();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr mime_type_;
  ::safe_browsing::ImageData_Dimensions* dimensions_;
  ::safe_browsing::ImageData_Dimensions* original_dimensions_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NotificationImageReportRequest : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:safe_browsing.NotificationImageReportRequest) */ {
 public:
  NotificationImageReportRequest();
  virtual ~NotificationImageReportRequest();

  NotificationImageReportRequest(const NotificationImageReportRequest& from);

  inline NotificationImageReportRequest& operator=(const NotificationImageReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NotificationImageReportRequest(NotificationImageReportRequest&& from) noexcept
    : NotificationImageReportRequest() {
    *this = ::std::move(from);
  }

  inline NotificationImageReportRequest& operator=(NotificationImageReportRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const NotificationImageReportRequest& default_instance();

  static inline const NotificationImageReportRequest* internal_default_instance() {
    return reinterpret_cast<const NotificationImageReportRequest*>(
               &_NotificationImageReportRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(NotificationImageReportRequest* other);
  friend void swap(NotificationImageReportRequest& a, NotificationImageReportRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NotificationImageReportRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  NotificationImageReportRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    PROTOBUF_FINAL;
  void CopyFrom(const NotificationImageReportRequest& from);
  void MergeFrom(const NotificationImageReportRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  void DiscardUnknownFields();
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NotificationImageReportRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string notification_origin = 1;
  bool has_notification_origin() const;
  void clear_notification_origin();
  static const int kNotificationOriginFieldNumber = 1;
  const ::std::string& notification_origin() const;
  void set_notification_origin(const ::std::string& value);
  #if LANG_CXX11
  void set_notification_origin(::std::string&& value);
  #endif
  void set_notification_origin(const char* value);
  void set_notification_origin(const char* value, size_t size);
  ::std::string* mutable_notification_origin();
  ::std::string* release_notification_origin();
  void set_allocated_notification_origin(::std::string* notification_origin);

  // optional .safe_browsing.ImageData image = 2;
  bool has_image() const;
  void clear_image();
  static const int kImageFieldNumber = 2;
  const ::safe_browsing::ImageData& image() const;
  ::safe_browsing::ImageData* mutable_image();
  ::safe_browsing::ImageData* release_image();
  void set_allocated_image(::safe_browsing::ImageData* image);

  // @@protoc_insertion_point(class_scope:safe_browsing.NotificationImageReportRequest)
 private:
  void set_has_notification_origin();
  void clear_has_notification_origin();
  void set_has_image();
  void clear_has_image();

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr notification_origin_;
  ::safe_browsing::ImageData* image_;
  friend struct protobuf_csd_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ChromeUserPopulation

// optional .safe_browsing.ChromeUserPopulation.UserPopulation user_population = 1;
inline bool ChromeUserPopulation::has_user_population() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChromeUserPopulation::set_has_user_population() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChromeUserPopulation::clear_has_user_population() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChromeUserPopulation::clear_user_population() {
  user_population_ = 0;
  clear_has_user_population();
}
inline ::safe_browsing::ChromeUserPopulation_UserPopulation ChromeUserPopulation::user_population() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ChromeUserPopulation.user_population)
  return static_cast< ::safe_browsing::ChromeUserPopulation_UserPopulation >(user_population_);
}
inline void ChromeUserPopulation::set_user_population(::safe_browsing::ChromeUserPopulation_UserPopulation value) {
  assert(::safe_browsing::ChromeUserPopulation_UserPopulation_IsValid(value));
  set_has_user_population();
  user_population_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ChromeUserPopulation.user_population)
}

// optional bool is_history_sync_enabled = 2;
inline bool ChromeUserPopulation::has_is_history_sync_enabled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChromeUserPopulation::set_has_is_history_sync_enabled() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChromeUserPopulation::clear_has_is_history_sync_enabled() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChromeUserPopulation::clear_is_history_sync_enabled() {
  is_history_sync_enabled_ = false;
  clear_has_is_history_sync_enabled();
}
inline bool ChromeUserPopulation::is_history_sync_enabled() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ChromeUserPopulation.is_history_sync_enabled)
  return is_history_sync_enabled_;
}
inline void ChromeUserPopulation::set_is_history_sync_enabled(bool value) {
  set_has_is_history_sync_enabled();
  is_history_sync_enabled_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ChromeUserPopulation.is_history_sync_enabled)
}

// repeated string finch_active_groups = 4;
inline int ChromeUserPopulation::finch_active_groups_size() const {
  return finch_active_groups_.size();
}
inline void ChromeUserPopulation::clear_finch_active_groups() {
  finch_active_groups_.Clear();
}
inline const ::std::string& ChromeUserPopulation::finch_active_groups(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ChromeUserPopulation.finch_active_groups)
  return finch_active_groups_.Get(index);
}
inline ::std::string* ChromeUserPopulation::mutable_finch_active_groups(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ChromeUserPopulation.finch_active_groups)
  return finch_active_groups_.Mutable(index);
}
inline void ChromeUserPopulation::set_finch_active_groups(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ChromeUserPopulation.finch_active_groups)
  finch_active_groups_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ChromeUserPopulation::set_finch_active_groups(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ChromeUserPopulation.finch_active_groups)
  finch_active_groups_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ChromeUserPopulation::set_finch_active_groups(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  finch_active_groups_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:safe_browsing.ChromeUserPopulation.finch_active_groups)
}
inline void ChromeUserPopulation::set_finch_active_groups(int index, const char* value, size_t size) {
  finch_active_groups_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ChromeUserPopulation.finch_active_groups)
}
inline ::std::string* ChromeUserPopulation::add_finch_active_groups() {
  // @@protoc_insertion_point(field_add_mutable:safe_browsing.ChromeUserPopulation.finch_active_groups)
  return finch_active_groups_.Add();
}
inline void ChromeUserPopulation::add_finch_active_groups(const ::std::string& value) {
  finch_active_groups_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ChromeUserPopulation.finch_active_groups)
}
#if LANG_CXX11
inline void ChromeUserPopulation::add_finch_active_groups(::std::string&& value) {
  finch_active_groups_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:safe_browsing.ChromeUserPopulation.finch_active_groups)
}
#endif
inline void ChromeUserPopulation::add_finch_active_groups(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  finch_active_groups_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:safe_browsing.ChromeUserPopulation.finch_active_groups)
}
inline void ChromeUserPopulation::add_finch_active_groups(const char* value, size_t size) {
  finch_active_groups_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:safe_browsing.ChromeUserPopulation.finch_active_groups)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ChromeUserPopulation::finch_active_groups() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ChromeUserPopulation.finch_active_groups)
  return finch_active_groups_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ChromeUserPopulation::mutable_finch_active_groups() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ChromeUserPopulation.finch_active_groups)
  return &finch_active_groups_;
}

// -------------------------------------------------------------------

// ClientPhishingRequest_Feature

// required string name = 1;
inline bool ClientPhishingRequest_Feature::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientPhishingRequest_Feature::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientPhishingRequest_Feature::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientPhishingRequest_Feature::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ClientPhishingRequest_Feature::name() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.Feature.name)
  return name_.GetNoArena();
}
inline void ClientPhishingRequest_Feature::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingRequest.Feature.name)
}
#if LANG_CXX11
inline void ClientPhishingRequest_Feature::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientPhishingRequest.Feature.name)
}
#endif
inline void ClientPhishingRequest_Feature::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientPhishingRequest.Feature.name)
}
inline void ClientPhishingRequest_Feature::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientPhishingRequest.Feature.name)
}
inline ::std::string* ClientPhishingRequest_Feature::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientPhishingRequest.Feature.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientPhishingRequest_Feature::release_name() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientPhishingRequest.Feature.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientPhishingRequest_Feature::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientPhishingRequest.Feature.name)
}

// required double value = 2;
inline bool ClientPhishingRequest_Feature::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientPhishingRequest_Feature::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientPhishingRequest_Feature::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientPhishingRequest_Feature::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline double ClientPhishingRequest_Feature::value() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.Feature.value)
  return value_;
}
inline void ClientPhishingRequest_Feature::set_value(double value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingRequest.Feature.value)
}

// -------------------------------------------------------------------

// ClientPhishingRequest

// optional string url = 1;
inline bool ClientPhishingRequest::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientPhishingRequest::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientPhishingRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientPhishingRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& ClientPhishingRequest::url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.url)
  return url_.GetNoArena();
}
inline void ClientPhishingRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingRequest.url)
}
#if LANG_CXX11
inline void ClientPhishingRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientPhishingRequest.url)
}
#endif
inline void ClientPhishingRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientPhishingRequest.url)
}
inline void ClientPhishingRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientPhishingRequest.url)
}
inline ::std::string* ClientPhishingRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientPhishingRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientPhishingRequest::release_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientPhishingRequest.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientPhishingRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientPhishingRequest.url)
}

// optional bytes OBSOLETE_hash_prefix = 10;
inline bool ClientPhishingRequest::has_obsolete_hash_prefix() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientPhishingRequest::set_has_obsolete_hash_prefix() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientPhishingRequest::clear_has_obsolete_hash_prefix() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientPhishingRequest::clear_obsolete_hash_prefix() {
  obsolete_hash_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obsolete_hash_prefix();
}
inline const ::std::string& ClientPhishingRequest::obsolete_hash_prefix() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.OBSOLETE_hash_prefix)
  return obsolete_hash_prefix_.GetNoArena();
}
inline void ClientPhishingRequest::set_obsolete_hash_prefix(const ::std::string& value) {
  set_has_obsolete_hash_prefix();
  obsolete_hash_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingRequest.OBSOLETE_hash_prefix)
}
#if LANG_CXX11
inline void ClientPhishingRequest::set_obsolete_hash_prefix(::std::string&& value) {
  set_has_obsolete_hash_prefix();
  obsolete_hash_prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientPhishingRequest.OBSOLETE_hash_prefix)
}
#endif
inline void ClientPhishingRequest::set_obsolete_hash_prefix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_obsolete_hash_prefix();
  obsolete_hash_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientPhishingRequest.OBSOLETE_hash_prefix)
}
inline void ClientPhishingRequest::set_obsolete_hash_prefix(const void* value, size_t size) {
  set_has_obsolete_hash_prefix();
  obsolete_hash_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientPhishingRequest.OBSOLETE_hash_prefix)
}
inline ::std::string* ClientPhishingRequest::mutable_obsolete_hash_prefix() {
  set_has_obsolete_hash_prefix();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientPhishingRequest.OBSOLETE_hash_prefix)
  return obsolete_hash_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientPhishingRequest::release_obsolete_hash_prefix() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientPhishingRequest.OBSOLETE_hash_prefix)
  clear_has_obsolete_hash_prefix();
  return obsolete_hash_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientPhishingRequest::set_allocated_obsolete_hash_prefix(::std::string* obsolete_hash_prefix) {
  if (obsolete_hash_prefix != NULL) {
    set_has_obsolete_hash_prefix();
  } else {
    clear_has_obsolete_hash_prefix();
  }
  obsolete_hash_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obsolete_hash_prefix);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientPhishingRequest.OBSOLETE_hash_prefix)
}

// required float client_score = 2;
inline bool ClientPhishingRequest::has_client_score() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientPhishingRequest::set_has_client_score() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientPhishingRequest::clear_has_client_score() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientPhishingRequest::clear_client_score() {
  client_score_ = 0;
  clear_has_client_score();
}
inline float ClientPhishingRequest::client_score() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.client_score)
  return client_score_;
}
inline void ClientPhishingRequest::set_client_score(float value) {
  set_has_client_score();
  client_score_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingRequest.client_score)
}

// optional bool is_phishing = 4;
inline bool ClientPhishingRequest::has_is_phishing() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientPhishingRequest::set_has_is_phishing() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientPhishingRequest::clear_has_is_phishing() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientPhishingRequest::clear_is_phishing() {
  is_phishing_ = false;
  clear_has_is_phishing();
}
inline bool ClientPhishingRequest::is_phishing() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.is_phishing)
  return is_phishing_;
}
inline void ClientPhishingRequest::set_is_phishing(bool value) {
  set_has_is_phishing();
  is_phishing_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingRequest.is_phishing)
}

// repeated .safe_browsing.ClientPhishingRequest.Feature feature_map = 5;
inline int ClientPhishingRequest::feature_map_size() const {
  return feature_map_.size();
}
inline void ClientPhishingRequest::clear_feature_map() {
  feature_map_.Clear();
}
inline const ::safe_browsing::ClientPhishingRequest_Feature& ClientPhishingRequest::feature_map(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.feature_map)
  return feature_map_.Get(index);
}
inline ::safe_browsing::ClientPhishingRequest_Feature* ClientPhishingRequest::mutable_feature_map(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientPhishingRequest.feature_map)
  return feature_map_.Mutable(index);
}
inline ::safe_browsing::ClientPhishingRequest_Feature* ClientPhishingRequest::add_feature_map() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientPhishingRequest.feature_map)
  return feature_map_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientPhishingRequest_Feature >*
ClientPhishingRequest::mutable_feature_map() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientPhishingRequest.feature_map)
  return &feature_map_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientPhishingRequest_Feature >&
ClientPhishingRequest::feature_map() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientPhishingRequest.feature_map)
  return feature_map_;
}

// optional int32 model_version = 6;
inline bool ClientPhishingRequest::has_model_version() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientPhishingRequest::set_has_model_version() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientPhishingRequest::clear_has_model_version() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientPhishingRequest::clear_model_version() {
  model_version_ = 0;
  clear_has_model_version();
}
inline ::google::protobuf::int32 ClientPhishingRequest::model_version() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.model_version)
  return model_version_;
}
inline void ClientPhishingRequest::set_model_version(::google::protobuf::int32 value) {
  set_has_model_version();
  model_version_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingRequest.model_version)
}

// repeated .safe_browsing.ClientPhishingRequest.Feature non_model_feature_map = 8;
inline int ClientPhishingRequest::non_model_feature_map_size() const {
  return non_model_feature_map_.size();
}
inline void ClientPhishingRequest::clear_non_model_feature_map() {
  non_model_feature_map_.Clear();
}
inline const ::safe_browsing::ClientPhishingRequest_Feature& ClientPhishingRequest::non_model_feature_map(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.non_model_feature_map)
  return non_model_feature_map_.Get(index);
}
inline ::safe_browsing::ClientPhishingRequest_Feature* ClientPhishingRequest::mutable_non_model_feature_map(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientPhishingRequest.non_model_feature_map)
  return non_model_feature_map_.Mutable(index);
}
inline ::safe_browsing::ClientPhishingRequest_Feature* ClientPhishingRequest::add_non_model_feature_map() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientPhishingRequest.non_model_feature_map)
  return non_model_feature_map_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientPhishingRequest_Feature >*
ClientPhishingRequest::mutable_non_model_feature_map() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientPhishingRequest.non_model_feature_map)
  return &non_model_feature_map_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientPhishingRequest_Feature >&
ClientPhishingRequest::non_model_feature_map() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientPhishingRequest.non_model_feature_map)
  return non_model_feature_map_;
}

// optional string OBSOLETE_referrer_url = 9;
inline bool ClientPhishingRequest::has_obsolete_referrer_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientPhishingRequest::set_has_obsolete_referrer_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientPhishingRequest::clear_has_obsolete_referrer_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientPhishingRequest::clear_obsolete_referrer_url() {
  obsolete_referrer_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_obsolete_referrer_url();
}
inline const ::std::string& ClientPhishingRequest::obsolete_referrer_url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.OBSOLETE_referrer_url)
  return obsolete_referrer_url_.GetNoArena();
}
inline void ClientPhishingRequest::set_obsolete_referrer_url(const ::std::string& value) {
  set_has_obsolete_referrer_url();
  obsolete_referrer_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingRequest.OBSOLETE_referrer_url)
}
#if LANG_CXX11
inline void ClientPhishingRequest::set_obsolete_referrer_url(::std::string&& value) {
  set_has_obsolete_referrer_url();
  obsolete_referrer_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientPhishingRequest.OBSOLETE_referrer_url)
}
#endif
inline void ClientPhishingRequest::set_obsolete_referrer_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_obsolete_referrer_url();
  obsolete_referrer_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientPhishingRequest.OBSOLETE_referrer_url)
}
inline void ClientPhishingRequest::set_obsolete_referrer_url(const char* value, size_t size) {
  set_has_obsolete_referrer_url();
  obsolete_referrer_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientPhishingRequest.OBSOLETE_referrer_url)
}
inline ::std::string* ClientPhishingRequest::mutable_obsolete_referrer_url() {
  set_has_obsolete_referrer_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientPhishingRequest.OBSOLETE_referrer_url)
  return obsolete_referrer_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientPhishingRequest::release_obsolete_referrer_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientPhishingRequest.OBSOLETE_referrer_url)
  clear_has_obsolete_referrer_url();
  return obsolete_referrer_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientPhishingRequest::set_allocated_obsolete_referrer_url(::std::string* obsolete_referrer_url) {
  if (obsolete_referrer_url != NULL) {
    set_has_obsolete_referrer_url();
  } else {
    clear_has_obsolete_referrer_url();
  }
  obsolete_referrer_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), obsolete_referrer_url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientPhishingRequest.OBSOLETE_referrer_url)
}

// repeated uint32 shingle_hashes = 12 [packed = true];
inline int ClientPhishingRequest::shingle_hashes_size() const {
  return shingle_hashes_.size();
}
inline void ClientPhishingRequest::clear_shingle_hashes() {
  shingle_hashes_.Clear();
}
inline ::google::protobuf::uint32 ClientPhishingRequest::shingle_hashes(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.shingle_hashes)
  return shingle_hashes_.Get(index);
}
inline void ClientPhishingRequest::set_shingle_hashes(int index, ::google::protobuf::uint32 value) {
  shingle_hashes_.Set(index, value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingRequest.shingle_hashes)
}
inline void ClientPhishingRequest::add_shingle_hashes(::google::protobuf::uint32 value) {
  shingle_hashes_.Add(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ClientPhishingRequest.shingle_hashes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ClientPhishingRequest::shingle_hashes() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientPhishingRequest.shingle_hashes)
  return shingle_hashes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ClientPhishingRequest::mutable_shingle_hashes() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientPhishingRequest.shingle_hashes)
  return &shingle_hashes_;
}

// optional string model_filename = 13;
inline bool ClientPhishingRequest::has_model_filename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientPhishingRequest::set_has_model_filename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientPhishingRequest::clear_has_model_filename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientPhishingRequest::clear_model_filename() {
  model_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model_filename();
}
inline const ::std::string& ClientPhishingRequest::model_filename() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.model_filename)
  return model_filename_.GetNoArena();
}
inline void ClientPhishingRequest::set_model_filename(const ::std::string& value) {
  set_has_model_filename();
  model_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingRequest.model_filename)
}
#if LANG_CXX11
inline void ClientPhishingRequest::set_model_filename(::std::string&& value) {
  set_has_model_filename();
  model_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientPhishingRequest.model_filename)
}
#endif
inline void ClientPhishingRequest::set_model_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_model_filename();
  model_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientPhishingRequest.model_filename)
}
inline void ClientPhishingRequest::set_model_filename(const char* value, size_t size) {
  set_has_model_filename();
  model_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientPhishingRequest.model_filename)
}
inline ::std::string* ClientPhishingRequest::mutable_model_filename() {
  set_has_model_filename();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientPhishingRequest.model_filename)
  return model_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientPhishingRequest::release_model_filename() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientPhishingRequest.model_filename)
  clear_has_model_filename();
  return model_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientPhishingRequest::set_allocated_model_filename(::std::string* model_filename) {
  if (model_filename != NULL) {
    set_has_model_filename();
  } else {
    clear_has_model_filename();
  }
  model_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_filename);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientPhishingRequest.model_filename)
}

// optional .safe_browsing.ChromeUserPopulation population = 14;
inline bool ClientPhishingRequest::has_population() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientPhishingRequest::set_has_population() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientPhishingRequest::clear_has_population() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientPhishingRequest::clear_population() {
  if (population_ != NULL) population_->::safe_browsing::ChromeUserPopulation::Clear();
  clear_has_population();
}
inline const ::safe_browsing::ChromeUserPopulation& ClientPhishingRequest::population() const {
  const ::safe_browsing::ChromeUserPopulation* p = population_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingRequest.population)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ChromeUserPopulation*>(
      &::safe_browsing::_ChromeUserPopulation_default_instance_);
}
inline ::safe_browsing::ChromeUserPopulation* ClientPhishingRequest::mutable_population() {
  set_has_population();
  if (population_ == NULL) {
    population_ = new ::safe_browsing::ChromeUserPopulation;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientPhishingRequest.population)
  return population_;
}
inline ::safe_browsing::ChromeUserPopulation* ClientPhishingRequest::release_population() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientPhishingRequest.population)
  clear_has_population();
  ::safe_browsing::ChromeUserPopulation* temp = population_;
  population_ = NULL;
  return temp;
}
inline void ClientPhishingRequest::set_allocated_population(::safe_browsing::ChromeUserPopulation* population) {
  delete population_;
  population_ = population;
  if (population) {
    set_has_population();
  } else {
    clear_has_population();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientPhishingRequest.population)
}

// -------------------------------------------------------------------

// ClientPhishingResponse

// required bool phishy = 1;
inline bool ClientPhishingResponse::has_phishy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientPhishingResponse::set_has_phishy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientPhishingResponse::clear_has_phishy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientPhishingResponse::clear_phishy() {
  phishy_ = false;
  clear_has_phishy();
}
inline bool ClientPhishingResponse::phishy() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingResponse.phishy)
  return phishy_;
}
inline void ClientPhishingResponse::set_phishy(bool value) {
  set_has_phishy();
  phishy_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingResponse.phishy)
}

// repeated string OBSOLETE_whitelist_expression = 2;
inline int ClientPhishingResponse::obsolete_whitelist_expression_size() const {
  return obsolete_whitelist_expression_.size();
}
inline void ClientPhishingResponse::clear_obsolete_whitelist_expression() {
  obsolete_whitelist_expression_.Clear();
}
inline const ::std::string& ClientPhishingResponse::obsolete_whitelist_expression(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
  return obsolete_whitelist_expression_.Get(index);
}
inline ::std::string* ClientPhishingResponse::mutable_obsolete_whitelist_expression(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
  return obsolete_whitelist_expression_.Mutable(index);
}
inline void ClientPhishingResponse::set_obsolete_whitelist_expression(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
  obsolete_whitelist_expression_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClientPhishingResponse::set_obsolete_whitelist_expression(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
  obsolete_whitelist_expression_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClientPhishingResponse::set_obsolete_whitelist_expression(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  obsolete_whitelist_expression_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
}
inline void ClientPhishingResponse::set_obsolete_whitelist_expression(int index, const char* value, size_t size) {
  obsolete_whitelist_expression_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
}
inline ::std::string* ClientPhishingResponse::add_obsolete_whitelist_expression() {
  // @@protoc_insertion_point(field_add_mutable:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
  return obsolete_whitelist_expression_.Add();
}
inline void ClientPhishingResponse::add_obsolete_whitelist_expression(const ::std::string& value) {
  obsolete_whitelist_expression_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
}
#if LANG_CXX11
inline void ClientPhishingResponse::add_obsolete_whitelist_expression(::std::string&& value) {
  obsolete_whitelist_expression_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
}
#endif
inline void ClientPhishingResponse::add_obsolete_whitelist_expression(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  obsolete_whitelist_expression_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
}
inline void ClientPhishingResponse::add_obsolete_whitelist_expression(const char* value, size_t size) {
  obsolete_whitelist_expression_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientPhishingResponse::obsolete_whitelist_expression() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
  return obsolete_whitelist_expression_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientPhishingResponse::mutable_obsolete_whitelist_expression() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientPhishingResponse.OBSOLETE_whitelist_expression)
  return &obsolete_whitelist_expression_;
}

// -------------------------------------------------------------------

// ClientMalwareRequest_UrlInfo

// required string ip = 1;
inline bool ClientMalwareRequest_UrlInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientMalwareRequest_UrlInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientMalwareRequest_UrlInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientMalwareRequest_UrlInfo::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& ClientMalwareRequest_UrlInfo::ip() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientMalwareRequest.UrlInfo.ip)
  return ip_.GetNoArena();
}
inline void ClientMalwareRequest_UrlInfo::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientMalwareRequest.UrlInfo.ip)
}
#if LANG_CXX11
inline void ClientMalwareRequest_UrlInfo::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientMalwareRequest.UrlInfo.ip)
}
#endif
inline void ClientMalwareRequest_UrlInfo::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientMalwareRequest.UrlInfo.ip)
}
inline void ClientMalwareRequest_UrlInfo::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientMalwareRequest.UrlInfo.ip)
}
inline ::std::string* ClientMalwareRequest_UrlInfo::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientMalwareRequest.UrlInfo.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientMalwareRequest_UrlInfo::release_ip() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientMalwareRequest.UrlInfo.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientMalwareRequest_UrlInfo::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientMalwareRequest.UrlInfo.ip)
}

// required string url = 2;
inline bool ClientMalwareRequest_UrlInfo::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientMalwareRequest_UrlInfo::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientMalwareRequest_UrlInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientMalwareRequest_UrlInfo::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& ClientMalwareRequest_UrlInfo::url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientMalwareRequest.UrlInfo.url)
  return url_.GetNoArena();
}
inline void ClientMalwareRequest_UrlInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientMalwareRequest.UrlInfo.url)
}
#if LANG_CXX11
inline void ClientMalwareRequest_UrlInfo::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientMalwareRequest.UrlInfo.url)
}
#endif
inline void ClientMalwareRequest_UrlInfo::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientMalwareRequest.UrlInfo.url)
}
inline void ClientMalwareRequest_UrlInfo::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientMalwareRequest.UrlInfo.url)
}
inline ::std::string* ClientMalwareRequest_UrlInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientMalwareRequest.UrlInfo.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientMalwareRequest_UrlInfo::release_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientMalwareRequest.UrlInfo.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientMalwareRequest_UrlInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientMalwareRequest.UrlInfo.url)
}

// optional string method = 3;
inline bool ClientMalwareRequest_UrlInfo::has_method() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientMalwareRequest_UrlInfo::set_has_method() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientMalwareRequest_UrlInfo::clear_has_method() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientMalwareRequest_UrlInfo::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
inline const ::std::string& ClientMalwareRequest_UrlInfo::method() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientMalwareRequest.UrlInfo.method)
  return method_.GetNoArena();
}
inline void ClientMalwareRequest_UrlInfo::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientMalwareRequest.UrlInfo.method)
}
#if LANG_CXX11
inline void ClientMalwareRequest_UrlInfo::set_method(::std::string&& value) {
  set_has_method();
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientMalwareRequest.UrlInfo.method)
}
#endif
inline void ClientMalwareRequest_UrlInfo::set_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientMalwareRequest.UrlInfo.method)
}
inline void ClientMalwareRequest_UrlInfo::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientMalwareRequest.UrlInfo.method)
}
inline ::std::string* ClientMalwareRequest_UrlInfo::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientMalwareRequest.UrlInfo.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientMalwareRequest_UrlInfo::release_method() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientMalwareRequest.UrlInfo.method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientMalwareRequest_UrlInfo::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientMalwareRequest.UrlInfo.method)
}

// optional string referrer = 4;
inline bool ClientMalwareRequest_UrlInfo::has_referrer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientMalwareRequest_UrlInfo::set_has_referrer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientMalwareRequest_UrlInfo::clear_has_referrer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientMalwareRequest_UrlInfo::clear_referrer() {
  referrer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_referrer();
}
inline const ::std::string& ClientMalwareRequest_UrlInfo::referrer() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientMalwareRequest.UrlInfo.referrer)
  return referrer_.GetNoArena();
}
inline void ClientMalwareRequest_UrlInfo::set_referrer(const ::std::string& value) {
  set_has_referrer();
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientMalwareRequest.UrlInfo.referrer)
}
#if LANG_CXX11
inline void ClientMalwareRequest_UrlInfo::set_referrer(::std::string&& value) {
  set_has_referrer();
  referrer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientMalwareRequest.UrlInfo.referrer)
}
#endif
inline void ClientMalwareRequest_UrlInfo::set_referrer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_referrer();
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientMalwareRequest.UrlInfo.referrer)
}
inline void ClientMalwareRequest_UrlInfo::set_referrer(const char* value, size_t size) {
  set_has_referrer();
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientMalwareRequest.UrlInfo.referrer)
}
inline ::std::string* ClientMalwareRequest_UrlInfo::mutable_referrer() {
  set_has_referrer();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientMalwareRequest.UrlInfo.referrer)
  return referrer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientMalwareRequest_UrlInfo::release_referrer() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientMalwareRequest.UrlInfo.referrer)
  clear_has_referrer();
  return referrer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientMalwareRequest_UrlInfo::set_allocated_referrer(::std::string* referrer) {
  if (referrer != NULL) {
    set_has_referrer();
  } else {
    clear_has_referrer();
  }
  referrer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referrer);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientMalwareRequest.UrlInfo.referrer)
}

// optional int32 resource_type = 5;
inline bool ClientMalwareRequest_UrlInfo::has_resource_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientMalwareRequest_UrlInfo::set_has_resource_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientMalwareRequest_UrlInfo::clear_has_resource_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientMalwareRequest_UrlInfo::clear_resource_type() {
  resource_type_ = 0;
  clear_has_resource_type();
}
inline ::google::protobuf::int32 ClientMalwareRequest_UrlInfo::resource_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientMalwareRequest.UrlInfo.resource_type)
  return resource_type_;
}
inline void ClientMalwareRequest_UrlInfo::set_resource_type(::google::protobuf::int32 value) {
  set_has_resource_type();
  resource_type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientMalwareRequest.UrlInfo.resource_type)
}

// -------------------------------------------------------------------

// ClientMalwareRequest

// required string url = 1;
inline bool ClientMalwareRequest::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientMalwareRequest::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientMalwareRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientMalwareRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& ClientMalwareRequest::url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientMalwareRequest.url)
  return url_.GetNoArena();
}
inline void ClientMalwareRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientMalwareRequest.url)
}
#if LANG_CXX11
inline void ClientMalwareRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientMalwareRequest.url)
}
#endif
inline void ClientMalwareRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientMalwareRequest.url)
}
inline void ClientMalwareRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientMalwareRequest.url)
}
inline ::std::string* ClientMalwareRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientMalwareRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientMalwareRequest::release_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientMalwareRequest.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientMalwareRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientMalwareRequest.url)
}

// optional string referrer_url = 4;
inline bool ClientMalwareRequest::has_referrer_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientMalwareRequest::set_has_referrer_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientMalwareRequest::clear_has_referrer_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientMalwareRequest::clear_referrer_url() {
  referrer_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_referrer_url();
}
inline const ::std::string& ClientMalwareRequest::referrer_url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientMalwareRequest.referrer_url)
  return referrer_url_.GetNoArena();
}
inline void ClientMalwareRequest::set_referrer_url(const ::std::string& value) {
  set_has_referrer_url();
  referrer_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientMalwareRequest.referrer_url)
}
#if LANG_CXX11
inline void ClientMalwareRequest::set_referrer_url(::std::string&& value) {
  set_has_referrer_url();
  referrer_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientMalwareRequest.referrer_url)
}
#endif
inline void ClientMalwareRequest::set_referrer_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_referrer_url();
  referrer_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientMalwareRequest.referrer_url)
}
inline void ClientMalwareRequest::set_referrer_url(const char* value, size_t size) {
  set_has_referrer_url();
  referrer_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientMalwareRequest.referrer_url)
}
inline ::std::string* ClientMalwareRequest::mutable_referrer_url() {
  set_has_referrer_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientMalwareRequest.referrer_url)
  return referrer_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientMalwareRequest::release_referrer_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientMalwareRequest.referrer_url)
  clear_has_referrer_url();
  return referrer_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientMalwareRequest::set_allocated_referrer_url(::std::string* referrer_url) {
  if (referrer_url != NULL) {
    set_has_referrer_url();
  } else {
    clear_has_referrer_url();
  }
  referrer_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referrer_url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientMalwareRequest.referrer_url)
}

// repeated .safe_browsing.ClientMalwareRequest.UrlInfo bad_ip_url_info = 7;
inline int ClientMalwareRequest::bad_ip_url_info_size() const {
  return bad_ip_url_info_.size();
}
inline void ClientMalwareRequest::clear_bad_ip_url_info() {
  bad_ip_url_info_.Clear();
}
inline const ::safe_browsing::ClientMalwareRequest_UrlInfo& ClientMalwareRequest::bad_ip_url_info(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientMalwareRequest.bad_ip_url_info)
  return bad_ip_url_info_.Get(index);
}
inline ::safe_browsing::ClientMalwareRequest_UrlInfo* ClientMalwareRequest::mutable_bad_ip_url_info(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientMalwareRequest.bad_ip_url_info)
  return bad_ip_url_info_.Mutable(index);
}
inline ::safe_browsing::ClientMalwareRequest_UrlInfo* ClientMalwareRequest::add_bad_ip_url_info() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientMalwareRequest.bad_ip_url_info)
  return bad_ip_url_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientMalwareRequest_UrlInfo >*
ClientMalwareRequest::mutable_bad_ip_url_info() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientMalwareRequest.bad_ip_url_info)
  return &bad_ip_url_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientMalwareRequest_UrlInfo >&
ClientMalwareRequest::bad_ip_url_info() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientMalwareRequest.bad_ip_url_info)
  return bad_ip_url_info_;
}

// optional .safe_browsing.ChromeUserPopulation population = 9;
inline bool ClientMalwareRequest::has_population() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientMalwareRequest::set_has_population() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientMalwareRequest::clear_has_population() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientMalwareRequest::clear_population() {
  if (population_ != NULL) population_->::safe_browsing::ChromeUserPopulation::Clear();
  clear_has_population();
}
inline const ::safe_browsing::ChromeUserPopulation& ClientMalwareRequest::population() const {
  const ::safe_browsing::ChromeUserPopulation* p = population_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientMalwareRequest.population)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ChromeUserPopulation*>(
      &::safe_browsing::_ChromeUserPopulation_default_instance_);
}
inline ::safe_browsing::ChromeUserPopulation* ClientMalwareRequest::mutable_population() {
  set_has_population();
  if (population_ == NULL) {
    population_ = new ::safe_browsing::ChromeUserPopulation;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientMalwareRequest.population)
  return population_;
}
inline ::safe_browsing::ChromeUserPopulation* ClientMalwareRequest::release_population() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientMalwareRequest.population)
  clear_has_population();
  ::safe_browsing::ChromeUserPopulation* temp = population_;
  population_ = NULL;
  return temp;
}
inline void ClientMalwareRequest::set_allocated_population(::safe_browsing::ChromeUserPopulation* population) {
  delete population_;
  population_ = population;
  if (population) {
    set_has_population();
  } else {
    clear_has_population();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientMalwareRequest.population)
}

// -------------------------------------------------------------------

// LoginReputationClientRequest_Frame_Form

// optional string action_url = 1;
inline bool LoginReputationClientRequest_Frame_Form::has_action_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReputationClientRequest_Frame_Form::set_has_action_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginReputationClientRequest_Frame_Form::clear_has_action_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginReputationClientRequest_Frame_Form::clear_action_url() {
  action_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_action_url();
}
inline const ::std::string& LoginReputationClientRequest_Frame_Form::action_url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.Frame.Form.action_url)
  return action_url_.GetNoArena();
}
inline void LoginReputationClientRequest_Frame_Form::set_action_url(const ::std::string& value) {
  set_has_action_url();
  action_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.Frame.Form.action_url)
}
#if LANG_CXX11
inline void LoginReputationClientRequest_Frame_Form::set_action_url(::std::string&& value) {
  set_has_action_url();
  action_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.LoginReputationClientRequest.Frame.Form.action_url)
}
#endif
inline void LoginReputationClientRequest_Frame_Form::set_action_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_action_url();
  action_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.LoginReputationClientRequest.Frame.Form.action_url)
}
inline void LoginReputationClientRequest_Frame_Form::set_action_url(const char* value, size_t size) {
  set_has_action_url();
  action_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.LoginReputationClientRequest.Frame.Form.action_url)
}
inline ::std::string* LoginReputationClientRequest_Frame_Form::mutable_action_url() {
  set_has_action_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.LoginReputationClientRequest.Frame.Form.action_url)
  return action_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReputationClientRequest_Frame_Form::release_action_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.LoginReputationClientRequest.Frame.Form.action_url)
  clear_has_action_url();
  return action_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReputationClientRequest_Frame_Form::set_allocated_action_url(::std::string* action_url) {
  if (action_url != NULL) {
    set_has_action_url();
  } else {
    clear_has_action_url();
  }
  action_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action_url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.LoginReputationClientRequest.Frame.Form.action_url)
}

// optional bool has_password_field = 2;
inline bool LoginReputationClientRequest_Frame_Form::has_has_password_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReputationClientRequest_Frame_Form::set_has_has_password_field() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginReputationClientRequest_Frame_Form::clear_has_has_password_field() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginReputationClientRequest_Frame_Form::clear_has_password_field() {
  has_password_field_ = false;
  clear_has_has_password_field();
}
inline bool LoginReputationClientRequest_Frame_Form::has_password_field() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.Frame.Form.has_password_field)
  return has_password_field_;
}
inline void LoginReputationClientRequest_Frame_Form::set_has_password_field(bool value) {
  set_has_has_password_field();
  has_password_field_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.Frame.Form.has_password_field)
}

// -------------------------------------------------------------------

// LoginReputationClientRequest_Frame

// optional int32 frame_index = 1;
inline bool LoginReputationClientRequest_Frame::has_frame_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReputationClientRequest_Frame::set_has_frame_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginReputationClientRequest_Frame::clear_has_frame_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginReputationClientRequest_Frame::clear_frame_index() {
  frame_index_ = 0;
  clear_has_frame_index();
}
inline ::google::protobuf::int32 LoginReputationClientRequest_Frame::frame_index() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.Frame.frame_index)
  return frame_index_;
}
inline void LoginReputationClientRequest_Frame::set_frame_index(::google::protobuf::int32 value) {
  set_has_frame_index();
  frame_index_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.Frame.frame_index)
}

// optional int32 parent_frame_index = 2;
inline bool LoginReputationClientRequest_Frame::has_parent_frame_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginReputationClientRequest_Frame::set_has_parent_frame_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginReputationClientRequest_Frame::clear_has_parent_frame_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginReputationClientRequest_Frame::clear_parent_frame_index() {
  parent_frame_index_ = 0;
  clear_has_parent_frame_index();
}
inline ::google::protobuf::int32 LoginReputationClientRequest_Frame::parent_frame_index() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.Frame.parent_frame_index)
  return parent_frame_index_;
}
inline void LoginReputationClientRequest_Frame::set_parent_frame_index(::google::protobuf::int32 value) {
  set_has_parent_frame_index();
  parent_frame_index_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.Frame.parent_frame_index)
}

// optional string url = 3;
inline bool LoginReputationClientRequest_Frame::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReputationClientRequest_Frame::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginReputationClientRequest_Frame::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginReputationClientRequest_Frame::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& LoginReputationClientRequest_Frame::url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.Frame.url)
  return url_.GetNoArena();
}
inline void LoginReputationClientRequest_Frame::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.Frame.url)
}
#if LANG_CXX11
inline void LoginReputationClientRequest_Frame::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.LoginReputationClientRequest.Frame.url)
}
#endif
inline void LoginReputationClientRequest_Frame::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.LoginReputationClientRequest.Frame.url)
}
inline void LoginReputationClientRequest_Frame::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.LoginReputationClientRequest.Frame.url)
}
inline ::std::string* LoginReputationClientRequest_Frame::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.LoginReputationClientRequest.Frame.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReputationClientRequest_Frame::release_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.LoginReputationClientRequest.Frame.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReputationClientRequest_Frame::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.LoginReputationClientRequest.Frame.url)
}

// optional bool has_password_field = 4;
inline bool LoginReputationClientRequest_Frame::has_has_password_field() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginReputationClientRequest_Frame::set_has_has_password_field() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginReputationClientRequest_Frame::clear_has_has_password_field() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginReputationClientRequest_Frame::clear_has_password_field() {
  has_password_field_ = false;
  clear_has_has_password_field();
}
inline bool LoginReputationClientRequest_Frame::has_password_field() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.Frame.has_password_field)
  return has_password_field_;
}
inline void LoginReputationClientRequest_Frame::set_has_password_field(bool value) {
  set_has_has_password_field();
  has_password_field_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.Frame.has_password_field)
}

// repeated .safe_browsing.ReferrerChainEntry referrer_chain = 5;
inline int LoginReputationClientRequest_Frame::referrer_chain_size() const {
  return referrer_chain_.size();
}
inline void LoginReputationClientRequest_Frame::clear_referrer_chain() {
  referrer_chain_.Clear();
}
inline const ::safe_browsing::ReferrerChainEntry& LoginReputationClientRequest_Frame::referrer_chain(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.Frame.referrer_chain)
  return referrer_chain_.Get(index);
}
inline ::safe_browsing::ReferrerChainEntry* LoginReputationClientRequest_Frame::mutable_referrer_chain(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.LoginReputationClientRequest.Frame.referrer_chain)
  return referrer_chain_.Mutable(index);
}
inline ::safe_browsing::ReferrerChainEntry* LoginReputationClientRequest_Frame::add_referrer_chain() {
  // @@protoc_insertion_point(field_add:safe_browsing.LoginReputationClientRequest.Frame.referrer_chain)
  return referrer_chain_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry >*
LoginReputationClientRequest_Frame::mutable_referrer_chain() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.LoginReputationClientRequest.Frame.referrer_chain)
  return &referrer_chain_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry >&
LoginReputationClientRequest_Frame::referrer_chain() const {
  // @@protoc_insertion_point(field_list:safe_browsing.LoginReputationClientRequest.Frame.referrer_chain)
  return referrer_chain_;
}

// repeated .safe_browsing.LoginReputationClientRequest.Frame.Form forms = 6;
inline int LoginReputationClientRequest_Frame::forms_size() const {
  return forms_.size();
}
inline void LoginReputationClientRequest_Frame::clear_forms() {
  forms_.Clear();
}
inline const ::safe_browsing::LoginReputationClientRequest_Frame_Form& LoginReputationClientRequest_Frame::forms(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.Frame.forms)
  return forms_.Get(index);
}
inline ::safe_browsing::LoginReputationClientRequest_Frame_Form* LoginReputationClientRequest_Frame::mutable_forms(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.LoginReputationClientRequest.Frame.forms)
  return forms_.Mutable(index);
}
inline ::safe_browsing::LoginReputationClientRequest_Frame_Form* LoginReputationClientRequest_Frame::add_forms() {
  // @@protoc_insertion_point(field_add:safe_browsing.LoginReputationClientRequest.Frame.forms)
  return forms_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::LoginReputationClientRequest_Frame_Form >*
LoginReputationClientRequest_Frame::mutable_forms() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.LoginReputationClientRequest.Frame.forms)
  return &forms_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::LoginReputationClientRequest_Frame_Form >&
LoginReputationClientRequest_Frame::forms() const {
  // @@protoc_insertion_point(field_list:safe_browsing.LoginReputationClientRequest.Frame.forms)
  return forms_;
}

// -------------------------------------------------------------------

// LoginReputationClientRequest_PasswordReuseEvent

// repeated string domains_matching_password = 1;
inline int LoginReputationClientRequest_PasswordReuseEvent::domains_matching_password_size() const {
  return domains_matching_password_.size();
}
inline void LoginReputationClientRequest_PasswordReuseEvent::clear_domains_matching_password() {
  domains_matching_password_.Clear();
}
inline const ::std::string& LoginReputationClientRequest_PasswordReuseEvent::domains_matching_password(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
  return domains_matching_password_.Get(index);
}
inline ::std::string* LoginReputationClientRequest_PasswordReuseEvent::mutable_domains_matching_password(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
  return domains_matching_password_.Mutable(index);
}
inline void LoginReputationClientRequest_PasswordReuseEvent::set_domains_matching_password(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
  domains_matching_password_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void LoginReputationClientRequest_PasswordReuseEvent::set_domains_matching_password(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
  domains_matching_password_.Mutable(index)->assign(std::move(value));
}
#endif
inline void LoginReputationClientRequest_PasswordReuseEvent::set_domains_matching_password(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  domains_matching_password_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
}
inline void LoginReputationClientRequest_PasswordReuseEvent::set_domains_matching_password(int index, const char* value, size_t size) {
  domains_matching_password_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
}
inline ::std::string* LoginReputationClientRequest_PasswordReuseEvent::add_domains_matching_password() {
  // @@protoc_insertion_point(field_add_mutable:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
  return domains_matching_password_.Add();
}
inline void LoginReputationClientRequest_PasswordReuseEvent::add_domains_matching_password(const ::std::string& value) {
  domains_matching_password_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
}
#if LANG_CXX11
inline void LoginReputationClientRequest_PasswordReuseEvent::add_domains_matching_password(::std::string&& value) {
  domains_matching_password_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
}
#endif
inline void LoginReputationClientRequest_PasswordReuseEvent::add_domains_matching_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  domains_matching_password_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
}
inline void LoginReputationClientRequest_PasswordReuseEvent::add_domains_matching_password(const char* value, size_t size) {
  domains_matching_password_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
LoginReputationClientRequest_PasswordReuseEvent::domains_matching_password() const {
  // @@protoc_insertion_point(field_list:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
  return domains_matching_password_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
LoginReputationClientRequest_PasswordReuseEvent::mutable_domains_matching_password() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.domains_matching_password)
  return &domains_matching_password_;
}

// optional int32 frame_id = 2;
inline bool LoginReputationClientRequest_PasswordReuseEvent::has_frame_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReputationClientRequest_PasswordReuseEvent::set_has_frame_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginReputationClientRequest_PasswordReuseEvent::clear_has_frame_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginReputationClientRequest_PasswordReuseEvent::clear_frame_id() {
  frame_id_ = 0;
  clear_has_frame_id();
}
inline ::google::protobuf::int32 LoginReputationClientRequest_PasswordReuseEvent::frame_id() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.frame_id)
  return frame_id_;
}
inline void LoginReputationClientRequest_PasswordReuseEvent::set_frame_id(::google::protobuf::int32 value) {
  set_has_frame_id();
  frame_id_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.frame_id)
}

// optional bool is_chrome_signin_password = 3;
inline bool LoginReputationClientRequest_PasswordReuseEvent::has_is_chrome_signin_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReputationClientRequest_PasswordReuseEvent::set_has_is_chrome_signin_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginReputationClientRequest_PasswordReuseEvent::clear_has_is_chrome_signin_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginReputationClientRequest_PasswordReuseEvent::clear_is_chrome_signin_password() {
  is_chrome_signin_password_ = false;
  clear_has_is_chrome_signin_password();
}
inline bool LoginReputationClientRequest_PasswordReuseEvent::is_chrome_signin_password() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.is_chrome_signin_password)
  return is_chrome_signin_password_;
}
inline void LoginReputationClientRequest_PasswordReuseEvent::set_is_chrome_signin_password(bool value) {
  set_has_is_chrome_signin_password();
  is_chrome_signin_password_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.is_chrome_signin_password)
}

// optional .safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.SyncAccountType sync_account_type = 4;
inline bool LoginReputationClientRequest_PasswordReuseEvent::has_sync_account_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginReputationClientRequest_PasswordReuseEvent::set_has_sync_account_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginReputationClientRequest_PasswordReuseEvent::clear_has_sync_account_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginReputationClientRequest_PasswordReuseEvent::clear_sync_account_type() {
  sync_account_type_ = 0;
  clear_has_sync_account_type();
}
inline ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType LoginReputationClientRequest_PasswordReuseEvent::sync_account_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.sync_account_type)
  return static_cast< ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType >(sync_account_type_);
}
inline void LoginReputationClientRequest_PasswordReuseEvent::set_sync_account_type(::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType value) {
  assert(::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType_IsValid(value));
  set_has_sync_account_type();
  sync_account_type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.PasswordReuseEvent.sync_account_type)
}

// -------------------------------------------------------------------

// LoginReputationClientRequest

// optional string page_url = 1;
inline bool LoginReputationClientRequest::has_page_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReputationClientRequest::set_has_page_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginReputationClientRequest::clear_has_page_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginReputationClientRequest::clear_page_url() {
  page_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_page_url();
}
inline const ::std::string& LoginReputationClientRequest::page_url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.page_url)
  return page_url_.GetNoArena();
}
inline void LoginReputationClientRequest::set_page_url(const ::std::string& value) {
  set_has_page_url();
  page_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.page_url)
}
#if LANG_CXX11
inline void LoginReputationClientRequest::set_page_url(::std::string&& value) {
  set_has_page_url();
  page_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.LoginReputationClientRequest.page_url)
}
#endif
inline void LoginReputationClientRequest::set_page_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_page_url();
  page_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.LoginReputationClientRequest.page_url)
}
inline void LoginReputationClientRequest::set_page_url(const char* value, size_t size) {
  set_has_page_url();
  page_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.LoginReputationClientRequest.page_url)
}
inline ::std::string* LoginReputationClientRequest::mutable_page_url() {
  set_has_page_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.LoginReputationClientRequest.page_url)
  return page_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReputationClientRequest::release_page_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.LoginReputationClientRequest.page_url)
  clear_has_page_url();
  return page_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReputationClientRequest::set_allocated_page_url(::std::string* page_url) {
  if (page_url != NULL) {
    set_has_page_url();
  } else {
    clear_has_page_url();
  }
  page_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.LoginReputationClientRequest.page_url)
}

// optional .safe_browsing.LoginReputationClientRequest.TriggerType trigger_type = 2;
inline bool LoginReputationClientRequest::has_trigger_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginReputationClientRequest::set_has_trigger_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginReputationClientRequest::clear_has_trigger_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginReputationClientRequest::clear_trigger_type() {
  trigger_type_ = 0;
  clear_has_trigger_type();
}
inline ::safe_browsing::LoginReputationClientRequest_TriggerType LoginReputationClientRequest::trigger_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.trigger_type)
  return static_cast< ::safe_browsing::LoginReputationClientRequest_TriggerType >(trigger_type_);
}
inline void LoginReputationClientRequest::set_trigger_type(::safe_browsing::LoginReputationClientRequest_TriggerType value) {
  assert(::safe_browsing::LoginReputationClientRequest_TriggerType_IsValid(value));
  set_has_trigger_type();
  trigger_type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.trigger_type)
}

// repeated .safe_browsing.LoginReputationClientRequest.Frame frames = 3;
inline int LoginReputationClientRequest::frames_size() const {
  return frames_.size();
}
inline void LoginReputationClientRequest::clear_frames() {
  frames_.Clear();
}
inline const ::safe_browsing::LoginReputationClientRequest_Frame& LoginReputationClientRequest::frames(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.frames)
  return frames_.Get(index);
}
inline ::safe_browsing::LoginReputationClientRequest_Frame* LoginReputationClientRequest::mutable_frames(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.LoginReputationClientRequest.frames)
  return frames_.Mutable(index);
}
inline ::safe_browsing::LoginReputationClientRequest_Frame* LoginReputationClientRequest::add_frames() {
  // @@protoc_insertion_point(field_add:safe_browsing.LoginReputationClientRequest.frames)
  return frames_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::LoginReputationClientRequest_Frame >*
LoginReputationClientRequest::mutable_frames() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.LoginReputationClientRequest.frames)
  return &frames_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::LoginReputationClientRequest_Frame >&
LoginReputationClientRequest::frames() const {
  // @@protoc_insertion_point(field_list:safe_browsing.LoginReputationClientRequest.frames)
  return frames_;
}

// optional .safe_browsing.LoginReputationClientRequest.PasswordReuseEvent password_reuse_event = 4;
inline bool LoginReputationClientRequest::has_password_reuse_event() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReputationClientRequest::set_has_password_reuse_event() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginReputationClientRequest::clear_has_password_reuse_event() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginReputationClientRequest::clear_password_reuse_event() {
  if (password_reuse_event_ != NULL) password_reuse_event_->::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent::Clear();
  clear_has_password_reuse_event();
}
inline const ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent& LoginReputationClientRequest::password_reuse_event() const {
  const ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent* p = password_reuse_event_;
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.password_reuse_event)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent*>(
      &::safe_browsing::_LoginReputationClientRequest_PasswordReuseEvent_default_instance_);
}
inline ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent* LoginReputationClientRequest::mutable_password_reuse_event() {
  set_has_password_reuse_event();
  if (password_reuse_event_ == NULL) {
    password_reuse_event_ = new ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.LoginReputationClientRequest.password_reuse_event)
  return password_reuse_event_;
}
inline ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent* LoginReputationClientRequest::release_password_reuse_event() {
  // @@protoc_insertion_point(field_release:safe_browsing.LoginReputationClientRequest.password_reuse_event)
  clear_has_password_reuse_event();
  ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent* temp = password_reuse_event_;
  password_reuse_event_ = NULL;
  return temp;
}
inline void LoginReputationClientRequest::set_allocated_password_reuse_event(::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent* password_reuse_event) {
  delete password_reuse_event_;
  password_reuse_event_ = password_reuse_event;
  if (password_reuse_event) {
    set_has_password_reuse_event();
  } else {
    clear_has_password_reuse_event();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.LoginReputationClientRequest.password_reuse_event)
}

// optional int32 stored_verdict_cnt = 5;
inline bool LoginReputationClientRequest::has_stored_verdict_cnt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginReputationClientRequest::set_has_stored_verdict_cnt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginReputationClientRequest::clear_has_stored_verdict_cnt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginReputationClientRequest::clear_stored_verdict_cnt() {
  stored_verdict_cnt_ = 0;
  clear_has_stored_verdict_cnt();
}
inline ::google::protobuf::int32 LoginReputationClientRequest::stored_verdict_cnt() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.stored_verdict_cnt)
  return stored_verdict_cnt_;
}
inline void LoginReputationClientRequest::set_stored_verdict_cnt(::google::protobuf::int32 value) {
  set_has_stored_verdict_cnt();
  stored_verdict_cnt_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.stored_verdict_cnt)
}

// optional .safe_browsing.ChromeUserPopulation population = 6;
inline bool LoginReputationClientRequest::has_population() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginReputationClientRequest::set_has_population() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginReputationClientRequest::clear_has_population() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginReputationClientRequest::clear_population() {
  if (population_ != NULL) population_->::safe_browsing::ChromeUserPopulation::Clear();
  clear_has_population();
}
inline const ::safe_browsing::ChromeUserPopulation& LoginReputationClientRequest::population() const {
  const ::safe_browsing::ChromeUserPopulation* p = population_;
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.population)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ChromeUserPopulation*>(
      &::safe_browsing::_ChromeUserPopulation_default_instance_);
}
inline ::safe_browsing::ChromeUserPopulation* LoginReputationClientRequest::mutable_population() {
  set_has_population();
  if (population_ == NULL) {
    population_ = new ::safe_browsing::ChromeUserPopulation;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.LoginReputationClientRequest.population)
  return population_;
}
inline ::safe_browsing::ChromeUserPopulation* LoginReputationClientRequest::release_population() {
  // @@protoc_insertion_point(field_release:safe_browsing.LoginReputationClientRequest.population)
  clear_has_population();
  ::safe_browsing::ChromeUserPopulation* temp = population_;
  population_ = NULL;
  return temp;
}
inline void LoginReputationClientRequest::set_allocated_population(::safe_browsing::ChromeUserPopulation* population) {
  delete population_;
  population_ = population;
  if (population) {
    set_has_population();
  } else {
    clear_has_population();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.LoginReputationClientRequest.population)
}

// optional bool clicked_through_interstitial = 7;
inline bool LoginReputationClientRequest::has_clicked_through_interstitial() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginReputationClientRequest::set_has_clicked_through_interstitial() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginReputationClientRequest::clear_has_clicked_through_interstitial() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginReputationClientRequest::clear_clicked_through_interstitial() {
  clicked_through_interstitial_ = false;
  clear_has_clicked_through_interstitial();
}
inline bool LoginReputationClientRequest::clicked_through_interstitial() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientRequest.clicked_through_interstitial)
  return clicked_through_interstitial_;
}
inline void LoginReputationClientRequest::set_clicked_through_interstitial(bool value) {
  set_has_clicked_through_interstitial();
  clicked_through_interstitial_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientRequest.clicked_through_interstitial)
}

// -------------------------------------------------------------------

// LoginReputationClientResponse

// optional .safe_browsing.LoginReputationClientResponse.VerdictType verdict_type = 1;
inline bool LoginReputationClientResponse::has_verdict_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginReputationClientResponse::set_has_verdict_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginReputationClientResponse::clear_has_verdict_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginReputationClientResponse::clear_verdict_type() {
  verdict_type_ = 0;
  clear_has_verdict_type();
}
inline ::safe_browsing::LoginReputationClientResponse_VerdictType LoginReputationClientResponse::verdict_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientResponse.verdict_type)
  return static_cast< ::safe_browsing::LoginReputationClientResponse_VerdictType >(verdict_type_);
}
inline void LoginReputationClientResponse::set_verdict_type(::safe_browsing::LoginReputationClientResponse_VerdictType value) {
  assert(::safe_browsing::LoginReputationClientResponse_VerdictType_IsValid(value));
  set_has_verdict_type();
  verdict_type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientResponse.verdict_type)
}

// optional int64 cache_duration_sec = 2;
inline bool LoginReputationClientResponse::has_cache_duration_sec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginReputationClientResponse::set_has_cache_duration_sec() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginReputationClientResponse::clear_has_cache_duration_sec() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginReputationClientResponse::clear_cache_duration_sec() {
  cache_duration_sec_ = GOOGLE_LONGLONG(0);
  clear_has_cache_duration_sec();
}
inline ::google::protobuf::int64 LoginReputationClientResponse::cache_duration_sec() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientResponse.cache_duration_sec)
  return cache_duration_sec_;
}
inline void LoginReputationClientResponse::set_cache_duration_sec(::google::protobuf::int64 value) {
  set_has_cache_duration_sec();
  cache_duration_sec_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientResponse.cache_duration_sec)
}

// optional string cache_expression = 3;
inline bool LoginReputationClientResponse::has_cache_expression() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReputationClientResponse::set_has_cache_expression() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginReputationClientResponse::clear_has_cache_expression() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginReputationClientResponse::clear_cache_expression() {
  cache_expression_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cache_expression();
}
inline const ::std::string& LoginReputationClientResponse::cache_expression() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientResponse.cache_expression)
  return cache_expression_.GetNoArena();
}
inline void LoginReputationClientResponse::set_cache_expression(const ::std::string& value) {
  set_has_cache_expression();
  cache_expression_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientResponse.cache_expression)
}
#if LANG_CXX11
inline void LoginReputationClientResponse::set_cache_expression(::std::string&& value) {
  set_has_cache_expression();
  cache_expression_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.LoginReputationClientResponse.cache_expression)
}
#endif
inline void LoginReputationClientResponse::set_cache_expression(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cache_expression();
  cache_expression_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.LoginReputationClientResponse.cache_expression)
}
inline void LoginReputationClientResponse::set_cache_expression(const char* value, size_t size) {
  set_has_cache_expression();
  cache_expression_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.LoginReputationClientResponse.cache_expression)
}
inline ::std::string* LoginReputationClientResponse::mutable_cache_expression() {
  set_has_cache_expression();
  // @@protoc_insertion_point(field_mutable:safe_browsing.LoginReputationClientResponse.cache_expression)
  return cache_expression_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReputationClientResponse::release_cache_expression() {
  // @@protoc_insertion_point(field_release:safe_browsing.LoginReputationClientResponse.cache_expression)
  clear_has_cache_expression();
  return cache_expression_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReputationClientResponse::set_allocated_cache_expression(::std::string* cache_expression) {
  if (cache_expression != NULL) {
    set_has_cache_expression();
  } else {
    clear_has_cache_expression();
  }
  cache_expression_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cache_expression);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.LoginReputationClientResponse.cache_expression)
}

// optional bool DEPRECATED_cache_expression_exact_match = 4 [deprecated = true];
inline bool LoginReputationClientResponse::has_deprecated_cache_expression_exact_match() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginReputationClientResponse::set_has_deprecated_cache_expression_exact_match() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginReputationClientResponse::clear_has_deprecated_cache_expression_exact_match() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginReputationClientResponse::clear_deprecated_cache_expression_exact_match() {
  deprecated_cache_expression_exact_match_ = false;
  clear_has_deprecated_cache_expression_exact_match();
}
inline bool LoginReputationClientResponse::deprecated_cache_expression_exact_match() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientResponse.DEPRECATED_cache_expression_exact_match)
  return deprecated_cache_expression_exact_match_;
}
inline void LoginReputationClientResponse::set_deprecated_cache_expression_exact_match(bool value) {
  set_has_deprecated_cache_expression_exact_match();
  deprecated_cache_expression_exact_match_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientResponse.DEPRECATED_cache_expression_exact_match)
}

// optional bytes verdict_token = 5;
inline bool LoginReputationClientResponse::has_verdict_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReputationClientResponse::set_has_verdict_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginReputationClientResponse::clear_has_verdict_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginReputationClientResponse::clear_verdict_token() {
  verdict_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verdict_token();
}
inline const ::std::string& LoginReputationClientResponse::verdict_token() const {
  // @@protoc_insertion_point(field_get:safe_browsing.LoginReputationClientResponse.verdict_token)
  return verdict_token_.GetNoArena();
}
inline void LoginReputationClientResponse::set_verdict_token(const ::std::string& value) {
  set_has_verdict_token();
  verdict_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.LoginReputationClientResponse.verdict_token)
}
#if LANG_CXX11
inline void LoginReputationClientResponse::set_verdict_token(::std::string&& value) {
  set_has_verdict_token();
  verdict_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.LoginReputationClientResponse.verdict_token)
}
#endif
inline void LoginReputationClientResponse::set_verdict_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verdict_token();
  verdict_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.LoginReputationClientResponse.verdict_token)
}
inline void LoginReputationClientResponse::set_verdict_token(const void* value, size_t size) {
  set_has_verdict_token();
  verdict_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.LoginReputationClientResponse.verdict_token)
}
inline ::std::string* LoginReputationClientResponse::mutable_verdict_token() {
  set_has_verdict_token();
  // @@protoc_insertion_point(field_mutable:safe_browsing.LoginReputationClientResponse.verdict_token)
  return verdict_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReputationClientResponse::release_verdict_token() {
  // @@protoc_insertion_point(field_release:safe_browsing.LoginReputationClientResponse.verdict_token)
  clear_has_verdict_token();
  return verdict_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReputationClientResponse::set_allocated_verdict_token(::std::string* verdict_token) {
  if (verdict_token != NULL) {
    set_has_verdict_token();
  } else {
    clear_has_verdict_token();
  }
  verdict_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verdict_token);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.LoginReputationClientResponse.verdict_token)
}

// -------------------------------------------------------------------

// ClientMalwareResponse

// required bool blacklist = 1;
inline bool ClientMalwareResponse::has_blacklist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientMalwareResponse::set_has_blacklist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientMalwareResponse::clear_has_blacklist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientMalwareResponse::clear_blacklist() {
  blacklist_ = false;
  clear_has_blacklist();
}
inline bool ClientMalwareResponse::blacklist() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientMalwareResponse.blacklist)
  return blacklist_;
}
inline void ClientMalwareResponse::set_blacklist(bool value) {
  set_has_blacklist();
  blacklist_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientMalwareResponse.blacklist)
}

// optional string bad_ip = 2;
inline bool ClientMalwareResponse::has_bad_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientMalwareResponse::set_has_bad_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientMalwareResponse::clear_has_bad_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientMalwareResponse::clear_bad_ip() {
  bad_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bad_ip();
}
inline const ::std::string& ClientMalwareResponse::bad_ip() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientMalwareResponse.bad_ip)
  return bad_ip_.GetNoArena();
}
inline void ClientMalwareResponse::set_bad_ip(const ::std::string& value) {
  set_has_bad_ip();
  bad_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientMalwareResponse.bad_ip)
}
#if LANG_CXX11
inline void ClientMalwareResponse::set_bad_ip(::std::string&& value) {
  set_has_bad_ip();
  bad_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientMalwareResponse.bad_ip)
}
#endif
inline void ClientMalwareResponse::set_bad_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bad_ip();
  bad_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientMalwareResponse.bad_ip)
}
inline void ClientMalwareResponse::set_bad_ip(const char* value, size_t size) {
  set_has_bad_ip();
  bad_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientMalwareResponse.bad_ip)
}
inline ::std::string* ClientMalwareResponse::mutable_bad_ip() {
  set_has_bad_ip();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientMalwareResponse.bad_ip)
  return bad_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientMalwareResponse::release_bad_ip() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientMalwareResponse.bad_ip)
  clear_has_bad_ip();
  return bad_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientMalwareResponse::set_allocated_bad_ip(::std::string* bad_ip) {
  if (bad_ip != NULL) {
    set_has_bad_ip();
  } else {
    clear_has_bad_ip();
  }
  bad_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bad_ip);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientMalwareResponse.bad_ip)
}

// optional string bad_url = 3;
inline bool ClientMalwareResponse::has_bad_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientMalwareResponse::set_has_bad_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientMalwareResponse::clear_has_bad_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientMalwareResponse::clear_bad_url() {
  bad_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bad_url();
}
inline const ::std::string& ClientMalwareResponse::bad_url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientMalwareResponse.bad_url)
  return bad_url_.GetNoArena();
}
inline void ClientMalwareResponse::set_bad_url(const ::std::string& value) {
  set_has_bad_url();
  bad_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientMalwareResponse.bad_url)
}
#if LANG_CXX11
inline void ClientMalwareResponse::set_bad_url(::std::string&& value) {
  set_has_bad_url();
  bad_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientMalwareResponse.bad_url)
}
#endif
inline void ClientMalwareResponse::set_bad_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bad_url();
  bad_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientMalwareResponse.bad_url)
}
inline void ClientMalwareResponse::set_bad_url(const char* value, size_t size) {
  set_has_bad_url();
  bad_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientMalwareResponse.bad_url)
}
inline ::std::string* ClientMalwareResponse::mutable_bad_url() {
  set_has_bad_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientMalwareResponse.bad_url)
  return bad_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientMalwareResponse::release_bad_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientMalwareResponse.bad_url)
  clear_has_bad_url();
  return bad_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientMalwareResponse::set_allocated_bad_url(::std::string* bad_url) {
  if (bad_url != NULL) {
    set_has_bad_url();
  } else {
    clear_has_bad_url();
  }
  bad_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bad_url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientMalwareResponse.bad_url)
}

// -------------------------------------------------------------------

// ClientDownloadRequest_Digests

// optional bytes sha256 = 1;
inline bool ClientDownloadRequest_Digests::has_sha256() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadRequest_Digests::set_has_sha256() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadRequest_Digests::clear_has_sha256() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadRequest_Digests::clear_sha256() {
  sha256_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sha256();
}
inline const ::std::string& ClientDownloadRequest_Digests::sha256() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.Digests.sha256)
  return sha256_.GetNoArena();
}
inline void ClientDownloadRequest_Digests::set_sha256(const ::std::string& value) {
  set_has_sha256();
  sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.Digests.sha256)
}
#if LANG_CXX11
inline void ClientDownloadRequest_Digests::set_sha256(::std::string&& value) {
  set_has_sha256();
  sha256_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.Digests.sha256)
}
#endif
inline void ClientDownloadRequest_Digests::set_sha256(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sha256();
  sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.Digests.sha256)
}
inline void ClientDownloadRequest_Digests::set_sha256(const void* value, size_t size) {
  set_has_sha256();
  sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.Digests.sha256)
}
inline ::std::string* ClientDownloadRequest_Digests::mutable_sha256() {
  set_has_sha256();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.Digests.sha256)
  return sha256_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_Digests::release_sha256() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.Digests.sha256)
  clear_has_sha256();
  return sha256_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_Digests::set_allocated_sha256(::std::string* sha256) {
  if (sha256 != NULL) {
    set_has_sha256();
  } else {
    clear_has_sha256();
  }
  sha256_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha256);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.Digests.sha256)
}

// optional bytes sha1 = 2;
inline bool ClientDownloadRequest_Digests::has_sha1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientDownloadRequest_Digests::set_has_sha1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientDownloadRequest_Digests::clear_has_sha1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientDownloadRequest_Digests::clear_sha1() {
  sha1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sha1();
}
inline const ::std::string& ClientDownloadRequest_Digests::sha1() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.Digests.sha1)
  return sha1_.GetNoArena();
}
inline void ClientDownloadRequest_Digests::set_sha1(const ::std::string& value) {
  set_has_sha1();
  sha1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.Digests.sha1)
}
#if LANG_CXX11
inline void ClientDownloadRequest_Digests::set_sha1(::std::string&& value) {
  set_has_sha1();
  sha1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.Digests.sha1)
}
#endif
inline void ClientDownloadRequest_Digests::set_sha1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sha1();
  sha1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.Digests.sha1)
}
inline void ClientDownloadRequest_Digests::set_sha1(const void* value, size_t size) {
  set_has_sha1();
  sha1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.Digests.sha1)
}
inline ::std::string* ClientDownloadRequest_Digests::mutable_sha1() {
  set_has_sha1();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.Digests.sha1)
  return sha1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_Digests::release_sha1() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.Digests.sha1)
  clear_has_sha1();
  return sha1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_Digests::set_allocated_sha1(::std::string* sha1) {
  if (sha1 != NULL) {
    set_has_sha1();
  } else {
    clear_has_sha1();
  }
  sha1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha1);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.Digests.sha1)
}

// optional bytes md5 = 3;
inline bool ClientDownloadRequest_Digests::has_md5() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientDownloadRequest_Digests::set_has_md5() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientDownloadRequest_Digests::clear_has_md5() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientDownloadRequest_Digests::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_md5();
}
inline const ::std::string& ClientDownloadRequest_Digests::md5() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.Digests.md5)
  return md5_.GetNoArena();
}
inline void ClientDownloadRequest_Digests::set_md5(const ::std::string& value) {
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.Digests.md5)
}
#if LANG_CXX11
inline void ClientDownloadRequest_Digests::set_md5(::std::string&& value) {
  set_has_md5();
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.Digests.md5)
}
#endif
inline void ClientDownloadRequest_Digests::set_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.Digests.md5)
}
inline void ClientDownloadRequest_Digests::set_md5(const void* value, size_t size) {
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.Digests.md5)
}
inline ::std::string* ClientDownloadRequest_Digests::mutable_md5() {
  set_has_md5();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.Digests.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_Digests::release_md5() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.Digests.md5)
  clear_has_md5();
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_Digests::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    set_has_md5();
  } else {
    clear_has_md5();
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.Digests.md5)
}

// -------------------------------------------------------------------

// ClientDownloadRequest_Resource

// required string url = 1;
inline bool ClientDownloadRequest_Resource::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadRequest_Resource::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadRequest_Resource::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadRequest_Resource::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& ClientDownloadRequest_Resource::url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.Resource.url)
  return url_.GetNoArena();
}
inline void ClientDownloadRequest_Resource::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.Resource.url)
}
#if LANG_CXX11
inline void ClientDownloadRequest_Resource::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.Resource.url)
}
#endif
inline void ClientDownloadRequest_Resource::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.Resource.url)
}
inline void ClientDownloadRequest_Resource::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.Resource.url)
}
inline ::std::string* ClientDownloadRequest_Resource::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.Resource.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_Resource::release_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.Resource.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_Resource::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.Resource.url)
}

// required .safe_browsing.ClientDownloadRequest.ResourceType type = 2;
inline bool ClientDownloadRequest_Resource::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientDownloadRequest_Resource::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientDownloadRequest_Resource::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientDownloadRequest_Resource::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::safe_browsing::ClientDownloadRequest_ResourceType ClientDownloadRequest_Resource::type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.Resource.type)
  return static_cast< ::safe_browsing::ClientDownloadRequest_ResourceType >(type_);
}
inline void ClientDownloadRequest_Resource::set_type(::safe_browsing::ClientDownloadRequest_ResourceType value) {
  assert(::safe_browsing::ClientDownloadRequest_ResourceType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.Resource.type)
}

// optional bytes remote_ip = 3;
inline bool ClientDownloadRequest_Resource::has_remote_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientDownloadRequest_Resource::set_has_remote_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientDownloadRequest_Resource::clear_has_remote_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientDownloadRequest_Resource::clear_remote_ip() {
  remote_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_remote_ip();
}
inline const ::std::string& ClientDownloadRequest_Resource::remote_ip() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.Resource.remote_ip)
  return remote_ip_.GetNoArena();
}
inline void ClientDownloadRequest_Resource::set_remote_ip(const ::std::string& value) {
  set_has_remote_ip();
  remote_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.Resource.remote_ip)
}
#if LANG_CXX11
inline void ClientDownloadRequest_Resource::set_remote_ip(::std::string&& value) {
  set_has_remote_ip();
  remote_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.Resource.remote_ip)
}
#endif
inline void ClientDownloadRequest_Resource::set_remote_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_remote_ip();
  remote_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.Resource.remote_ip)
}
inline void ClientDownloadRequest_Resource::set_remote_ip(const void* value, size_t size) {
  set_has_remote_ip();
  remote_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.Resource.remote_ip)
}
inline ::std::string* ClientDownloadRequest_Resource::mutable_remote_ip() {
  set_has_remote_ip();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.Resource.remote_ip)
  return remote_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_Resource::release_remote_ip() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.Resource.remote_ip)
  clear_has_remote_ip();
  return remote_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_Resource::set_allocated_remote_ip(::std::string* remote_ip) {
  if (remote_ip != NULL) {
    set_has_remote_ip();
  } else {
    clear_has_remote_ip();
  }
  remote_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remote_ip);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.Resource.remote_ip)
}

// optional string referrer = 4;
inline bool ClientDownloadRequest_Resource::has_referrer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientDownloadRequest_Resource::set_has_referrer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientDownloadRequest_Resource::clear_has_referrer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientDownloadRequest_Resource::clear_referrer() {
  referrer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_referrer();
}
inline const ::std::string& ClientDownloadRequest_Resource::referrer() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.Resource.referrer)
  return referrer_.GetNoArena();
}
inline void ClientDownloadRequest_Resource::set_referrer(const ::std::string& value) {
  set_has_referrer();
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.Resource.referrer)
}
#if LANG_CXX11
inline void ClientDownloadRequest_Resource::set_referrer(::std::string&& value) {
  set_has_referrer();
  referrer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.Resource.referrer)
}
#endif
inline void ClientDownloadRequest_Resource::set_referrer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_referrer();
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.Resource.referrer)
}
inline void ClientDownloadRequest_Resource::set_referrer(const char* value, size_t size) {
  set_has_referrer();
  referrer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.Resource.referrer)
}
inline ::std::string* ClientDownloadRequest_Resource::mutable_referrer() {
  set_has_referrer();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.Resource.referrer)
  return referrer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_Resource::release_referrer() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.Resource.referrer)
  clear_has_referrer();
  return referrer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_Resource::set_allocated_referrer(::std::string* referrer) {
  if (referrer != NULL) {
    set_has_referrer();
  } else {
    clear_has_referrer();
  }
  referrer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referrer);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.Resource.referrer)
}

// -------------------------------------------------------------------

// ClientDownloadRequest_CertificateChain_Element

// optional bytes certificate = 1;
inline bool ClientDownloadRequest_CertificateChain_Element::has_certificate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadRequest_CertificateChain_Element::set_has_certificate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadRequest_CertificateChain_Element::clear_has_certificate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadRequest_CertificateChain_Element::clear_certificate() {
  certificate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_certificate();
}
inline const ::std::string& ClientDownloadRequest_CertificateChain_Element::certificate() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.CertificateChain.Element.certificate)
  return certificate_.GetNoArena();
}
inline void ClientDownloadRequest_CertificateChain_Element::set_certificate(const ::std::string& value) {
  set_has_certificate();
  certificate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.CertificateChain.Element.certificate)
}
#if LANG_CXX11
inline void ClientDownloadRequest_CertificateChain_Element::set_certificate(::std::string&& value) {
  set_has_certificate();
  certificate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.CertificateChain.Element.certificate)
}
#endif
inline void ClientDownloadRequest_CertificateChain_Element::set_certificate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_certificate();
  certificate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.CertificateChain.Element.certificate)
}
inline void ClientDownloadRequest_CertificateChain_Element::set_certificate(const void* value, size_t size) {
  set_has_certificate();
  certificate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.CertificateChain.Element.certificate)
}
inline ::std::string* ClientDownloadRequest_CertificateChain_Element::mutable_certificate() {
  set_has_certificate();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.CertificateChain.Element.certificate)
  return certificate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_CertificateChain_Element::release_certificate() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.CertificateChain.Element.certificate)
  clear_has_certificate();
  return certificate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_CertificateChain_Element::set_allocated_certificate(::std::string* certificate) {
  if (certificate != NULL) {
    set_has_certificate();
  } else {
    clear_has_certificate();
  }
  certificate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), certificate);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.CertificateChain.Element.certificate)
}

// -------------------------------------------------------------------

// ClientDownloadRequest_CertificateChain

// repeated .safe_browsing.ClientDownloadRequest.CertificateChain.Element element = 1;
inline int ClientDownloadRequest_CertificateChain::element_size() const {
  return element_.size();
}
inline void ClientDownloadRequest_CertificateChain::clear_element() {
  element_.Clear();
}
inline const ::safe_browsing::ClientDownloadRequest_CertificateChain_Element& ClientDownloadRequest_CertificateChain::element(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.CertificateChain.element)
  return element_.Get(index);
}
inline ::safe_browsing::ClientDownloadRequest_CertificateChain_Element* ClientDownloadRequest_CertificateChain::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.CertificateChain.element)
  return element_.Mutable(index);
}
inline ::safe_browsing::ClientDownloadRequest_CertificateChain_Element* ClientDownloadRequest_CertificateChain::add_element() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.CertificateChain.element)
  return element_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_CertificateChain_Element >*
ClientDownloadRequest_CertificateChain::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientDownloadRequest.CertificateChain.element)
  return &element_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_CertificateChain_Element >&
ClientDownloadRequest_CertificateChain::element() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientDownloadRequest.CertificateChain.element)
  return element_;
}

// -------------------------------------------------------------------

// ClientDownloadRequest_ExtendedAttr

// required string key = 1;
inline bool ClientDownloadRequest_ExtendedAttr::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadRequest_ExtendedAttr::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadRequest_ExtendedAttr::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadRequest_ExtendedAttr::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& ClientDownloadRequest_ExtendedAttr::key() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.ExtendedAttr.key)
  return key_.GetNoArena();
}
inline void ClientDownloadRequest_ExtendedAttr::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.ExtendedAttr.key)
}
#if LANG_CXX11
inline void ClientDownloadRequest_ExtendedAttr::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.ExtendedAttr.key)
}
#endif
inline void ClientDownloadRequest_ExtendedAttr::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.ExtendedAttr.key)
}
inline void ClientDownloadRequest_ExtendedAttr::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.ExtendedAttr.key)
}
inline ::std::string* ClientDownloadRequest_ExtendedAttr::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.ExtendedAttr.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_ExtendedAttr::release_key() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.ExtendedAttr.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_ExtendedAttr::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.ExtendedAttr.key)
}

// optional bytes value = 2;
inline bool ClientDownloadRequest_ExtendedAttr::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientDownloadRequest_ExtendedAttr::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientDownloadRequest_ExtendedAttr::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientDownloadRequest_ExtendedAttr::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& ClientDownloadRequest_ExtendedAttr::value() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.ExtendedAttr.value)
  return value_.GetNoArena();
}
inline void ClientDownloadRequest_ExtendedAttr::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.ExtendedAttr.value)
}
#if LANG_CXX11
inline void ClientDownloadRequest_ExtendedAttr::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.ExtendedAttr.value)
}
#endif
inline void ClientDownloadRequest_ExtendedAttr::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.ExtendedAttr.value)
}
inline void ClientDownloadRequest_ExtendedAttr::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.ExtendedAttr.value)
}
inline ::std::string* ClientDownloadRequest_ExtendedAttr::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.ExtendedAttr.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_ExtendedAttr::release_value() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.ExtendedAttr.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_ExtendedAttr::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.ExtendedAttr.value)
}

// -------------------------------------------------------------------

// ClientDownloadRequest_SignatureInfo

// repeated .safe_browsing.ClientDownloadRequest.CertificateChain certificate_chain = 1;
inline int ClientDownloadRequest_SignatureInfo::certificate_chain_size() const {
  return certificate_chain_.size();
}
inline void ClientDownloadRequest_SignatureInfo::clear_certificate_chain() {
  certificate_chain_.Clear();
}
inline const ::safe_browsing::ClientDownloadRequest_CertificateChain& ClientDownloadRequest_SignatureInfo::certificate_chain(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.SignatureInfo.certificate_chain)
  return certificate_chain_.Get(index);
}
inline ::safe_browsing::ClientDownloadRequest_CertificateChain* ClientDownloadRequest_SignatureInfo::mutable_certificate_chain(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.SignatureInfo.certificate_chain)
  return certificate_chain_.Mutable(index);
}
inline ::safe_browsing::ClientDownloadRequest_CertificateChain* ClientDownloadRequest_SignatureInfo::add_certificate_chain() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.SignatureInfo.certificate_chain)
  return certificate_chain_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_CertificateChain >*
ClientDownloadRequest_SignatureInfo::mutable_certificate_chain() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientDownloadRequest.SignatureInfo.certificate_chain)
  return &certificate_chain_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_CertificateChain >&
ClientDownloadRequest_SignatureInfo::certificate_chain() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientDownloadRequest.SignatureInfo.certificate_chain)
  return certificate_chain_;
}

// optional bool trusted = 2;
inline bool ClientDownloadRequest_SignatureInfo::has_trusted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadRequest_SignatureInfo::set_has_trusted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadRequest_SignatureInfo::clear_has_trusted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadRequest_SignatureInfo::clear_trusted() {
  trusted_ = false;
  clear_has_trusted();
}
inline bool ClientDownloadRequest_SignatureInfo::trusted() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.SignatureInfo.trusted)
  return trusted_;
}
inline void ClientDownloadRequest_SignatureInfo::set_trusted(bool value) {
  set_has_trusted();
  trusted_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.SignatureInfo.trusted)
}

// repeated bytes signed_data = 3;
inline int ClientDownloadRequest_SignatureInfo::signed_data_size() const {
  return signed_data_.size();
}
inline void ClientDownloadRequest_SignatureInfo::clear_signed_data() {
  signed_data_.Clear();
}
inline const ::std::string& ClientDownloadRequest_SignatureInfo::signed_data(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
  return signed_data_.Get(index);
}
inline ::std::string* ClientDownloadRequest_SignatureInfo::mutable_signed_data(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
  return signed_data_.Mutable(index);
}
inline void ClientDownloadRequest_SignatureInfo::set_signed_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
  signed_data_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClientDownloadRequest_SignatureInfo::set_signed_data(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
  signed_data_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClientDownloadRequest_SignatureInfo::set_signed_data(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  signed_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
}
inline void ClientDownloadRequest_SignatureInfo::set_signed_data(int index, const void* value, size_t size) {
  signed_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
}
inline ::std::string* ClientDownloadRequest_SignatureInfo::add_signed_data() {
  // @@protoc_insertion_point(field_add_mutable:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
  return signed_data_.Add();
}
inline void ClientDownloadRequest_SignatureInfo::add_signed_data(const ::std::string& value) {
  signed_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
}
#if LANG_CXX11
inline void ClientDownloadRequest_SignatureInfo::add_signed_data(::std::string&& value) {
  signed_data_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
}
#endif
inline void ClientDownloadRequest_SignatureInfo::add_signed_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  signed_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
}
inline void ClientDownloadRequest_SignatureInfo::add_signed_data(const void* value, size_t size) {
  signed_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientDownloadRequest_SignatureInfo::signed_data() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
  return signed_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientDownloadRequest_SignatureInfo::mutable_signed_data() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientDownloadRequest.SignatureInfo.signed_data)
  return &signed_data_;
}

// repeated .safe_browsing.ClientDownloadRequest.ExtendedAttr xattr = 4;
inline int ClientDownloadRequest_SignatureInfo::xattr_size() const {
  return xattr_.size();
}
inline void ClientDownloadRequest_SignatureInfo::clear_xattr() {
  xattr_.Clear();
}
inline const ::safe_browsing::ClientDownloadRequest_ExtendedAttr& ClientDownloadRequest_SignatureInfo::xattr(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.SignatureInfo.xattr)
  return xattr_.Get(index);
}
inline ::safe_browsing::ClientDownloadRequest_ExtendedAttr* ClientDownloadRequest_SignatureInfo::mutable_xattr(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.SignatureInfo.xattr)
  return xattr_.Mutable(index);
}
inline ::safe_browsing::ClientDownloadRequest_ExtendedAttr* ClientDownloadRequest_SignatureInfo::add_xattr() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.SignatureInfo.xattr)
  return xattr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_ExtendedAttr >*
ClientDownloadRequest_SignatureInfo::mutable_xattr() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientDownloadRequest.SignatureInfo.xattr)
  return &xattr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_ExtendedAttr >&
ClientDownloadRequest_SignatureInfo::xattr() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientDownloadRequest.SignatureInfo.xattr)
  return xattr_;
}

// -------------------------------------------------------------------

// ClientDownloadRequest_PEImageHeaders_DebugData

// optional bytes directory_entry = 1;
inline bool ClientDownloadRequest_PEImageHeaders_DebugData::has_directory_entry() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadRequest_PEImageHeaders_DebugData::set_has_directory_entry() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadRequest_PEImageHeaders_DebugData::clear_has_directory_entry() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadRequest_PEImageHeaders_DebugData::clear_directory_entry() {
  directory_entry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_directory_entry();
}
inline const ::std::string& ClientDownloadRequest_PEImageHeaders_DebugData::directory_entry() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.directory_entry)
  return directory_entry_.GetNoArena();
}
inline void ClientDownloadRequest_PEImageHeaders_DebugData::set_directory_entry(const ::std::string& value) {
  set_has_directory_entry();
  directory_entry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.directory_entry)
}
#if LANG_CXX11
inline void ClientDownloadRequest_PEImageHeaders_DebugData::set_directory_entry(::std::string&& value) {
  set_has_directory_entry();
  directory_entry_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.directory_entry)
}
#endif
inline void ClientDownloadRequest_PEImageHeaders_DebugData::set_directory_entry(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_directory_entry();
  directory_entry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.directory_entry)
}
inline void ClientDownloadRequest_PEImageHeaders_DebugData::set_directory_entry(const void* value, size_t size) {
  set_has_directory_entry();
  directory_entry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.directory_entry)
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders_DebugData::mutable_directory_entry() {
  set_has_directory_entry();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.directory_entry)
  return directory_entry_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders_DebugData::release_directory_entry() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.directory_entry)
  clear_has_directory_entry();
  return directory_entry_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_PEImageHeaders_DebugData::set_allocated_directory_entry(::std::string* directory_entry) {
  if (directory_entry != NULL) {
    set_has_directory_entry();
  } else {
    clear_has_directory_entry();
  }
  directory_entry_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), directory_entry);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.directory_entry)
}

// optional bytes raw_data = 2;
inline bool ClientDownloadRequest_PEImageHeaders_DebugData::has_raw_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientDownloadRequest_PEImageHeaders_DebugData::set_has_raw_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientDownloadRequest_PEImageHeaders_DebugData::clear_has_raw_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientDownloadRequest_PEImageHeaders_DebugData::clear_raw_data() {
  raw_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_raw_data();
}
inline const ::std::string& ClientDownloadRequest_PEImageHeaders_DebugData::raw_data() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.raw_data)
  return raw_data_.GetNoArena();
}
inline void ClientDownloadRequest_PEImageHeaders_DebugData::set_raw_data(const ::std::string& value) {
  set_has_raw_data();
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.raw_data)
}
#if LANG_CXX11
inline void ClientDownloadRequest_PEImageHeaders_DebugData::set_raw_data(::std::string&& value) {
  set_has_raw_data();
  raw_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.raw_data)
}
#endif
inline void ClientDownloadRequest_PEImageHeaders_DebugData::set_raw_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_raw_data();
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.raw_data)
}
inline void ClientDownloadRequest_PEImageHeaders_DebugData::set_raw_data(const void* value, size_t size) {
  set_has_raw_data();
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.raw_data)
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders_DebugData::mutable_raw_data() {
  set_has_raw_data();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.raw_data)
  return raw_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders_DebugData::release_raw_data() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.raw_data)
  clear_has_raw_data();
  return raw_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_PEImageHeaders_DebugData::set_allocated_raw_data(::std::string* raw_data) {
  if (raw_data != NULL) {
    set_has_raw_data();
  } else {
    clear_has_raw_data();
  }
  raw_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_data);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData.raw_data)
}

// -------------------------------------------------------------------

// ClientDownloadRequest_PEImageHeaders

// optional bytes dos_header = 1;
inline bool ClientDownloadRequest_PEImageHeaders::has_dos_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadRequest_PEImageHeaders::set_has_dos_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadRequest_PEImageHeaders::clear_has_dos_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadRequest_PEImageHeaders::clear_dos_header() {
  dos_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dos_header();
}
inline const ::std::string& ClientDownloadRequest_PEImageHeaders::dos_header() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.PEImageHeaders.dos_header)
  return dos_header_.GetNoArena();
}
inline void ClientDownloadRequest_PEImageHeaders::set_dos_header(const ::std::string& value) {
  set_has_dos_header();
  dos_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.PEImageHeaders.dos_header)
}
#if LANG_CXX11
inline void ClientDownloadRequest_PEImageHeaders::set_dos_header(::std::string&& value) {
  set_has_dos_header();
  dos_header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.PEImageHeaders.dos_header)
}
#endif
inline void ClientDownloadRequest_PEImageHeaders::set_dos_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dos_header();
  dos_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.PEImageHeaders.dos_header)
}
inline void ClientDownloadRequest_PEImageHeaders::set_dos_header(const void* value, size_t size) {
  set_has_dos_header();
  dos_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.PEImageHeaders.dos_header)
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders::mutable_dos_header() {
  set_has_dos_header();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.PEImageHeaders.dos_header)
  return dos_header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders::release_dos_header() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.PEImageHeaders.dos_header)
  clear_has_dos_header();
  return dos_header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_PEImageHeaders::set_allocated_dos_header(::std::string* dos_header) {
  if (dos_header != NULL) {
    set_has_dos_header();
  } else {
    clear_has_dos_header();
  }
  dos_header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dos_header);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.PEImageHeaders.dos_header)
}

// optional bytes file_header = 2;
inline bool ClientDownloadRequest_PEImageHeaders::has_file_header() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientDownloadRequest_PEImageHeaders::set_has_file_header() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientDownloadRequest_PEImageHeaders::clear_has_file_header() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientDownloadRequest_PEImageHeaders::clear_file_header() {
  file_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_header();
}
inline const ::std::string& ClientDownloadRequest_PEImageHeaders::file_header() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.PEImageHeaders.file_header)
  return file_header_.GetNoArena();
}
inline void ClientDownloadRequest_PEImageHeaders::set_file_header(const ::std::string& value) {
  set_has_file_header();
  file_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.PEImageHeaders.file_header)
}
#if LANG_CXX11
inline void ClientDownloadRequest_PEImageHeaders::set_file_header(::std::string&& value) {
  set_has_file_header();
  file_header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.PEImageHeaders.file_header)
}
#endif
inline void ClientDownloadRequest_PEImageHeaders::set_file_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_header();
  file_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.PEImageHeaders.file_header)
}
inline void ClientDownloadRequest_PEImageHeaders::set_file_header(const void* value, size_t size) {
  set_has_file_header();
  file_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.PEImageHeaders.file_header)
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders::mutable_file_header() {
  set_has_file_header();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.PEImageHeaders.file_header)
  return file_header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders::release_file_header() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.PEImageHeaders.file_header)
  clear_has_file_header();
  return file_header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_PEImageHeaders::set_allocated_file_header(::std::string* file_header) {
  if (file_header != NULL) {
    set_has_file_header();
  } else {
    clear_has_file_header();
  }
  file_header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_header);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.PEImageHeaders.file_header)
}

// optional bytes optional_headers32 = 3;
inline bool ClientDownloadRequest_PEImageHeaders::has_optional_headers32() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientDownloadRequest_PEImageHeaders::set_has_optional_headers32() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientDownloadRequest_PEImageHeaders::clear_has_optional_headers32() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientDownloadRequest_PEImageHeaders::clear_optional_headers32() {
  optional_headers32_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_optional_headers32();
}
inline const ::std::string& ClientDownloadRequest_PEImageHeaders::optional_headers32() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers32)
  return optional_headers32_.GetNoArena();
}
inline void ClientDownloadRequest_PEImageHeaders::set_optional_headers32(const ::std::string& value) {
  set_has_optional_headers32();
  optional_headers32_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers32)
}
#if LANG_CXX11
inline void ClientDownloadRequest_PEImageHeaders::set_optional_headers32(::std::string&& value) {
  set_has_optional_headers32();
  optional_headers32_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers32)
}
#endif
inline void ClientDownloadRequest_PEImageHeaders::set_optional_headers32(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_optional_headers32();
  optional_headers32_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers32)
}
inline void ClientDownloadRequest_PEImageHeaders::set_optional_headers32(const void* value, size_t size) {
  set_has_optional_headers32();
  optional_headers32_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers32)
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders::mutable_optional_headers32() {
  set_has_optional_headers32();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers32)
  return optional_headers32_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders::release_optional_headers32() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers32)
  clear_has_optional_headers32();
  return optional_headers32_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_PEImageHeaders::set_allocated_optional_headers32(::std::string* optional_headers32) {
  if (optional_headers32 != NULL) {
    set_has_optional_headers32();
  } else {
    clear_has_optional_headers32();
  }
  optional_headers32_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_headers32);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers32)
}

// optional bytes optional_headers64 = 4;
inline bool ClientDownloadRequest_PEImageHeaders::has_optional_headers64() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientDownloadRequest_PEImageHeaders::set_has_optional_headers64() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientDownloadRequest_PEImageHeaders::clear_has_optional_headers64() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientDownloadRequest_PEImageHeaders::clear_optional_headers64() {
  optional_headers64_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_optional_headers64();
}
inline const ::std::string& ClientDownloadRequest_PEImageHeaders::optional_headers64() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers64)
  return optional_headers64_.GetNoArena();
}
inline void ClientDownloadRequest_PEImageHeaders::set_optional_headers64(const ::std::string& value) {
  set_has_optional_headers64();
  optional_headers64_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers64)
}
#if LANG_CXX11
inline void ClientDownloadRequest_PEImageHeaders::set_optional_headers64(::std::string&& value) {
  set_has_optional_headers64();
  optional_headers64_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers64)
}
#endif
inline void ClientDownloadRequest_PEImageHeaders::set_optional_headers64(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_optional_headers64();
  optional_headers64_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers64)
}
inline void ClientDownloadRequest_PEImageHeaders::set_optional_headers64(const void* value, size_t size) {
  set_has_optional_headers64();
  optional_headers64_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers64)
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders::mutable_optional_headers64() {
  set_has_optional_headers64();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers64)
  return optional_headers64_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders::release_optional_headers64() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers64)
  clear_has_optional_headers64();
  return optional_headers64_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_PEImageHeaders::set_allocated_optional_headers64(::std::string* optional_headers64) {
  if (optional_headers64 != NULL) {
    set_has_optional_headers64();
  } else {
    clear_has_optional_headers64();
  }
  optional_headers64_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), optional_headers64);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.PEImageHeaders.optional_headers64)
}

// repeated bytes section_header = 5;
inline int ClientDownloadRequest_PEImageHeaders::section_header_size() const {
  return section_header_.size();
}
inline void ClientDownloadRequest_PEImageHeaders::clear_section_header() {
  section_header_.Clear();
}
inline const ::std::string& ClientDownloadRequest_PEImageHeaders::section_header(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
  return section_header_.Get(index);
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders::mutable_section_header(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
  return section_header_.Mutable(index);
}
inline void ClientDownloadRequest_PEImageHeaders::set_section_header(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
  section_header_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClientDownloadRequest_PEImageHeaders::set_section_header(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
  section_header_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClientDownloadRequest_PEImageHeaders::set_section_header(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  section_header_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
}
inline void ClientDownloadRequest_PEImageHeaders::set_section_header(int index, const void* value, size_t size) {
  section_header_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders::add_section_header() {
  // @@protoc_insertion_point(field_add_mutable:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
  return section_header_.Add();
}
inline void ClientDownloadRequest_PEImageHeaders::add_section_header(const ::std::string& value) {
  section_header_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
}
#if LANG_CXX11
inline void ClientDownloadRequest_PEImageHeaders::add_section_header(::std::string&& value) {
  section_header_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
}
#endif
inline void ClientDownloadRequest_PEImageHeaders::add_section_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  section_header_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
}
inline void ClientDownloadRequest_PEImageHeaders::add_section_header(const void* value, size_t size) {
  section_header_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientDownloadRequest_PEImageHeaders::section_header() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
  return section_header_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientDownloadRequest_PEImageHeaders::mutable_section_header() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientDownloadRequest.PEImageHeaders.section_header)
  return &section_header_;
}

// optional bytes export_section_data = 6;
inline bool ClientDownloadRequest_PEImageHeaders::has_export_section_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientDownloadRequest_PEImageHeaders::set_has_export_section_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientDownloadRequest_PEImageHeaders::clear_has_export_section_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientDownloadRequest_PEImageHeaders::clear_export_section_data() {
  export_section_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_export_section_data();
}
inline const ::std::string& ClientDownloadRequest_PEImageHeaders::export_section_data() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.PEImageHeaders.export_section_data)
  return export_section_data_.GetNoArena();
}
inline void ClientDownloadRequest_PEImageHeaders::set_export_section_data(const ::std::string& value) {
  set_has_export_section_data();
  export_section_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.PEImageHeaders.export_section_data)
}
#if LANG_CXX11
inline void ClientDownloadRequest_PEImageHeaders::set_export_section_data(::std::string&& value) {
  set_has_export_section_data();
  export_section_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.PEImageHeaders.export_section_data)
}
#endif
inline void ClientDownloadRequest_PEImageHeaders::set_export_section_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_export_section_data();
  export_section_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.PEImageHeaders.export_section_data)
}
inline void ClientDownloadRequest_PEImageHeaders::set_export_section_data(const void* value, size_t size) {
  set_has_export_section_data();
  export_section_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.PEImageHeaders.export_section_data)
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders::mutable_export_section_data() {
  set_has_export_section_data();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.PEImageHeaders.export_section_data)
  return export_section_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_PEImageHeaders::release_export_section_data() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.PEImageHeaders.export_section_data)
  clear_has_export_section_data();
  return export_section_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_PEImageHeaders::set_allocated_export_section_data(::std::string* export_section_data) {
  if (export_section_data != NULL) {
    set_has_export_section_data();
  } else {
    clear_has_export_section_data();
  }
  export_section_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), export_section_data);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.PEImageHeaders.export_section_data)
}

// repeated .safe_browsing.ClientDownloadRequest.PEImageHeaders.DebugData debug_data = 7;
inline int ClientDownloadRequest_PEImageHeaders::debug_data_size() const {
  return debug_data_.size();
}
inline void ClientDownloadRequest_PEImageHeaders::clear_debug_data() {
  debug_data_.Clear();
}
inline const ::safe_browsing::ClientDownloadRequest_PEImageHeaders_DebugData& ClientDownloadRequest_PEImageHeaders::debug_data(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.PEImageHeaders.debug_data)
  return debug_data_.Get(index);
}
inline ::safe_browsing::ClientDownloadRequest_PEImageHeaders_DebugData* ClientDownloadRequest_PEImageHeaders::mutable_debug_data(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.PEImageHeaders.debug_data)
  return debug_data_.Mutable(index);
}
inline ::safe_browsing::ClientDownloadRequest_PEImageHeaders_DebugData* ClientDownloadRequest_PEImageHeaders::add_debug_data() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.PEImageHeaders.debug_data)
  return debug_data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_PEImageHeaders_DebugData >*
ClientDownloadRequest_PEImageHeaders::mutable_debug_data() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientDownloadRequest.PEImageHeaders.debug_data)
  return &debug_data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_PEImageHeaders_DebugData >&
ClientDownloadRequest_PEImageHeaders::debug_data() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientDownloadRequest.PEImageHeaders.debug_data)
  return debug_data_;
}

// -------------------------------------------------------------------

// ClientDownloadRequest_MachOHeaders_LoadCommand

// required uint32 command_id = 1;
inline bool ClientDownloadRequest_MachOHeaders_LoadCommand::has_command_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientDownloadRequest_MachOHeaders_LoadCommand::set_has_command_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientDownloadRequest_MachOHeaders_LoadCommand::clear_has_command_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientDownloadRequest_MachOHeaders_LoadCommand::clear_command_id() {
  command_id_ = 0u;
  clear_has_command_id();
}
inline ::google::protobuf::uint32 ClientDownloadRequest_MachOHeaders_LoadCommand::command_id() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand.command_id)
  return command_id_;
}
inline void ClientDownloadRequest_MachOHeaders_LoadCommand::set_command_id(::google::protobuf::uint32 value) {
  set_has_command_id();
  command_id_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand.command_id)
}

// required bytes command = 2;
inline bool ClientDownloadRequest_MachOHeaders_LoadCommand::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadRequest_MachOHeaders_LoadCommand::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadRequest_MachOHeaders_LoadCommand::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadRequest_MachOHeaders_LoadCommand::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_command();
}
inline const ::std::string& ClientDownloadRequest_MachOHeaders_LoadCommand::command() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand.command)
  return command_.GetNoArena();
}
inline void ClientDownloadRequest_MachOHeaders_LoadCommand::set_command(const ::std::string& value) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand.command)
}
#if LANG_CXX11
inline void ClientDownloadRequest_MachOHeaders_LoadCommand::set_command(::std::string&& value) {
  set_has_command();
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand.command)
}
#endif
inline void ClientDownloadRequest_MachOHeaders_LoadCommand::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand.command)
}
inline void ClientDownloadRequest_MachOHeaders_LoadCommand::set_command(const void* value, size_t size) {
  set_has_command();
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand.command)
}
inline ::std::string* ClientDownloadRequest_MachOHeaders_LoadCommand::mutable_command() {
  set_has_command();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_MachOHeaders_LoadCommand::release_command() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand.command)
  clear_has_command();
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_MachOHeaders_LoadCommand::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    set_has_command();
  } else {
    clear_has_command();
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand.command)
}

// -------------------------------------------------------------------

// ClientDownloadRequest_MachOHeaders

// required bytes mach_header = 1;
inline bool ClientDownloadRequest_MachOHeaders::has_mach_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadRequest_MachOHeaders::set_has_mach_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadRequest_MachOHeaders::clear_has_mach_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadRequest_MachOHeaders::clear_mach_header() {
  mach_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mach_header();
}
inline const ::std::string& ClientDownloadRequest_MachOHeaders::mach_header() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.MachOHeaders.mach_header)
  return mach_header_.GetNoArena();
}
inline void ClientDownloadRequest_MachOHeaders::set_mach_header(const ::std::string& value) {
  set_has_mach_header();
  mach_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.MachOHeaders.mach_header)
}
#if LANG_CXX11
inline void ClientDownloadRequest_MachOHeaders::set_mach_header(::std::string&& value) {
  set_has_mach_header();
  mach_header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.MachOHeaders.mach_header)
}
#endif
inline void ClientDownloadRequest_MachOHeaders::set_mach_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mach_header();
  mach_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.MachOHeaders.mach_header)
}
inline void ClientDownloadRequest_MachOHeaders::set_mach_header(const void* value, size_t size) {
  set_has_mach_header();
  mach_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.MachOHeaders.mach_header)
}
inline ::std::string* ClientDownloadRequest_MachOHeaders::mutable_mach_header() {
  set_has_mach_header();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.MachOHeaders.mach_header)
  return mach_header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_MachOHeaders::release_mach_header() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.MachOHeaders.mach_header)
  clear_has_mach_header();
  return mach_header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_MachOHeaders::set_allocated_mach_header(::std::string* mach_header) {
  if (mach_header != NULL) {
    set_has_mach_header();
  } else {
    clear_has_mach_header();
  }
  mach_header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mach_header);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.MachOHeaders.mach_header)
}

// repeated .safe_browsing.ClientDownloadRequest.MachOHeaders.LoadCommand load_commands = 2;
inline int ClientDownloadRequest_MachOHeaders::load_commands_size() const {
  return load_commands_.size();
}
inline void ClientDownloadRequest_MachOHeaders::clear_load_commands() {
  load_commands_.Clear();
}
inline const ::safe_browsing::ClientDownloadRequest_MachOHeaders_LoadCommand& ClientDownloadRequest_MachOHeaders::load_commands(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.MachOHeaders.load_commands)
  return load_commands_.Get(index);
}
inline ::safe_browsing::ClientDownloadRequest_MachOHeaders_LoadCommand* ClientDownloadRequest_MachOHeaders::mutable_load_commands(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.MachOHeaders.load_commands)
  return load_commands_.Mutable(index);
}
inline ::safe_browsing::ClientDownloadRequest_MachOHeaders_LoadCommand* ClientDownloadRequest_MachOHeaders::add_load_commands() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.MachOHeaders.load_commands)
  return load_commands_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_MachOHeaders_LoadCommand >*
ClientDownloadRequest_MachOHeaders::mutable_load_commands() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientDownloadRequest.MachOHeaders.load_commands)
  return &load_commands_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_MachOHeaders_LoadCommand >&
ClientDownloadRequest_MachOHeaders::load_commands() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientDownloadRequest.MachOHeaders.load_commands)
  return load_commands_;
}

// -------------------------------------------------------------------

// ClientDownloadRequest_ImageHeaders

// optional .safe_browsing.ClientDownloadRequest.PEImageHeaders pe_headers = 1;
inline bool ClientDownloadRequest_ImageHeaders::has_pe_headers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadRequest_ImageHeaders::set_has_pe_headers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadRequest_ImageHeaders::clear_has_pe_headers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadRequest_ImageHeaders::clear_pe_headers() {
  if (pe_headers_ != NULL) pe_headers_->::safe_browsing::ClientDownloadRequest_PEImageHeaders::Clear();
  clear_has_pe_headers();
}
inline const ::safe_browsing::ClientDownloadRequest_PEImageHeaders& ClientDownloadRequest_ImageHeaders::pe_headers() const {
  const ::safe_browsing::ClientDownloadRequest_PEImageHeaders* p = pe_headers_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.ImageHeaders.pe_headers)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest_PEImageHeaders*>(
      &::safe_browsing::_ClientDownloadRequest_PEImageHeaders_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest_PEImageHeaders* ClientDownloadRequest_ImageHeaders::mutable_pe_headers() {
  set_has_pe_headers();
  if (pe_headers_ == NULL) {
    pe_headers_ = new ::safe_browsing::ClientDownloadRequest_PEImageHeaders;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.ImageHeaders.pe_headers)
  return pe_headers_;
}
inline ::safe_browsing::ClientDownloadRequest_PEImageHeaders* ClientDownloadRequest_ImageHeaders::release_pe_headers() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.ImageHeaders.pe_headers)
  clear_has_pe_headers();
  ::safe_browsing::ClientDownloadRequest_PEImageHeaders* temp = pe_headers_;
  pe_headers_ = NULL;
  return temp;
}
inline void ClientDownloadRequest_ImageHeaders::set_allocated_pe_headers(::safe_browsing::ClientDownloadRequest_PEImageHeaders* pe_headers) {
  delete pe_headers_;
  pe_headers_ = pe_headers;
  if (pe_headers) {
    set_has_pe_headers();
  } else {
    clear_has_pe_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.ImageHeaders.pe_headers)
}

// repeated .safe_browsing.ClientDownloadRequest.MachOHeaders mach_o_headers = 2;
inline int ClientDownloadRequest_ImageHeaders::mach_o_headers_size() const {
  return mach_o_headers_.size();
}
inline void ClientDownloadRequest_ImageHeaders::clear_mach_o_headers() {
  mach_o_headers_.Clear();
}
inline const ::safe_browsing::ClientDownloadRequest_MachOHeaders& ClientDownloadRequest_ImageHeaders::mach_o_headers(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.ImageHeaders.mach_o_headers)
  return mach_o_headers_.Get(index);
}
inline ::safe_browsing::ClientDownloadRequest_MachOHeaders* ClientDownloadRequest_ImageHeaders::mutable_mach_o_headers(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.ImageHeaders.mach_o_headers)
  return mach_o_headers_.Mutable(index);
}
inline ::safe_browsing::ClientDownloadRequest_MachOHeaders* ClientDownloadRequest_ImageHeaders::add_mach_o_headers() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.ImageHeaders.mach_o_headers)
  return mach_o_headers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_MachOHeaders >*
ClientDownloadRequest_ImageHeaders::mutable_mach_o_headers() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientDownloadRequest.ImageHeaders.mach_o_headers)
  return &mach_o_headers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_MachOHeaders >&
ClientDownloadRequest_ImageHeaders::mach_o_headers() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientDownloadRequest.ImageHeaders.mach_o_headers)
  return mach_o_headers_;
}

// -------------------------------------------------------------------

// ClientDownloadRequest_ArchivedBinary

// optional string file_basename = 1;
inline bool ClientDownloadRequest_ArchivedBinary::has_file_basename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadRequest_ArchivedBinary::set_has_file_basename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadRequest_ArchivedBinary::clear_has_file_basename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadRequest_ArchivedBinary::clear_file_basename() {
  file_basename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_basename();
}
inline const ::std::string& ClientDownloadRequest_ArchivedBinary::file_basename() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.ArchivedBinary.file_basename)
  return file_basename_.GetNoArena();
}
inline void ClientDownloadRequest_ArchivedBinary::set_file_basename(const ::std::string& value) {
  set_has_file_basename();
  file_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.ArchivedBinary.file_basename)
}
#if LANG_CXX11
inline void ClientDownloadRequest_ArchivedBinary::set_file_basename(::std::string&& value) {
  set_has_file_basename();
  file_basename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.ArchivedBinary.file_basename)
}
#endif
inline void ClientDownloadRequest_ArchivedBinary::set_file_basename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_basename();
  file_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.ArchivedBinary.file_basename)
}
inline void ClientDownloadRequest_ArchivedBinary::set_file_basename(const char* value, size_t size) {
  set_has_file_basename();
  file_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.ArchivedBinary.file_basename)
}
inline ::std::string* ClientDownloadRequest_ArchivedBinary::mutable_file_basename() {
  set_has_file_basename();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.ArchivedBinary.file_basename)
  return file_basename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest_ArchivedBinary::release_file_basename() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.ArchivedBinary.file_basename)
  clear_has_file_basename();
  return file_basename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest_ArchivedBinary::set_allocated_file_basename(::std::string* file_basename) {
  if (file_basename != NULL) {
    set_has_file_basename();
  } else {
    clear_has_file_basename();
  }
  file_basename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_basename);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.ArchivedBinary.file_basename)
}

// optional .safe_browsing.ClientDownloadRequest.DownloadType download_type = 2;
inline bool ClientDownloadRequest_ArchivedBinary::has_download_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientDownloadRequest_ArchivedBinary::set_has_download_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientDownloadRequest_ArchivedBinary::clear_has_download_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientDownloadRequest_ArchivedBinary::clear_download_type() {
  download_type_ = 0;
  clear_has_download_type();
}
inline ::safe_browsing::ClientDownloadRequest_DownloadType ClientDownloadRequest_ArchivedBinary::download_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.ArchivedBinary.download_type)
  return static_cast< ::safe_browsing::ClientDownloadRequest_DownloadType >(download_type_);
}
inline void ClientDownloadRequest_ArchivedBinary::set_download_type(::safe_browsing::ClientDownloadRequest_DownloadType value) {
  assert(::safe_browsing::ClientDownloadRequest_DownloadType_IsValid(value));
  set_has_download_type();
  download_type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.ArchivedBinary.download_type)
}

// optional .safe_browsing.ClientDownloadRequest.Digests digests = 3;
inline bool ClientDownloadRequest_ArchivedBinary::has_digests() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientDownloadRequest_ArchivedBinary::set_has_digests() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientDownloadRequest_ArchivedBinary::clear_has_digests() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientDownloadRequest_ArchivedBinary::clear_digests() {
  if (digests_ != NULL) digests_->::safe_browsing::ClientDownloadRequest_Digests::Clear();
  clear_has_digests();
}
inline const ::safe_browsing::ClientDownloadRequest_Digests& ClientDownloadRequest_ArchivedBinary::digests() const {
  const ::safe_browsing::ClientDownloadRequest_Digests* p = digests_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.ArchivedBinary.digests)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest_Digests*>(
      &::safe_browsing::_ClientDownloadRequest_Digests_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest_Digests* ClientDownloadRequest_ArchivedBinary::mutable_digests() {
  set_has_digests();
  if (digests_ == NULL) {
    digests_ = new ::safe_browsing::ClientDownloadRequest_Digests;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.ArchivedBinary.digests)
  return digests_;
}
inline ::safe_browsing::ClientDownloadRequest_Digests* ClientDownloadRequest_ArchivedBinary::release_digests() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.ArchivedBinary.digests)
  clear_has_digests();
  ::safe_browsing::ClientDownloadRequest_Digests* temp = digests_;
  digests_ = NULL;
  return temp;
}
inline void ClientDownloadRequest_ArchivedBinary::set_allocated_digests(::safe_browsing::ClientDownloadRequest_Digests* digests) {
  delete digests_;
  digests_ = digests;
  if (digests) {
    set_has_digests();
  } else {
    clear_has_digests();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.ArchivedBinary.digests)
}

// optional int64 length = 4;
inline bool ClientDownloadRequest_ArchivedBinary::has_length() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientDownloadRequest_ArchivedBinary::set_has_length() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientDownloadRequest_ArchivedBinary::clear_has_length() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientDownloadRequest_ArchivedBinary::clear_length() {
  length_ = GOOGLE_LONGLONG(0);
  clear_has_length();
}
inline ::google::protobuf::int64 ClientDownloadRequest_ArchivedBinary::length() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.ArchivedBinary.length)
  return length_;
}
inline void ClientDownloadRequest_ArchivedBinary::set_length(::google::protobuf::int64 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.ArchivedBinary.length)
}

// optional .safe_browsing.ClientDownloadRequest.SignatureInfo signature = 5;
inline bool ClientDownloadRequest_ArchivedBinary::has_signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientDownloadRequest_ArchivedBinary::set_has_signature() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientDownloadRequest_ArchivedBinary::clear_has_signature() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientDownloadRequest_ArchivedBinary::clear_signature() {
  if (signature_ != NULL) signature_->::safe_browsing::ClientDownloadRequest_SignatureInfo::Clear();
  clear_has_signature();
}
inline const ::safe_browsing::ClientDownloadRequest_SignatureInfo& ClientDownloadRequest_ArchivedBinary::signature() const {
  const ::safe_browsing::ClientDownloadRequest_SignatureInfo* p = signature_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.ArchivedBinary.signature)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest_SignatureInfo*>(
      &::safe_browsing::_ClientDownloadRequest_SignatureInfo_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest_SignatureInfo* ClientDownloadRequest_ArchivedBinary::mutable_signature() {
  set_has_signature();
  if (signature_ == NULL) {
    signature_ = new ::safe_browsing::ClientDownloadRequest_SignatureInfo;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.ArchivedBinary.signature)
  return signature_;
}
inline ::safe_browsing::ClientDownloadRequest_SignatureInfo* ClientDownloadRequest_ArchivedBinary::release_signature() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.ArchivedBinary.signature)
  clear_has_signature();
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* temp = signature_;
  signature_ = NULL;
  return temp;
}
inline void ClientDownloadRequest_ArchivedBinary::set_allocated_signature(::safe_browsing::ClientDownloadRequest_SignatureInfo* signature) {
  delete signature_;
  signature_ = signature;
  if (signature) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.ArchivedBinary.signature)
}

// optional .safe_browsing.ClientDownloadRequest.ImageHeaders image_headers = 6;
inline bool ClientDownloadRequest_ArchivedBinary::has_image_headers() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientDownloadRequest_ArchivedBinary::set_has_image_headers() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientDownloadRequest_ArchivedBinary::clear_has_image_headers() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientDownloadRequest_ArchivedBinary::clear_image_headers() {
  if (image_headers_ != NULL) image_headers_->::safe_browsing::ClientDownloadRequest_ImageHeaders::Clear();
  clear_has_image_headers();
}
inline const ::safe_browsing::ClientDownloadRequest_ImageHeaders& ClientDownloadRequest_ArchivedBinary::image_headers() const {
  const ::safe_browsing::ClientDownloadRequest_ImageHeaders* p = image_headers_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.ArchivedBinary.image_headers)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest_ImageHeaders*>(
      &::safe_browsing::_ClientDownloadRequest_ImageHeaders_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest_ImageHeaders* ClientDownloadRequest_ArchivedBinary::mutable_image_headers() {
  set_has_image_headers();
  if (image_headers_ == NULL) {
    image_headers_ = new ::safe_browsing::ClientDownloadRequest_ImageHeaders;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.ArchivedBinary.image_headers)
  return image_headers_;
}
inline ::safe_browsing::ClientDownloadRequest_ImageHeaders* ClientDownloadRequest_ArchivedBinary::release_image_headers() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.ArchivedBinary.image_headers)
  clear_has_image_headers();
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* temp = image_headers_;
  image_headers_ = NULL;
  return temp;
}
inline void ClientDownloadRequest_ArchivedBinary::set_allocated_image_headers(::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers) {
  delete image_headers_;
  image_headers_ = image_headers;
  if (image_headers) {
    set_has_image_headers();
  } else {
    clear_has_image_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.ArchivedBinary.image_headers)
}

// -------------------------------------------------------------------

// ClientDownloadRequest

// required string url = 1;
inline bool ClientDownloadRequest::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadRequest::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& ClientDownloadRequest::url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.url)
  return url_.GetNoArena();
}
inline void ClientDownloadRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.url)
}
#if LANG_CXX11
inline void ClientDownloadRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.url)
}
#endif
inline void ClientDownloadRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.url)
}
inline void ClientDownloadRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.url)
}
inline ::std::string* ClientDownloadRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest::release_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.url)
}

// required .safe_browsing.ClientDownloadRequest.Digests digests = 2;
inline bool ClientDownloadRequest::has_digests() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientDownloadRequest::set_has_digests() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientDownloadRequest::clear_has_digests() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientDownloadRequest::clear_digests() {
  if (digests_ != NULL) digests_->::safe_browsing::ClientDownloadRequest_Digests::Clear();
  clear_has_digests();
}
inline const ::safe_browsing::ClientDownloadRequest_Digests& ClientDownloadRequest::digests() const {
  const ::safe_browsing::ClientDownloadRequest_Digests* p = digests_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.digests)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest_Digests*>(
      &::safe_browsing::_ClientDownloadRequest_Digests_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest_Digests* ClientDownloadRequest::mutable_digests() {
  set_has_digests();
  if (digests_ == NULL) {
    digests_ = new ::safe_browsing::ClientDownloadRequest_Digests;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.digests)
  return digests_;
}
inline ::safe_browsing::ClientDownloadRequest_Digests* ClientDownloadRequest::release_digests() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.digests)
  clear_has_digests();
  ::safe_browsing::ClientDownloadRequest_Digests* temp = digests_;
  digests_ = NULL;
  return temp;
}
inline void ClientDownloadRequest::set_allocated_digests(::safe_browsing::ClientDownloadRequest_Digests* digests) {
  delete digests_;
  digests_ = digests;
  if (digests) {
    set_has_digests();
  } else {
    clear_has_digests();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.digests)
}

// required int64 length = 3;
inline bool ClientDownloadRequest::has_length() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientDownloadRequest::set_has_length() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientDownloadRequest::clear_has_length() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientDownloadRequest::clear_length() {
  length_ = GOOGLE_LONGLONG(0);
  clear_has_length();
}
inline ::google::protobuf::int64 ClientDownloadRequest::length() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.length)
  return length_;
}
inline void ClientDownloadRequest::set_length(::google::protobuf::int64 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.length)
}

// repeated .safe_browsing.ClientDownloadRequest.Resource resources = 4;
inline int ClientDownloadRequest::resources_size() const {
  return resources_.size();
}
inline void ClientDownloadRequest::clear_resources() {
  resources_.Clear();
}
inline const ::safe_browsing::ClientDownloadRequest_Resource& ClientDownloadRequest::resources(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.resources)
  return resources_.Get(index);
}
inline ::safe_browsing::ClientDownloadRequest_Resource* ClientDownloadRequest::mutable_resources(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.resources)
  return resources_.Mutable(index);
}
inline ::safe_browsing::ClientDownloadRequest_Resource* ClientDownloadRequest::add_resources() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.resources)
  return resources_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_Resource >*
ClientDownloadRequest::mutable_resources() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientDownloadRequest.resources)
  return &resources_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_Resource >&
ClientDownloadRequest::resources() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientDownloadRequest.resources)
  return resources_;
}

// optional .safe_browsing.ClientDownloadRequest.SignatureInfo signature = 5;
inline bool ClientDownloadRequest::has_signature() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientDownloadRequest::set_has_signature() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientDownloadRequest::clear_has_signature() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientDownloadRequest::clear_signature() {
  if (signature_ != NULL) signature_->::safe_browsing::ClientDownloadRequest_SignatureInfo::Clear();
  clear_has_signature();
}
inline const ::safe_browsing::ClientDownloadRequest_SignatureInfo& ClientDownloadRequest::signature() const {
  const ::safe_browsing::ClientDownloadRequest_SignatureInfo* p = signature_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.signature)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest_SignatureInfo*>(
      &::safe_browsing::_ClientDownloadRequest_SignatureInfo_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest_SignatureInfo* ClientDownloadRequest::mutable_signature() {
  set_has_signature();
  if (signature_ == NULL) {
    signature_ = new ::safe_browsing::ClientDownloadRequest_SignatureInfo;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.signature)
  return signature_;
}
inline ::safe_browsing::ClientDownloadRequest_SignatureInfo* ClientDownloadRequest::release_signature() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.signature)
  clear_has_signature();
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* temp = signature_;
  signature_ = NULL;
  return temp;
}
inline void ClientDownloadRequest::set_allocated_signature(::safe_browsing::ClientDownloadRequest_SignatureInfo* signature) {
  delete signature_;
  signature_ = signature;
  if (signature) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.signature)
}

// optional bool user_initiated = 6;
inline bool ClientDownloadRequest::has_user_initiated() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ClientDownloadRequest::set_has_user_initiated() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ClientDownloadRequest::clear_has_user_initiated() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ClientDownloadRequest::clear_user_initiated() {
  user_initiated_ = false;
  clear_has_user_initiated();
}
inline bool ClientDownloadRequest::user_initiated() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.user_initiated)
  return user_initiated_;
}
inline void ClientDownloadRequest::set_user_initiated(bool value) {
  set_has_user_initiated();
  user_initiated_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.user_initiated)
}

// optional string file_basename = 9;
inline bool ClientDownloadRequest::has_file_basename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientDownloadRequest::set_has_file_basename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientDownloadRequest::clear_has_file_basename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientDownloadRequest::clear_file_basename() {
  file_basename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_basename();
}
inline const ::std::string& ClientDownloadRequest::file_basename() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.file_basename)
  return file_basename_.GetNoArena();
}
inline void ClientDownloadRequest::set_file_basename(const ::std::string& value) {
  set_has_file_basename();
  file_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.file_basename)
}
#if LANG_CXX11
inline void ClientDownloadRequest::set_file_basename(::std::string&& value) {
  set_has_file_basename();
  file_basename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.file_basename)
}
#endif
inline void ClientDownloadRequest::set_file_basename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_basename();
  file_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.file_basename)
}
inline void ClientDownloadRequest::set_file_basename(const char* value, size_t size) {
  set_has_file_basename();
  file_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.file_basename)
}
inline ::std::string* ClientDownloadRequest::mutable_file_basename() {
  set_has_file_basename();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.file_basename)
  return file_basename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest::release_file_basename() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.file_basename)
  clear_has_file_basename();
  return file_basename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest::set_allocated_file_basename(::std::string* file_basename) {
  if (file_basename != NULL) {
    set_has_file_basename();
  } else {
    clear_has_file_basename();
  }
  file_basename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_basename);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.file_basename)
}

// optional .safe_browsing.ClientDownloadRequest.DownloadType download_type = 10 [default = WIN_EXECUTABLE];
inline bool ClientDownloadRequest::has_download_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientDownloadRequest::set_has_download_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientDownloadRequest::clear_has_download_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientDownloadRequest::clear_download_type() {
  download_type_ = 0;
  clear_has_download_type();
}
inline ::safe_browsing::ClientDownloadRequest_DownloadType ClientDownloadRequest::download_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.download_type)
  return static_cast< ::safe_browsing::ClientDownloadRequest_DownloadType >(download_type_);
}
inline void ClientDownloadRequest::set_download_type(::safe_browsing::ClientDownloadRequest_DownloadType value) {
  assert(::safe_browsing::ClientDownloadRequest_DownloadType_IsValid(value));
  set_has_download_type();
  download_type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.download_type)
}

// optional string locale = 11;
inline bool ClientDownloadRequest::has_locale() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientDownloadRequest::set_has_locale() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientDownloadRequest::clear_has_locale() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientDownloadRequest::clear_locale() {
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_locale();
}
inline const ::std::string& ClientDownloadRequest::locale() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.locale)
  return locale_.GetNoArena();
}
inline void ClientDownloadRequest::set_locale(const ::std::string& value) {
  set_has_locale();
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.locale)
}
#if LANG_CXX11
inline void ClientDownloadRequest::set_locale(::std::string&& value) {
  set_has_locale();
  locale_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.locale)
}
#endif
inline void ClientDownloadRequest::set_locale(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_locale();
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.locale)
}
inline void ClientDownloadRequest::set_locale(const char* value, size_t size) {
  set_has_locale();
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.locale)
}
inline ::std::string* ClientDownloadRequest::mutable_locale() {
  set_has_locale();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.locale)
  return locale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest::release_locale() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.locale)
  clear_has_locale();
  return locale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest::set_allocated_locale(::std::string* locale) {
  if (locale != NULL) {
    set_has_locale();
  } else {
    clear_has_locale();
  }
  locale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.locale)
}

// optional .safe_browsing.ClientDownloadRequest.ImageHeaders image_headers = 18;
inline bool ClientDownloadRequest::has_image_headers() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientDownloadRequest::set_has_image_headers() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientDownloadRequest::clear_has_image_headers() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientDownloadRequest::clear_image_headers() {
  if (image_headers_ != NULL) image_headers_->::safe_browsing::ClientDownloadRequest_ImageHeaders::Clear();
  clear_has_image_headers();
}
inline const ::safe_browsing::ClientDownloadRequest_ImageHeaders& ClientDownloadRequest::image_headers() const {
  const ::safe_browsing::ClientDownloadRequest_ImageHeaders* p = image_headers_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.image_headers)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest_ImageHeaders*>(
      &::safe_browsing::_ClientDownloadRequest_ImageHeaders_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest_ImageHeaders* ClientDownloadRequest::mutable_image_headers() {
  set_has_image_headers();
  if (image_headers_ == NULL) {
    image_headers_ = new ::safe_browsing::ClientDownloadRequest_ImageHeaders;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.image_headers)
  return image_headers_;
}
inline ::safe_browsing::ClientDownloadRequest_ImageHeaders* ClientDownloadRequest::release_image_headers() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.image_headers)
  clear_has_image_headers();
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* temp = image_headers_;
  image_headers_ = NULL;
  return temp;
}
inline void ClientDownloadRequest::set_allocated_image_headers(::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers) {
  delete image_headers_;
  image_headers_ = image_headers;
  if (image_headers) {
    set_has_image_headers();
  } else {
    clear_has_image_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.image_headers)
}

// repeated .safe_browsing.ClientDownloadRequest.ArchivedBinary archived_binary = 22;
inline int ClientDownloadRequest::archived_binary_size() const {
  return archived_binary_.size();
}
inline void ClientDownloadRequest::clear_archived_binary() {
  archived_binary_.Clear();
}
inline const ::safe_browsing::ClientDownloadRequest_ArchivedBinary& ClientDownloadRequest::archived_binary(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.archived_binary)
  return archived_binary_.Get(index);
}
inline ::safe_browsing::ClientDownloadRequest_ArchivedBinary* ClientDownloadRequest::mutable_archived_binary(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.archived_binary)
  return archived_binary_.Mutable(index);
}
inline ::safe_browsing::ClientDownloadRequest_ArchivedBinary* ClientDownloadRequest::add_archived_binary() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.archived_binary)
  return archived_binary_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_ArchivedBinary >*
ClientDownloadRequest::mutable_archived_binary() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientDownloadRequest.archived_binary)
  return &archived_binary_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientDownloadRequest_ArchivedBinary >&
ClientDownloadRequest::archived_binary() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientDownloadRequest.archived_binary)
  return archived_binary_;
}

// optional .safe_browsing.ChromeUserPopulation population = 24;
inline bool ClientDownloadRequest::has_population() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientDownloadRequest::set_has_population() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientDownloadRequest::clear_has_population() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientDownloadRequest::clear_population() {
  if (population_ != NULL) population_->::safe_browsing::ChromeUserPopulation::Clear();
  clear_has_population();
}
inline const ::safe_browsing::ChromeUserPopulation& ClientDownloadRequest::population() const {
  const ::safe_browsing::ChromeUserPopulation* p = population_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.population)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ChromeUserPopulation*>(
      &::safe_browsing::_ChromeUserPopulation_default_instance_);
}
inline ::safe_browsing::ChromeUserPopulation* ClientDownloadRequest::mutable_population() {
  set_has_population();
  if (population_ == NULL) {
    population_ = new ::safe_browsing::ChromeUserPopulation;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.population)
  return population_;
}
inline ::safe_browsing::ChromeUserPopulation* ClientDownloadRequest::release_population() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.population)
  clear_has_population();
  ::safe_browsing::ChromeUserPopulation* temp = population_;
  population_ = NULL;
  return temp;
}
inline void ClientDownloadRequest::set_allocated_population(::safe_browsing::ChromeUserPopulation* population) {
  delete population_;
  population_ = population;
  if (population) {
    set_has_population();
  } else {
    clear_has_population();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.population)
}

// optional bool archive_valid = 26;
inline bool ClientDownloadRequest::has_archive_valid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ClientDownloadRequest::set_has_archive_valid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ClientDownloadRequest::clear_has_archive_valid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ClientDownloadRequest::clear_archive_valid() {
  archive_valid_ = false;
  clear_has_archive_valid();
}
inline bool ClientDownloadRequest::archive_valid() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.archive_valid)
  return archive_valid_;
}
inline void ClientDownloadRequest::set_archive_valid(bool value) {
  set_has_archive_valid();
  archive_valid_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.archive_valid)
}

// optional bool skipped_url_whitelist = 28;
inline bool ClientDownloadRequest::has_skipped_url_whitelist() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ClientDownloadRequest::set_has_skipped_url_whitelist() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ClientDownloadRequest::clear_has_skipped_url_whitelist() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ClientDownloadRequest::clear_skipped_url_whitelist() {
  skipped_url_whitelist_ = false;
  clear_has_skipped_url_whitelist();
}
inline bool ClientDownloadRequest::skipped_url_whitelist() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.skipped_url_whitelist)
  return skipped_url_whitelist_;
}
inline void ClientDownloadRequest::set_skipped_url_whitelist(bool value) {
  set_has_skipped_url_whitelist();
  skipped_url_whitelist_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.skipped_url_whitelist)
}

// optional bool skipped_certificate_whitelist = 31;
inline bool ClientDownloadRequest::has_skipped_certificate_whitelist() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ClientDownloadRequest::set_has_skipped_certificate_whitelist() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ClientDownloadRequest::clear_has_skipped_certificate_whitelist() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ClientDownloadRequest::clear_skipped_certificate_whitelist() {
  skipped_certificate_whitelist_ = false;
  clear_has_skipped_certificate_whitelist();
}
inline bool ClientDownloadRequest::skipped_certificate_whitelist() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.skipped_certificate_whitelist)
  return skipped_certificate_whitelist_;
}
inline void ClientDownloadRequest::set_skipped_certificate_whitelist(bool value) {
  set_has_skipped_certificate_whitelist();
  skipped_certificate_whitelist_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.skipped_certificate_whitelist)
}

// repeated string alternate_extensions = 35;
inline int ClientDownloadRequest::alternate_extensions_size() const {
  return alternate_extensions_.size();
}
inline void ClientDownloadRequest::clear_alternate_extensions() {
  alternate_extensions_.Clear();
}
inline const ::std::string& ClientDownloadRequest::alternate_extensions(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.alternate_extensions)
  return alternate_extensions_.Get(index);
}
inline ::std::string* ClientDownloadRequest::mutable_alternate_extensions(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.alternate_extensions)
  return alternate_extensions_.Mutable(index);
}
inline void ClientDownloadRequest::set_alternate_extensions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.alternate_extensions)
  alternate_extensions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClientDownloadRequest::set_alternate_extensions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.alternate_extensions)
  alternate_extensions_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClientDownloadRequest::set_alternate_extensions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  alternate_extensions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.alternate_extensions)
}
inline void ClientDownloadRequest::set_alternate_extensions(int index, const char* value, size_t size) {
  alternate_extensions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.alternate_extensions)
}
inline ::std::string* ClientDownloadRequest::add_alternate_extensions() {
  // @@protoc_insertion_point(field_add_mutable:safe_browsing.ClientDownloadRequest.alternate_extensions)
  return alternate_extensions_.Add();
}
inline void ClientDownloadRequest::add_alternate_extensions(const ::std::string& value) {
  alternate_extensions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.alternate_extensions)
}
#if LANG_CXX11
inline void ClientDownloadRequest::add_alternate_extensions(::std::string&& value) {
  alternate_extensions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.alternate_extensions)
}
#endif
inline void ClientDownloadRequest::add_alternate_extensions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  alternate_extensions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:safe_browsing.ClientDownloadRequest.alternate_extensions)
}
inline void ClientDownloadRequest::add_alternate_extensions(const char* value, size_t size) {
  alternate_extensions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:safe_browsing.ClientDownloadRequest.alternate_extensions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientDownloadRequest::alternate_extensions() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientDownloadRequest.alternate_extensions)
  return alternate_extensions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientDownloadRequest::mutable_alternate_extensions() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientDownloadRequest.alternate_extensions)
  return &alternate_extensions_;
}

// repeated .safe_browsing.ReferrerChainEntry referrer_chain = 36;
inline int ClientDownloadRequest::referrer_chain_size() const {
  return referrer_chain_.size();
}
inline void ClientDownloadRequest::clear_referrer_chain() {
  referrer_chain_.Clear();
}
inline const ::safe_browsing::ReferrerChainEntry& ClientDownloadRequest::referrer_chain(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.referrer_chain)
  return referrer_chain_.Get(index);
}
inline ::safe_browsing::ReferrerChainEntry* ClientDownloadRequest::mutable_referrer_chain(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.referrer_chain)
  return referrer_chain_.Mutable(index);
}
inline ::safe_browsing::ReferrerChainEntry* ClientDownloadRequest::add_referrer_chain() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientDownloadRequest.referrer_chain)
  return referrer_chain_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry >*
ClientDownloadRequest::mutable_referrer_chain() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientDownloadRequest.referrer_chain)
  return &referrer_chain_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry >&
ClientDownloadRequest::referrer_chain() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientDownloadRequest.referrer_chain)
  return referrer_chain_;
}

// optional bool DEPRECATED_download_attribution_finch_enabled = 39 [deprecated = true];
inline bool ClientDownloadRequest::has_deprecated_download_attribution_finch_enabled() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientDownloadRequest::set_has_deprecated_download_attribution_finch_enabled() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientDownloadRequest::clear_has_deprecated_download_attribution_finch_enabled() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientDownloadRequest::clear_deprecated_download_attribution_finch_enabled() {
  deprecated_download_attribution_finch_enabled_ = false;
  clear_has_deprecated_download_attribution_finch_enabled();
}
inline bool ClientDownloadRequest::deprecated_download_attribution_finch_enabled() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.DEPRECATED_download_attribution_finch_enabled)
  return deprecated_download_attribution_finch_enabled_;
}
inline void ClientDownloadRequest::set_deprecated_download_attribution_finch_enabled(bool value) {
  set_has_deprecated_download_attribution_finch_enabled();
  deprecated_download_attribution_finch_enabled_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.DEPRECATED_download_attribution_finch_enabled)
}

// optional bytes udif_code_signature = 40;
inline bool ClientDownloadRequest::has_udif_code_signature() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientDownloadRequest::set_has_udif_code_signature() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientDownloadRequest::clear_has_udif_code_signature() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientDownloadRequest::clear_udif_code_signature() {
  udif_code_signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_udif_code_signature();
}
inline const ::std::string& ClientDownloadRequest::udif_code_signature() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadRequest.udif_code_signature)
  return udif_code_signature_.GetNoArena();
}
inline void ClientDownloadRequest::set_udif_code_signature(const ::std::string& value) {
  set_has_udif_code_signature();
  udif_code_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadRequest.udif_code_signature)
}
#if LANG_CXX11
inline void ClientDownloadRequest::set_udif_code_signature(::std::string&& value) {
  set_has_udif_code_signature();
  udif_code_signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadRequest.udif_code_signature)
}
#endif
inline void ClientDownloadRequest::set_udif_code_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_udif_code_signature();
  udif_code_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadRequest.udif_code_signature)
}
inline void ClientDownloadRequest::set_udif_code_signature(const void* value, size_t size) {
  set_has_udif_code_signature();
  udif_code_signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadRequest.udif_code_signature)
}
inline ::std::string* ClientDownloadRequest::mutable_udif_code_signature() {
  set_has_udif_code_signature();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadRequest.udif_code_signature)
  return udif_code_signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadRequest::release_udif_code_signature() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadRequest.udif_code_signature)
  clear_has_udif_code_signature();
  return udif_code_signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadRequest::set_allocated_udif_code_signature(::std::string* udif_code_signature) {
  if (udif_code_signature != NULL) {
    set_has_udif_code_signature();
  } else {
    clear_has_udif_code_signature();
  }
  udif_code_signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), udif_code_signature);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadRequest.udif_code_signature)
}

// -------------------------------------------------------------------

// ReferrerChainEntry_ServerRedirect

// optional string url = 1;
inline bool ReferrerChainEntry_ServerRedirect::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReferrerChainEntry_ServerRedirect::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReferrerChainEntry_ServerRedirect::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReferrerChainEntry_ServerRedirect::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& ReferrerChainEntry_ServerRedirect::url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ReferrerChainEntry.ServerRedirect.url)
  return url_.GetNoArena();
}
inline void ReferrerChainEntry_ServerRedirect::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ReferrerChainEntry.ServerRedirect.url)
}
#if LANG_CXX11
inline void ReferrerChainEntry_ServerRedirect::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ReferrerChainEntry.ServerRedirect.url)
}
#endif
inline void ReferrerChainEntry_ServerRedirect::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ReferrerChainEntry.ServerRedirect.url)
}
inline void ReferrerChainEntry_ServerRedirect::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ReferrerChainEntry.ServerRedirect.url)
}
inline ::std::string* ReferrerChainEntry_ServerRedirect::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ReferrerChainEntry.ServerRedirect.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReferrerChainEntry_ServerRedirect::release_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ReferrerChainEntry.ServerRedirect.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReferrerChainEntry_ServerRedirect::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ReferrerChainEntry.ServerRedirect.url)
}

// -------------------------------------------------------------------

// ReferrerChainEntry

// optional string url = 1;
inline bool ReferrerChainEntry::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReferrerChainEntry::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReferrerChainEntry::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReferrerChainEntry::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& ReferrerChainEntry::url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ReferrerChainEntry.url)
  return url_.GetNoArena();
}
inline void ReferrerChainEntry::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ReferrerChainEntry.url)
}
#if LANG_CXX11
inline void ReferrerChainEntry::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ReferrerChainEntry.url)
}
#endif
inline void ReferrerChainEntry::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ReferrerChainEntry.url)
}
inline void ReferrerChainEntry::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ReferrerChainEntry.url)
}
inline ::std::string* ReferrerChainEntry::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ReferrerChainEntry.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReferrerChainEntry::release_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ReferrerChainEntry.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReferrerChainEntry::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ReferrerChainEntry.url)
}

// optional string main_frame_url = 9;
inline bool ReferrerChainEntry::has_main_frame_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReferrerChainEntry::set_has_main_frame_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReferrerChainEntry::clear_has_main_frame_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReferrerChainEntry::clear_main_frame_url() {
  main_frame_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_main_frame_url();
}
inline const ::std::string& ReferrerChainEntry::main_frame_url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ReferrerChainEntry.main_frame_url)
  return main_frame_url_.GetNoArena();
}
inline void ReferrerChainEntry::set_main_frame_url(const ::std::string& value) {
  set_has_main_frame_url();
  main_frame_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ReferrerChainEntry.main_frame_url)
}
#if LANG_CXX11
inline void ReferrerChainEntry::set_main_frame_url(::std::string&& value) {
  set_has_main_frame_url();
  main_frame_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ReferrerChainEntry.main_frame_url)
}
#endif
inline void ReferrerChainEntry::set_main_frame_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_main_frame_url();
  main_frame_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ReferrerChainEntry.main_frame_url)
}
inline void ReferrerChainEntry::set_main_frame_url(const char* value, size_t size) {
  set_has_main_frame_url();
  main_frame_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ReferrerChainEntry.main_frame_url)
}
inline ::std::string* ReferrerChainEntry::mutable_main_frame_url() {
  set_has_main_frame_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ReferrerChainEntry.main_frame_url)
  return main_frame_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReferrerChainEntry::release_main_frame_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ReferrerChainEntry.main_frame_url)
  clear_has_main_frame_url();
  return main_frame_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReferrerChainEntry::set_allocated_main_frame_url(::std::string* main_frame_url) {
  if (main_frame_url != NULL) {
    set_has_main_frame_url();
  } else {
    clear_has_main_frame_url();
  }
  main_frame_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), main_frame_url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ReferrerChainEntry.main_frame_url)
}

// optional .safe_browsing.ReferrerChainEntry.URLType type = 2 [default = CLIENT_REDIRECT];
inline bool ReferrerChainEntry::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReferrerChainEntry::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReferrerChainEntry::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReferrerChainEntry::clear_type() {
  type_ = 4;
  clear_has_type();
}
inline ::safe_browsing::ReferrerChainEntry_URLType ReferrerChainEntry::type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ReferrerChainEntry.type)
  return static_cast< ::safe_browsing::ReferrerChainEntry_URLType >(type_);
}
inline void ReferrerChainEntry::set_type(::safe_browsing::ReferrerChainEntry_URLType value) {
  assert(::safe_browsing::ReferrerChainEntry_URLType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ReferrerChainEntry.type)
}

// repeated string ip_addresses = 3;
inline int ReferrerChainEntry::ip_addresses_size() const {
  return ip_addresses_.size();
}
inline void ReferrerChainEntry::clear_ip_addresses() {
  ip_addresses_.Clear();
}
inline const ::std::string& ReferrerChainEntry::ip_addresses(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ReferrerChainEntry.ip_addresses)
  return ip_addresses_.Get(index);
}
inline ::std::string* ReferrerChainEntry::mutable_ip_addresses(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ReferrerChainEntry.ip_addresses)
  return ip_addresses_.Mutable(index);
}
inline void ReferrerChainEntry::set_ip_addresses(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ReferrerChainEntry.ip_addresses)
  ip_addresses_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ReferrerChainEntry::set_ip_addresses(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ReferrerChainEntry.ip_addresses)
  ip_addresses_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ReferrerChainEntry::set_ip_addresses(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ip_addresses_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:safe_browsing.ReferrerChainEntry.ip_addresses)
}
inline void ReferrerChainEntry::set_ip_addresses(int index, const char* value, size_t size) {
  ip_addresses_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ReferrerChainEntry.ip_addresses)
}
inline ::std::string* ReferrerChainEntry::add_ip_addresses() {
  // @@protoc_insertion_point(field_add_mutable:safe_browsing.ReferrerChainEntry.ip_addresses)
  return ip_addresses_.Add();
}
inline void ReferrerChainEntry::add_ip_addresses(const ::std::string& value) {
  ip_addresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ReferrerChainEntry.ip_addresses)
}
#if LANG_CXX11
inline void ReferrerChainEntry::add_ip_addresses(::std::string&& value) {
  ip_addresses_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:safe_browsing.ReferrerChainEntry.ip_addresses)
}
#endif
inline void ReferrerChainEntry::add_ip_addresses(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ip_addresses_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:safe_browsing.ReferrerChainEntry.ip_addresses)
}
inline void ReferrerChainEntry::add_ip_addresses(const char* value, size_t size) {
  ip_addresses_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:safe_browsing.ReferrerChainEntry.ip_addresses)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReferrerChainEntry::ip_addresses() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ReferrerChainEntry.ip_addresses)
  return ip_addresses_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ReferrerChainEntry::mutable_ip_addresses() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ReferrerChainEntry.ip_addresses)
  return &ip_addresses_;
}

// optional string referrer_url = 4;
inline bool ReferrerChainEntry::has_referrer_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReferrerChainEntry::set_has_referrer_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReferrerChainEntry::clear_has_referrer_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReferrerChainEntry::clear_referrer_url() {
  referrer_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_referrer_url();
}
inline const ::std::string& ReferrerChainEntry::referrer_url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ReferrerChainEntry.referrer_url)
  return referrer_url_.GetNoArena();
}
inline void ReferrerChainEntry::set_referrer_url(const ::std::string& value) {
  set_has_referrer_url();
  referrer_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ReferrerChainEntry.referrer_url)
}
#if LANG_CXX11
inline void ReferrerChainEntry::set_referrer_url(::std::string&& value) {
  set_has_referrer_url();
  referrer_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ReferrerChainEntry.referrer_url)
}
#endif
inline void ReferrerChainEntry::set_referrer_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_referrer_url();
  referrer_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ReferrerChainEntry.referrer_url)
}
inline void ReferrerChainEntry::set_referrer_url(const char* value, size_t size) {
  set_has_referrer_url();
  referrer_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ReferrerChainEntry.referrer_url)
}
inline ::std::string* ReferrerChainEntry::mutable_referrer_url() {
  set_has_referrer_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ReferrerChainEntry.referrer_url)
  return referrer_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReferrerChainEntry::release_referrer_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ReferrerChainEntry.referrer_url)
  clear_has_referrer_url();
  return referrer_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReferrerChainEntry::set_allocated_referrer_url(::std::string* referrer_url) {
  if (referrer_url != NULL) {
    set_has_referrer_url();
  } else {
    clear_has_referrer_url();
  }
  referrer_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referrer_url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ReferrerChainEntry.referrer_url)
}

// optional string referrer_main_frame_url = 5;
inline bool ReferrerChainEntry::has_referrer_main_frame_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReferrerChainEntry::set_has_referrer_main_frame_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReferrerChainEntry::clear_has_referrer_main_frame_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReferrerChainEntry::clear_referrer_main_frame_url() {
  referrer_main_frame_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_referrer_main_frame_url();
}
inline const ::std::string& ReferrerChainEntry::referrer_main_frame_url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ReferrerChainEntry.referrer_main_frame_url)
  return referrer_main_frame_url_.GetNoArena();
}
inline void ReferrerChainEntry::set_referrer_main_frame_url(const ::std::string& value) {
  set_has_referrer_main_frame_url();
  referrer_main_frame_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ReferrerChainEntry.referrer_main_frame_url)
}
#if LANG_CXX11
inline void ReferrerChainEntry::set_referrer_main_frame_url(::std::string&& value) {
  set_has_referrer_main_frame_url();
  referrer_main_frame_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ReferrerChainEntry.referrer_main_frame_url)
}
#endif
inline void ReferrerChainEntry::set_referrer_main_frame_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_referrer_main_frame_url();
  referrer_main_frame_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ReferrerChainEntry.referrer_main_frame_url)
}
inline void ReferrerChainEntry::set_referrer_main_frame_url(const char* value, size_t size) {
  set_has_referrer_main_frame_url();
  referrer_main_frame_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ReferrerChainEntry.referrer_main_frame_url)
}
inline ::std::string* ReferrerChainEntry::mutable_referrer_main_frame_url() {
  set_has_referrer_main_frame_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ReferrerChainEntry.referrer_main_frame_url)
  return referrer_main_frame_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReferrerChainEntry::release_referrer_main_frame_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ReferrerChainEntry.referrer_main_frame_url)
  clear_has_referrer_main_frame_url();
  return referrer_main_frame_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReferrerChainEntry::set_allocated_referrer_main_frame_url(::std::string* referrer_main_frame_url) {
  if (referrer_main_frame_url != NULL) {
    set_has_referrer_main_frame_url();
  } else {
    clear_has_referrer_main_frame_url();
  }
  referrer_main_frame_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referrer_main_frame_url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ReferrerChainEntry.referrer_main_frame_url)
}

// optional bool is_retargeting = 6;
inline bool ReferrerChainEntry::has_is_retargeting() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReferrerChainEntry::set_has_is_retargeting() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReferrerChainEntry::clear_has_is_retargeting() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReferrerChainEntry::clear_is_retargeting() {
  is_retargeting_ = false;
  clear_has_is_retargeting();
}
inline bool ReferrerChainEntry::is_retargeting() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ReferrerChainEntry.is_retargeting)
  return is_retargeting_;
}
inline void ReferrerChainEntry::set_is_retargeting(bool value) {
  set_has_is_retargeting();
  is_retargeting_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ReferrerChainEntry.is_retargeting)
}

// optional double navigation_time_msec = 7;
inline bool ReferrerChainEntry::has_navigation_time_msec() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReferrerChainEntry::set_has_navigation_time_msec() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReferrerChainEntry::clear_has_navigation_time_msec() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReferrerChainEntry::clear_navigation_time_msec() {
  navigation_time_msec_ = 0;
  clear_has_navigation_time_msec();
}
inline double ReferrerChainEntry::navigation_time_msec() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ReferrerChainEntry.navigation_time_msec)
  return navigation_time_msec_;
}
inline void ReferrerChainEntry::set_navigation_time_msec(double value) {
  set_has_navigation_time_msec();
  navigation_time_msec_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ReferrerChainEntry.navigation_time_msec)
}

// repeated .safe_browsing.ReferrerChainEntry.ServerRedirect server_redirect_chain = 8;
inline int ReferrerChainEntry::server_redirect_chain_size() const {
  return server_redirect_chain_.size();
}
inline void ReferrerChainEntry::clear_server_redirect_chain() {
  server_redirect_chain_.Clear();
}
inline const ::safe_browsing::ReferrerChainEntry_ServerRedirect& ReferrerChainEntry::server_redirect_chain(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ReferrerChainEntry.server_redirect_chain)
  return server_redirect_chain_.Get(index);
}
inline ::safe_browsing::ReferrerChainEntry_ServerRedirect* ReferrerChainEntry::mutable_server_redirect_chain(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ReferrerChainEntry.server_redirect_chain)
  return server_redirect_chain_.Mutable(index);
}
inline ::safe_browsing::ReferrerChainEntry_ServerRedirect* ReferrerChainEntry::add_server_redirect_chain() {
  // @@protoc_insertion_point(field_add:safe_browsing.ReferrerChainEntry.server_redirect_chain)
  return server_redirect_chain_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry_ServerRedirect >*
ReferrerChainEntry::mutable_server_redirect_chain() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ReferrerChainEntry.server_redirect_chain)
  return &server_redirect_chain_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ReferrerChainEntry_ServerRedirect >&
ReferrerChainEntry::server_redirect_chain() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ReferrerChainEntry.server_redirect_chain)
  return server_redirect_chain_;
}

// -------------------------------------------------------------------

// ClientDownloadResponse_MoreInfo

// optional string description = 1;
inline bool ClientDownloadResponse_MoreInfo::has_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadResponse_MoreInfo::set_has_description() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadResponse_MoreInfo::clear_has_description() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadResponse_MoreInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& ClientDownloadResponse_MoreInfo::description() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadResponse.MoreInfo.description)
  return description_.GetNoArena();
}
inline void ClientDownloadResponse_MoreInfo::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadResponse.MoreInfo.description)
}
#if LANG_CXX11
inline void ClientDownloadResponse_MoreInfo::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadResponse.MoreInfo.description)
}
#endif
inline void ClientDownloadResponse_MoreInfo::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadResponse.MoreInfo.description)
}
inline void ClientDownloadResponse_MoreInfo::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadResponse.MoreInfo.description)
}
inline ::std::string* ClientDownloadResponse_MoreInfo::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadResponse.MoreInfo.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadResponse_MoreInfo::release_description() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadResponse.MoreInfo.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadResponse_MoreInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadResponse.MoreInfo.description)
}

// optional string url = 2;
inline bool ClientDownloadResponse_MoreInfo::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientDownloadResponse_MoreInfo::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientDownloadResponse_MoreInfo::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientDownloadResponse_MoreInfo::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& ClientDownloadResponse_MoreInfo::url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadResponse.MoreInfo.url)
  return url_.GetNoArena();
}
inline void ClientDownloadResponse_MoreInfo::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadResponse.MoreInfo.url)
}
#if LANG_CXX11
inline void ClientDownloadResponse_MoreInfo::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadResponse.MoreInfo.url)
}
#endif
inline void ClientDownloadResponse_MoreInfo::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadResponse.MoreInfo.url)
}
inline void ClientDownloadResponse_MoreInfo::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadResponse.MoreInfo.url)
}
inline ::std::string* ClientDownloadResponse_MoreInfo::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadResponse.MoreInfo.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadResponse_MoreInfo::release_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadResponse.MoreInfo.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadResponse_MoreInfo::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadResponse.MoreInfo.url)
}

// -------------------------------------------------------------------

// ClientDownloadResponse

// optional .safe_browsing.ClientDownloadResponse.Verdict verdict = 1 [default = SAFE];
inline bool ClientDownloadResponse::has_verdict() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientDownloadResponse::set_has_verdict() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientDownloadResponse::clear_has_verdict() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientDownloadResponse::clear_verdict() {
  verdict_ = 0;
  clear_has_verdict();
}
inline ::safe_browsing::ClientDownloadResponse_Verdict ClientDownloadResponse::verdict() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadResponse.verdict)
  return static_cast< ::safe_browsing::ClientDownloadResponse_Verdict >(verdict_);
}
inline void ClientDownloadResponse::set_verdict(::safe_browsing::ClientDownloadResponse_Verdict value) {
  assert(::safe_browsing::ClientDownloadResponse_Verdict_IsValid(value));
  set_has_verdict();
  verdict_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadResponse.verdict)
}

// optional .safe_browsing.ClientDownloadResponse.MoreInfo more_info = 2;
inline bool ClientDownloadResponse::has_more_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientDownloadResponse::set_has_more_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientDownloadResponse::clear_has_more_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientDownloadResponse::clear_more_info() {
  if (more_info_ != NULL) more_info_->::safe_browsing::ClientDownloadResponse_MoreInfo::Clear();
  clear_has_more_info();
}
inline const ::safe_browsing::ClientDownloadResponse_MoreInfo& ClientDownloadResponse::more_info() const {
  const ::safe_browsing::ClientDownloadResponse_MoreInfo* p = more_info_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadResponse.more_info)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadResponse_MoreInfo*>(
      &::safe_browsing::_ClientDownloadResponse_MoreInfo_default_instance_);
}
inline ::safe_browsing::ClientDownloadResponse_MoreInfo* ClientDownloadResponse::mutable_more_info() {
  set_has_more_info();
  if (more_info_ == NULL) {
    more_info_ = new ::safe_browsing::ClientDownloadResponse_MoreInfo;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadResponse.more_info)
  return more_info_;
}
inline ::safe_browsing::ClientDownloadResponse_MoreInfo* ClientDownloadResponse::release_more_info() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadResponse.more_info)
  clear_has_more_info();
  ::safe_browsing::ClientDownloadResponse_MoreInfo* temp = more_info_;
  more_info_ = NULL;
  return temp;
}
inline void ClientDownloadResponse::set_allocated_more_info(::safe_browsing::ClientDownloadResponse_MoreInfo* more_info) {
  delete more_info_;
  more_info_ = more_info;
  if (more_info) {
    set_has_more_info();
  } else {
    clear_has_more_info();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadResponse.more_info)
}

// optional bytes token = 3;
inline bool ClientDownloadResponse::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadResponse::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadResponse::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadResponse::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& ClientDownloadResponse::token() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadResponse.token)
  return token_.GetNoArena();
}
inline void ClientDownloadResponse::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadResponse.token)
}
#if LANG_CXX11
inline void ClientDownloadResponse::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadResponse.token)
}
#endif
inline void ClientDownloadResponse::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadResponse.token)
}
inline void ClientDownloadResponse::set_token(const void* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadResponse.token)
}
inline ::std::string* ClientDownloadResponse::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadResponse.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadResponse::release_token() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadResponse.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadResponse::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadResponse.token)
}

// optional bool upload = 5;
inline bool ClientDownloadResponse::has_upload() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientDownloadResponse::set_has_upload() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientDownloadResponse::clear_has_upload() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientDownloadResponse::clear_upload() {
  upload_ = false;
  clear_has_upload();
}
inline bool ClientDownloadResponse::upload() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadResponse.upload)
  return upload_;
}
inline void ClientDownloadResponse::set_upload(bool value) {
  set_has_upload();
  upload_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadResponse.upload)
}

// -------------------------------------------------------------------

// ClientDownloadReport_UserInformation

// optional string email = 1;
inline bool ClientDownloadReport_UserInformation::has_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadReport_UserInformation::set_has_email() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadReport_UserInformation::clear_has_email() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadReport_UserInformation::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& ClientDownloadReport_UserInformation::email() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadReport.UserInformation.email)
  return email_.GetNoArena();
}
inline void ClientDownloadReport_UserInformation::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadReport.UserInformation.email)
}
#if LANG_CXX11
inline void ClientDownloadReport_UserInformation::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadReport.UserInformation.email)
}
#endif
inline void ClientDownloadReport_UserInformation::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadReport.UserInformation.email)
}
inline void ClientDownloadReport_UserInformation::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadReport.UserInformation.email)
}
inline ::std::string* ClientDownloadReport_UserInformation::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadReport.UserInformation.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadReport_UserInformation::release_email() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadReport.UserInformation.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadReport_UserInformation::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadReport.UserInformation.email)
}

// -------------------------------------------------------------------

// ClientDownloadReport

// optional .safe_browsing.ClientDownloadReport.Reason reason = 1;
inline bool ClientDownloadReport::has_reason() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientDownloadReport::set_has_reason() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientDownloadReport::clear_has_reason() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientDownloadReport::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::safe_browsing::ClientDownloadReport_Reason ClientDownloadReport::reason() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadReport.reason)
  return static_cast< ::safe_browsing::ClientDownloadReport_Reason >(reason_);
}
inline void ClientDownloadReport::set_reason(::safe_browsing::ClientDownloadReport_Reason value) {
  assert(::safe_browsing::ClientDownloadReport_Reason_IsValid(value));
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadReport.reason)
}

// optional .safe_browsing.ClientDownloadRequest download_request = 2;
inline bool ClientDownloadReport::has_download_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientDownloadReport::set_has_download_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientDownloadReport::clear_has_download_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientDownloadReport::clear_download_request() {
  if (download_request_ != NULL) download_request_->::safe_browsing::ClientDownloadRequest::Clear();
  clear_has_download_request();
}
inline const ::safe_browsing::ClientDownloadRequest& ClientDownloadReport::download_request() const {
  const ::safe_browsing::ClientDownloadRequest* p = download_request_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadReport.download_request)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest*>(
      &::safe_browsing::_ClientDownloadRequest_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest* ClientDownloadReport::mutable_download_request() {
  set_has_download_request();
  if (download_request_ == NULL) {
    download_request_ = new ::safe_browsing::ClientDownloadRequest;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadReport.download_request)
  return download_request_;
}
inline ::safe_browsing::ClientDownloadRequest* ClientDownloadReport::release_download_request() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadReport.download_request)
  clear_has_download_request();
  ::safe_browsing::ClientDownloadRequest* temp = download_request_;
  download_request_ = NULL;
  return temp;
}
inline void ClientDownloadReport::set_allocated_download_request(::safe_browsing::ClientDownloadRequest* download_request) {
  delete download_request_;
  download_request_ = download_request;
  if (download_request) {
    set_has_download_request();
  } else {
    clear_has_download_request();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadReport.download_request)
}

// optional .safe_browsing.ClientDownloadReport.UserInformation user_information = 3;
inline bool ClientDownloadReport::has_user_information() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientDownloadReport::set_has_user_information() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientDownloadReport::clear_has_user_information() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientDownloadReport::clear_user_information() {
  if (user_information_ != NULL) user_information_->::safe_browsing::ClientDownloadReport_UserInformation::Clear();
  clear_has_user_information();
}
inline const ::safe_browsing::ClientDownloadReport_UserInformation& ClientDownloadReport::user_information() const {
  const ::safe_browsing::ClientDownloadReport_UserInformation* p = user_information_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadReport.user_information)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadReport_UserInformation*>(
      &::safe_browsing::_ClientDownloadReport_UserInformation_default_instance_);
}
inline ::safe_browsing::ClientDownloadReport_UserInformation* ClientDownloadReport::mutable_user_information() {
  set_has_user_information();
  if (user_information_ == NULL) {
    user_information_ = new ::safe_browsing::ClientDownloadReport_UserInformation;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadReport.user_information)
  return user_information_;
}
inline ::safe_browsing::ClientDownloadReport_UserInformation* ClientDownloadReport::release_user_information() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadReport.user_information)
  clear_has_user_information();
  ::safe_browsing::ClientDownloadReport_UserInformation* temp = user_information_;
  user_information_ = NULL;
  return temp;
}
inline void ClientDownloadReport::set_allocated_user_information(::safe_browsing::ClientDownloadReport_UserInformation* user_information) {
  delete user_information_;
  user_information_ = user_information;
  if (user_information) {
    set_has_user_information();
  } else {
    clear_has_user_information();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadReport.user_information)
}

// optional bytes comment = 4;
inline bool ClientDownloadReport::has_comment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientDownloadReport::set_has_comment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientDownloadReport::clear_has_comment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientDownloadReport::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
inline const ::std::string& ClientDownloadReport::comment() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadReport.comment)
  return comment_.GetNoArena();
}
inline void ClientDownloadReport::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientDownloadReport.comment)
}
#if LANG_CXX11
inline void ClientDownloadReport::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientDownloadReport.comment)
}
#endif
inline void ClientDownloadReport::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientDownloadReport.comment)
}
inline void ClientDownloadReport::set_comment(const void* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientDownloadReport.comment)
}
inline ::std::string* ClientDownloadReport::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadReport.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientDownloadReport::release_comment() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadReport.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientDownloadReport::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadReport.comment)
}

// optional .safe_browsing.ClientDownloadResponse download_response = 5;
inline bool ClientDownloadReport::has_download_response() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientDownloadReport::set_has_download_response() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientDownloadReport::clear_has_download_response() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientDownloadReport::clear_download_response() {
  if (download_response_ != NULL) download_response_->::safe_browsing::ClientDownloadResponse::Clear();
  clear_has_download_response();
}
inline const ::safe_browsing::ClientDownloadResponse& ClientDownloadReport::download_response() const {
  const ::safe_browsing::ClientDownloadResponse* p = download_response_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientDownloadReport.download_response)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadResponse*>(
      &::safe_browsing::_ClientDownloadResponse_default_instance_);
}
inline ::safe_browsing::ClientDownloadResponse* ClientDownloadReport::mutable_download_response() {
  set_has_download_response();
  if (download_response_ == NULL) {
    download_response_ = new ::safe_browsing::ClientDownloadResponse;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientDownloadReport.download_response)
  return download_response_;
}
inline ::safe_browsing::ClientDownloadResponse* ClientDownloadReport::release_download_response() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientDownloadReport.download_response)
  clear_has_download_response();
  ::safe_browsing::ClientDownloadResponse* temp = download_response_;
  download_response_ = NULL;
  return temp;
}
inline void ClientDownloadReport::set_allocated_download_response(::safe_browsing::ClientDownloadResponse* download_response) {
  delete download_response_;
  download_response_ = download_response;
  if (download_response) {
    set_has_download_response();
  } else {
    clear_has_download_response();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientDownloadReport.download_response)
}

// -------------------------------------------------------------------

// ClientUploadResponse

// optional .safe_browsing.ClientUploadResponse.UploadStatus status = 1;
inline bool ClientUploadResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientUploadResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientUploadResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientUploadResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::safe_browsing::ClientUploadResponse_UploadStatus ClientUploadResponse::status() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientUploadResponse.status)
  return static_cast< ::safe_browsing::ClientUploadResponse_UploadStatus >(status_);
}
inline void ClientUploadResponse::set_status(::safe_browsing::ClientUploadResponse_UploadStatus value) {
  assert(::safe_browsing::ClientUploadResponse_UploadStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientUploadResponse.status)
}

// optional string permalink = 2;
inline bool ClientUploadResponse::has_permalink() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientUploadResponse::set_has_permalink() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientUploadResponse::clear_has_permalink() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientUploadResponse::clear_permalink() {
  permalink_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_permalink();
}
inline const ::std::string& ClientUploadResponse::permalink() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientUploadResponse.permalink)
  return permalink_.GetNoArena();
}
inline void ClientUploadResponse::set_permalink(const ::std::string& value) {
  set_has_permalink();
  permalink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientUploadResponse.permalink)
}
#if LANG_CXX11
inline void ClientUploadResponse::set_permalink(::std::string&& value) {
  set_has_permalink();
  permalink_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientUploadResponse.permalink)
}
#endif
inline void ClientUploadResponse::set_permalink(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_permalink();
  permalink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientUploadResponse.permalink)
}
inline void ClientUploadResponse::set_permalink(const char* value, size_t size) {
  set_has_permalink();
  permalink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientUploadResponse.permalink)
}
inline ::std::string* ClientUploadResponse::mutable_permalink() {
  set_has_permalink();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientUploadResponse.permalink)
  return permalink_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientUploadResponse::release_permalink() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientUploadResponse.permalink)
  clear_has_permalink();
  return permalink_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientUploadResponse::set_allocated_permalink(::std::string* permalink) {
  if (permalink != NULL) {
    set_has_permalink();
  } else {
    clear_has_permalink();
  }
  permalink_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), permalink);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientUploadResponse.permalink)
}

// -------------------------------------------------------------------

// ClientIncidentReport_IncidentData_TrackedPreferenceIncident

// optional string path = 1;
inline bool ClientIncidentReport_IncidentData_TrackedPreferenceIncident::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& ClientIncidentReport_IncidentData_TrackedPreferenceIncident::path() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.path)
  return path_.GetNoArena();
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.path)
}
#if LANG_CXX11
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.path)
}
#endif
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.path)
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.path)
}
inline ::std::string* ClientIncidentReport_IncidentData_TrackedPreferenceIncident::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_IncidentData_TrackedPreferenceIncident::release_path() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.path)
}

// optional string atomic_value = 2;
inline bool ClientIncidentReport_IncidentData_TrackedPreferenceIncident::has_atomic_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_has_atomic_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::clear_has_atomic_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::clear_atomic_value() {
  atomic_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_atomic_value();
}
inline const ::std::string& ClientIncidentReport_IncidentData_TrackedPreferenceIncident::atomic_value() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.atomic_value)
  return atomic_value_.GetNoArena();
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_atomic_value(const ::std::string& value) {
  set_has_atomic_value();
  atomic_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.atomic_value)
}
#if LANG_CXX11
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_atomic_value(::std::string&& value) {
  set_has_atomic_value();
  atomic_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.atomic_value)
}
#endif
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_atomic_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_atomic_value();
  atomic_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.atomic_value)
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_atomic_value(const char* value, size_t size) {
  set_has_atomic_value();
  atomic_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.atomic_value)
}
inline ::std::string* ClientIncidentReport_IncidentData_TrackedPreferenceIncident::mutable_atomic_value() {
  set_has_atomic_value();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.atomic_value)
  return atomic_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_IncidentData_TrackedPreferenceIncident::release_atomic_value() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.atomic_value)
  clear_has_atomic_value();
  return atomic_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_allocated_atomic_value(::std::string* atomic_value) {
  if (atomic_value != NULL) {
    set_has_atomic_value();
  } else {
    clear_has_atomic_value();
  }
  atomic_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), atomic_value);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.atomic_value)
}

// repeated string split_key = 3;
inline int ClientIncidentReport_IncidentData_TrackedPreferenceIncident::split_key_size() const {
  return split_key_.size();
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::clear_split_key() {
  split_key_.Clear();
}
inline const ::std::string& ClientIncidentReport_IncidentData_TrackedPreferenceIncident::split_key(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
  return split_key_.Get(index);
}
inline ::std::string* ClientIncidentReport_IncidentData_TrackedPreferenceIncident::mutable_split_key(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
  return split_key_.Mutable(index);
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_split_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
  split_key_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_split_key(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
  split_key_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_split_key(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  split_key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_split_key(int index, const char* value, size_t size) {
  split_key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
}
inline ::std::string* ClientIncidentReport_IncidentData_TrackedPreferenceIncident::add_split_key() {
  // @@protoc_insertion_point(field_add_mutable:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
  return split_key_.Add();
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::add_split_key(const ::std::string& value) {
  split_key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
}
#if LANG_CXX11
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::add_split_key(::std::string&& value) {
  split_key_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
}
#endif
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::add_split_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  split_key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::add_split_key(const char* value, size_t size) {
  split_key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientIncidentReport_IncidentData_TrackedPreferenceIncident::split_key() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
  return split_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientIncidentReport_IncidentData_TrackedPreferenceIncident::mutable_split_key() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.split_key)
  return &split_key_;
}

// optional .safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.ValueState value_state = 4;
inline bool ClientIncidentReport_IncidentData_TrackedPreferenceIncident::has_value_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_has_value_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::clear_has_value_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::clear_value_state() {
  value_state_ = 0;
  clear_has_value_state();
}
inline ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState ClientIncidentReport_IncidentData_TrackedPreferenceIncident::value_state() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.value_state)
  return static_cast< ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState >(value_state_);
}
inline void ClientIncidentReport_IncidentData_TrackedPreferenceIncident::set_value_state(::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState value) {
  assert(::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState_IsValid(value));
  set_has_value_state();
  value_state_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident.value_state)
}

// -------------------------------------------------------------------

// ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile

// optional string relative_path = 1;
inline bool ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::has_relative_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::set_has_relative_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::clear_has_relative_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::clear_relative_path() {
  relative_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_relative_path();
}
inline const ::std::string& ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::relative_path() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.relative_path)
  return relative_path_.GetNoArena();
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::set_relative_path(const ::std::string& value) {
  set_has_relative_path();
  relative_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.relative_path)
}
#if LANG_CXX11
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::set_relative_path(::std::string&& value) {
  set_has_relative_path();
  relative_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.relative_path)
}
#endif
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::set_relative_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_relative_path();
  relative_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.relative_path)
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::set_relative_path(const char* value, size_t size) {
  set_has_relative_path();
  relative_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.relative_path)
}
inline ::std::string* ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::mutable_relative_path() {
  set_has_relative_path();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.relative_path)
  return relative_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::release_relative_path() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.relative_path)
  clear_has_relative_path();
  return relative_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::set_allocated_relative_path(::std::string* relative_path) {
  if (relative_path != NULL) {
    set_has_relative_path();
  } else {
    clear_has_relative_path();
  }
  relative_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relative_path);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.relative_path)
}

// optional .safe_browsing.ClientDownloadRequest.SignatureInfo signature = 2;
inline bool ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::set_has_signature() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::clear_has_signature() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::clear_signature() {
  if (signature_ != NULL) signature_->::safe_browsing::ClientDownloadRequest_SignatureInfo::Clear();
  clear_has_signature();
}
inline const ::safe_browsing::ClientDownloadRequest_SignatureInfo& ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::signature() const {
  const ::safe_browsing::ClientDownloadRequest_SignatureInfo* p = signature_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.signature)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest_SignatureInfo*>(
      &::safe_browsing::_ClientDownloadRequest_SignatureInfo_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest_SignatureInfo* ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::mutable_signature() {
  set_has_signature();
  if (signature_ == NULL) {
    signature_ = new ::safe_browsing::ClientDownloadRequest_SignatureInfo;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.signature)
  return signature_;
}
inline ::safe_browsing::ClientDownloadRequest_SignatureInfo* ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::release_signature() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.signature)
  clear_has_signature();
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* temp = signature_;
  signature_ = NULL;
  return temp;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::set_allocated_signature(::safe_browsing::ClientDownloadRequest_SignatureInfo* signature) {
  delete signature_;
  signature_ = signature;
  if (signature) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.signature)
}

// optional .safe_browsing.ClientDownloadRequest.ImageHeaders image_headers = 3;
inline bool ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::has_image_headers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::set_has_image_headers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::clear_has_image_headers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::clear_image_headers() {
  if (image_headers_ != NULL) image_headers_->::safe_browsing::ClientDownloadRequest_ImageHeaders::Clear();
  clear_has_image_headers();
}
inline const ::safe_browsing::ClientDownloadRequest_ImageHeaders& ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::image_headers() const {
  const ::safe_browsing::ClientDownloadRequest_ImageHeaders* p = image_headers_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.image_headers)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest_ImageHeaders*>(
      &::safe_browsing::_ClientDownloadRequest_ImageHeaders_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest_ImageHeaders* ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::mutable_image_headers() {
  set_has_image_headers();
  if (image_headers_ == NULL) {
    image_headers_ = new ::safe_browsing::ClientDownloadRequest_ImageHeaders;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.image_headers)
  return image_headers_;
}
inline ::safe_browsing::ClientDownloadRequest_ImageHeaders* ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::release_image_headers() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.image_headers)
  clear_has_image_headers();
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* temp = image_headers_;
  image_headers_ = NULL;
  return temp;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile::set_allocated_image_headers(::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers) {
  delete image_headers_;
  image_headers_ = image_headers;
  if (image_headers) {
    set_has_image_headers();
  } else {
    clear_has_image_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile.image_headers)
}

// -------------------------------------------------------------------

// ClientIncidentReport_IncidentData_BinaryIntegrityIncident

// optional string file_basename = 1;
inline bool ClientIncidentReport_IncidentData_BinaryIntegrityIncident::has_file_basename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::set_has_file_basename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::clear_has_file_basename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::clear_file_basename() {
  file_basename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_basename();
}
inline const ::std::string& ClientIncidentReport_IncidentData_BinaryIntegrityIncident::file_basename() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.file_basename)
  return file_basename_.GetNoArena();
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::set_file_basename(const ::std::string& value) {
  set_has_file_basename();
  file_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.file_basename)
}
#if LANG_CXX11
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::set_file_basename(::std::string&& value) {
  set_has_file_basename();
  file_basename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.file_basename)
}
#endif
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::set_file_basename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_basename();
  file_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.file_basename)
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::set_file_basename(const char* value, size_t size) {
  set_has_file_basename();
  file_basename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.file_basename)
}
inline ::std::string* ClientIncidentReport_IncidentData_BinaryIntegrityIncident::mutable_file_basename() {
  set_has_file_basename();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.file_basename)
  return file_basename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_IncidentData_BinaryIntegrityIncident::release_file_basename() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.file_basename)
  clear_has_file_basename();
  return file_basename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::set_allocated_file_basename(::std::string* file_basename) {
  if (file_basename != NULL) {
    set_has_file_basename();
  } else {
    clear_has_file_basename();
  }
  file_basename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_basename);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.file_basename)
}

// optional .safe_browsing.ClientDownloadRequest.SignatureInfo signature = 2;
inline bool ClientIncidentReport_IncidentData_BinaryIntegrityIncident::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::set_has_signature() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::clear_has_signature() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::clear_signature() {
  if (signature_ != NULL) signature_->::safe_browsing::ClientDownloadRequest_SignatureInfo::Clear();
  clear_has_signature();
}
inline const ::safe_browsing::ClientDownloadRequest_SignatureInfo& ClientIncidentReport_IncidentData_BinaryIntegrityIncident::signature() const {
  const ::safe_browsing::ClientDownloadRequest_SignatureInfo* p = signature_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.signature)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest_SignatureInfo*>(
      &::safe_browsing::_ClientDownloadRequest_SignatureInfo_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest_SignatureInfo* ClientIncidentReport_IncidentData_BinaryIntegrityIncident::mutable_signature() {
  set_has_signature();
  if (signature_ == NULL) {
    signature_ = new ::safe_browsing::ClientDownloadRequest_SignatureInfo;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.signature)
  return signature_;
}
inline ::safe_browsing::ClientDownloadRequest_SignatureInfo* ClientIncidentReport_IncidentData_BinaryIntegrityIncident::release_signature() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.signature)
  clear_has_signature();
  ::safe_browsing::ClientDownloadRequest_SignatureInfo* temp = signature_;
  signature_ = NULL;
  return temp;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::set_allocated_signature(::safe_browsing::ClientDownloadRequest_SignatureInfo* signature) {
  delete signature_;
  signature_ = signature;
  if (signature) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.signature)
}

// optional .safe_browsing.ClientDownloadRequest.ImageHeaders image_headers = 3;
inline bool ClientIncidentReport_IncidentData_BinaryIntegrityIncident::has_image_headers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::set_has_image_headers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::clear_has_image_headers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::clear_image_headers() {
  if (image_headers_ != NULL) image_headers_->::safe_browsing::ClientDownloadRequest_ImageHeaders::Clear();
  clear_has_image_headers();
}
inline const ::safe_browsing::ClientDownloadRequest_ImageHeaders& ClientIncidentReport_IncidentData_BinaryIntegrityIncident::image_headers() const {
  const ::safe_browsing::ClientDownloadRequest_ImageHeaders* p = image_headers_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.image_headers)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest_ImageHeaders*>(
      &::safe_browsing::_ClientDownloadRequest_ImageHeaders_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest_ImageHeaders* ClientIncidentReport_IncidentData_BinaryIntegrityIncident::mutable_image_headers() {
  set_has_image_headers();
  if (image_headers_ == NULL) {
    image_headers_ = new ::safe_browsing::ClientDownloadRequest_ImageHeaders;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.image_headers)
  return image_headers_;
}
inline ::safe_browsing::ClientDownloadRequest_ImageHeaders* ClientIncidentReport_IncidentData_BinaryIntegrityIncident::release_image_headers() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.image_headers)
  clear_has_image_headers();
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* temp = image_headers_;
  image_headers_ = NULL;
  return temp;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::set_allocated_image_headers(::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers) {
  delete image_headers_;
  image_headers_ = image_headers;
  if (image_headers) {
    set_has_image_headers();
  } else {
    clear_has_image_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.image_headers)
}

// optional int32 sec_error = 4;
inline bool ClientIncidentReport_IncidentData_BinaryIntegrityIncident::has_sec_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::set_has_sec_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::clear_has_sec_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::clear_sec_error() {
  sec_error_ = 0;
  clear_has_sec_error();
}
inline ::google::protobuf::int32 ClientIncidentReport_IncidentData_BinaryIntegrityIncident::sec_error() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.sec_error)
  return sec_error_;
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::set_sec_error(::google::protobuf::int32 value) {
  set_has_sec_error();
  sec_error_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.sec_error)
}

// repeated .safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.ContainedFile contained_file = 5;
inline int ClientIncidentReport_IncidentData_BinaryIntegrityIncident::contained_file_size() const {
  return contained_file_.size();
}
inline void ClientIncidentReport_IncidentData_BinaryIntegrityIncident::clear_contained_file() {
  contained_file_.Clear();
}
inline const ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile& ClientIncidentReport_IncidentData_BinaryIntegrityIncident::contained_file(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.contained_file)
  return contained_file_.Get(index);
}
inline ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile* ClientIncidentReport_IncidentData_BinaryIntegrityIncident::mutable_contained_file(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.contained_file)
  return contained_file_.Mutable(index);
}
inline ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile* ClientIncidentReport_IncidentData_BinaryIntegrityIncident::add_contained_file() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.contained_file)
  return contained_file_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile >*
ClientIncidentReport_IncidentData_BinaryIntegrityIncident::mutable_contained_file() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.contained_file)
  return &contained_file_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident_ContainedFile >&
ClientIncidentReport_IncidentData_BinaryIntegrityIncident::contained_file() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident.contained_file)
  return contained_file_;
}

// -------------------------------------------------------------------

// ClientIncidentReport_IncidentData_ResourceRequestIncident

// optional bytes digest = 1;
inline bool ClientIncidentReport_IncidentData_ResourceRequestIncident::has_digest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_has_digest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::clear_has_digest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_digest();
}
inline const ::std::string& ClientIncidentReport_IncidentData_ResourceRequestIncident::digest() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.digest)
  return digest_.GetNoArena();
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_digest(const ::std::string& value) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.digest)
}
#if LANG_CXX11
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_digest(::std::string&& value) {
  set_has_digest();
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.digest)
}
#endif
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_digest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.digest)
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_digest(const void* value, size_t size) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.digest)
}
inline ::std::string* ClientIncidentReport_IncidentData_ResourceRequestIncident::mutable_digest() {
  set_has_digest();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_IncidentData_ResourceRequestIncident::release_digest() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.digest)
  clear_has_digest();
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_allocated_digest(::std::string* digest) {
  if (digest != NULL) {
    set_has_digest();
  } else {
    clear_has_digest();
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.digest)
}

// optional string origin = 2;
inline bool ClientIncidentReport_IncidentData_ResourceRequestIncident::has_origin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_has_origin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::clear_has_origin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::clear_origin() {
  origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_origin();
}
inline const ::std::string& ClientIncidentReport_IncidentData_ResourceRequestIncident::origin() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.origin)
  return origin_.GetNoArena();
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_origin(const ::std::string& value) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.origin)
}
#if LANG_CXX11
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_origin(::std::string&& value) {
  set_has_origin();
  origin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.origin)
}
#endif
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_origin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.origin)
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_origin(const char* value, size_t size) {
  set_has_origin();
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.origin)
}
inline ::std::string* ClientIncidentReport_IncidentData_ResourceRequestIncident::mutable_origin() {
  set_has_origin();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.origin)
  return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_IncidentData_ResourceRequestIncident::release_origin() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.origin)
  clear_has_origin();
  return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_allocated_origin(::std::string* origin) {
  if (origin != NULL) {
    set_has_origin();
  } else {
    clear_has_origin();
  }
  origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.origin)
}

// optional .safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.Type type = 3 [default = UNKNOWN];
inline bool ClientIncidentReport_IncidentData_ResourceRequestIncident::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident_Type ClientIncidentReport_IncidentData_ResourceRequestIncident::type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.type)
  return static_cast< ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident_Type >(type_);
}
inline void ClientIncidentReport_IncidentData_ResourceRequestIncident::set_type(::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident_Type value) {
  assert(::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident.type)
}

// -------------------------------------------------------------------

// ClientIncidentReport_IncidentData

// optional int64 incident_time_msec = 1;
inline bool ClientIncidentReport_IncidentData::has_incident_time_msec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientIncidentReport_IncidentData::set_has_incident_time_msec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientIncidentReport_IncidentData::clear_has_incident_time_msec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientIncidentReport_IncidentData::clear_incident_time_msec() {
  incident_time_msec_ = GOOGLE_LONGLONG(0);
  clear_has_incident_time_msec();
}
inline ::google::protobuf::int64 ClientIncidentReport_IncidentData::incident_time_msec() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.incident_time_msec)
  return incident_time_msec_;
}
inline void ClientIncidentReport_IncidentData::set_incident_time_msec(::google::protobuf::int64 value) {
  set_has_incident_time_msec();
  incident_time_msec_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.IncidentData.incident_time_msec)
}

// optional .safe_browsing.ClientIncidentReport.IncidentData.TrackedPreferenceIncident tracked_preference = 2;
inline bool ClientIncidentReport_IncidentData::has_tracked_preference() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_IncidentData::set_has_tracked_preference() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_IncidentData::clear_has_tracked_preference() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_IncidentData::clear_tracked_preference() {
  if (tracked_preference_ != NULL) tracked_preference_->::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident::Clear();
  clear_has_tracked_preference();
}
inline const ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident& ClientIncidentReport_IncidentData::tracked_preference() const {
  const ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident* p = tracked_preference_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.tracked_preference)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident*>(
      &::safe_browsing::_ClientIncidentReport_IncidentData_TrackedPreferenceIncident_default_instance_);
}
inline ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident* ClientIncidentReport_IncidentData::mutable_tracked_preference() {
  set_has_tracked_preference();
  if (tracked_preference_ == NULL) {
    tracked_preference_ = new ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.tracked_preference)
  return tracked_preference_;
}
inline ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident* ClientIncidentReport_IncidentData::release_tracked_preference() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.tracked_preference)
  clear_has_tracked_preference();
  ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident* temp = tracked_preference_;
  tracked_preference_ = NULL;
  return temp;
}
inline void ClientIncidentReport_IncidentData::set_allocated_tracked_preference(::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident* tracked_preference) {
  delete tracked_preference_;
  tracked_preference_ = tracked_preference;
  if (tracked_preference) {
    set_has_tracked_preference();
  } else {
    clear_has_tracked_preference();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.tracked_preference)
}

// optional .safe_browsing.ClientIncidentReport.IncidentData.BinaryIntegrityIncident binary_integrity = 3;
inline bool ClientIncidentReport_IncidentData::has_binary_integrity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_IncidentData::set_has_binary_integrity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_IncidentData::clear_has_binary_integrity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_IncidentData::clear_binary_integrity() {
  if (binary_integrity_ != NULL) binary_integrity_->::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident::Clear();
  clear_has_binary_integrity();
}
inline const ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident& ClientIncidentReport_IncidentData::binary_integrity() const {
  const ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident* p = binary_integrity_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.binary_integrity)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident*>(
      &::safe_browsing::_ClientIncidentReport_IncidentData_BinaryIntegrityIncident_default_instance_);
}
inline ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident* ClientIncidentReport_IncidentData::mutable_binary_integrity() {
  set_has_binary_integrity();
  if (binary_integrity_ == NULL) {
    binary_integrity_ = new ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.binary_integrity)
  return binary_integrity_;
}
inline ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident* ClientIncidentReport_IncidentData::release_binary_integrity() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.binary_integrity)
  clear_has_binary_integrity();
  ::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident* temp = binary_integrity_;
  binary_integrity_ = NULL;
  return temp;
}
inline void ClientIncidentReport_IncidentData::set_allocated_binary_integrity(::safe_browsing::ClientIncidentReport_IncidentData_BinaryIntegrityIncident* binary_integrity) {
  delete binary_integrity_;
  binary_integrity_ = binary_integrity;
  if (binary_integrity) {
    set_has_binary_integrity();
  } else {
    clear_has_binary_integrity();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.binary_integrity)
}

// optional .safe_browsing.ClientIncidentReport.IncidentData.ResourceRequestIncident resource_request = 7;
inline bool ClientIncidentReport_IncidentData::has_resource_request() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_IncidentData::set_has_resource_request() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_IncidentData::clear_has_resource_request() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_IncidentData::clear_resource_request() {
  if (resource_request_ != NULL) resource_request_->::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident::Clear();
  clear_has_resource_request();
}
inline const ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident& ClientIncidentReport_IncidentData::resource_request() const {
  const ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident* p = resource_request_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.IncidentData.resource_request)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident*>(
      &::safe_browsing::_ClientIncidentReport_IncidentData_ResourceRequestIncident_default_instance_);
}
inline ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident* ClientIncidentReport_IncidentData::mutable_resource_request() {
  set_has_resource_request();
  if (resource_request_ == NULL) {
    resource_request_ = new ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.IncidentData.resource_request)
  return resource_request_;
}
inline ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident* ClientIncidentReport_IncidentData::release_resource_request() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.IncidentData.resource_request)
  clear_has_resource_request();
  ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident* temp = resource_request_;
  resource_request_ = NULL;
  return temp;
}
inline void ClientIncidentReport_IncidentData::set_allocated_resource_request(::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident* resource_request) {
  delete resource_request_;
  resource_request_ = resource_request;
  if (resource_request) {
    set_has_resource_request();
  } else {
    clear_has_resource_request();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.IncidentData.resource_request)
}

// -------------------------------------------------------------------

// ClientIncidentReport_DownloadDetails

// optional bytes token = 1;
inline bool ClientIncidentReport_DownloadDetails::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_DownloadDetails::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_DownloadDetails::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_DownloadDetails::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& ClientIncidentReport_DownloadDetails::token() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.DownloadDetails.token)
  return token_.GetNoArena();
}
inline void ClientIncidentReport_DownloadDetails::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.DownloadDetails.token)
}
#if LANG_CXX11
inline void ClientIncidentReport_DownloadDetails::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.DownloadDetails.token)
}
#endif
inline void ClientIncidentReport_DownloadDetails::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.DownloadDetails.token)
}
inline void ClientIncidentReport_DownloadDetails::set_token(const void* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.DownloadDetails.token)
}
inline ::std::string* ClientIncidentReport_DownloadDetails::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.DownloadDetails.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_DownloadDetails::release_token() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.DownloadDetails.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_DownloadDetails::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.DownloadDetails.token)
}

// optional .safe_browsing.ClientDownloadRequest download = 2;
inline bool ClientIncidentReport_DownloadDetails::has_download() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_DownloadDetails::set_has_download() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_DownloadDetails::clear_has_download() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_DownloadDetails::clear_download() {
  if (download_ != NULL) download_->::safe_browsing::ClientDownloadRequest::Clear();
  clear_has_download();
}
inline const ::safe_browsing::ClientDownloadRequest& ClientIncidentReport_DownloadDetails::download() const {
  const ::safe_browsing::ClientDownloadRequest* p = download_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.DownloadDetails.download)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest*>(
      &::safe_browsing::_ClientDownloadRequest_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest* ClientIncidentReport_DownloadDetails::mutable_download() {
  set_has_download();
  if (download_ == NULL) {
    download_ = new ::safe_browsing::ClientDownloadRequest;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.DownloadDetails.download)
  return download_;
}
inline ::safe_browsing::ClientDownloadRequest* ClientIncidentReport_DownloadDetails::release_download() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.DownloadDetails.download)
  clear_has_download();
  ::safe_browsing::ClientDownloadRequest* temp = download_;
  download_ = NULL;
  return temp;
}
inline void ClientIncidentReport_DownloadDetails::set_allocated_download(::safe_browsing::ClientDownloadRequest* download) {
  delete download_;
  download_ = download;
  if (download) {
    set_has_download();
  } else {
    clear_has_download();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.DownloadDetails.download)
}

// optional int64 download_time_msec = 3;
inline bool ClientIncidentReport_DownloadDetails::has_download_time_msec() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_DownloadDetails::set_has_download_time_msec() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_DownloadDetails::clear_has_download_time_msec() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_DownloadDetails::clear_download_time_msec() {
  download_time_msec_ = GOOGLE_LONGLONG(0);
  clear_has_download_time_msec();
}
inline ::google::protobuf::int64 ClientIncidentReport_DownloadDetails::download_time_msec() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.DownloadDetails.download_time_msec)
  return download_time_msec_;
}
inline void ClientIncidentReport_DownloadDetails::set_download_time_msec(::google::protobuf::int64 value) {
  set_has_download_time_msec();
  download_time_msec_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.DownloadDetails.download_time_msec)
}

// optional int64 open_time_msec = 4;
inline bool ClientIncidentReport_DownloadDetails::has_open_time_msec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientIncidentReport_DownloadDetails::set_has_open_time_msec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientIncidentReport_DownloadDetails::clear_has_open_time_msec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientIncidentReport_DownloadDetails::clear_open_time_msec() {
  open_time_msec_ = GOOGLE_LONGLONG(0);
  clear_has_open_time_msec();
}
inline ::google::protobuf::int64 ClientIncidentReport_DownloadDetails::open_time_msec() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.DownloadDetails.open_time_msec)
  return open_time_msec_;
}
inline void ClientIncidentReport_DownloadDetails::set_open_time_msec(::google::protobuf::int64 value) {
  set_has_open_time_msec();
  open_time_msec_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.DownloadDetails.open_time_msec)
}

// -------------------------------------------------------------------

// ClientIncidentReport_EnvironmentData_OS_RegistryValue

// optional string name = 1;
inline bool ClientIncidentReport_EnvironmentData_OS_RegistryValue::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_OS_RegistryValue::name() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.name)
  return name_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.name)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.name)
}
#endif
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.name)
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.name)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_OS_RegistryValue::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_OS_RegistryValue::release_name() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.name)
}

// optional uint32 type = 2;
inline bool ClientIncidentReport_EnvironmentData_OS_RegistryValue::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ClientIncidentReport_EnvironmentData_OS_RegistryValue::type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.type)
  return type_;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.type)
}

// optional bytes data = 3;
inline bool ClientIncidentReport_EnvironmentData_OS_RegistryValue::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_OS_RegistryValue::data() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.data)
  return data_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.data)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.data)
}
#endif
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.data)
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.data)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_OS_RegistryValue::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_OS_RegistryValue::release_data() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryValue::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue.data)
}

// -------------------------------------------------------------------

// ClientIncidentReport_EnvironmentData_OS_RegistryKey

// optional string name = 1;
inline bool ClientIncidentReport_EnvironmentData_OS_RegistryKey::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryKey::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryKey::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_OS_RegistryKey::name() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.name)
  return name_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryKey::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.name)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_OS_RegistryKey::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.name)
}
#endif
inline void ClientIncidentReport_EnvironmentData_OS_RegistryKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.name)
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryKey::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.name)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_OS_RegistryKey::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_OS_RegistryKey::release_name() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.name)
}

// repeated .safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryValue value = 2;
inline int ClientIncidentReport_EnvironmentData_OS_RegistryKey::value_size() const {
  return value_.size();
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryKey::clear_value() {
  value_.Clear();
}
inline const ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryValue& ClientIncidentReport_EnvironmentData_OS_RegistryKey::value(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.value)
  return value_.Get(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryValue* ClientIncidentReport_EnvironmentData_OS_RegistryKey::mutable_value(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.value)
  return value_.Mutable(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryValue* ClientIncidentReport_EnvironmentData_OS_RegistryKey::add_value() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.value)
  return value_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryValue >*
ClientIncidentReport_EnvironmentData_OS_RegistryKey::mutable_value() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.value)
  return &value_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryValue >&
ClientIncidentReport_EnvironmentData_OS_RegistryKey::value() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.value)
  return value_;
}

// repeated .safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey key = 3;
inline int ClientIncidentReport_EnvironmentData_OS_RegistryKey::key_size() const {
  return key_.size();
}
inline void ClientIncidentReport_EnvironmentData_OS_RegistryKey::clear_key() {
  key_.Clear();
}
inline const ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey& ClientIncidentReport_EnvironmentData_OS_RegistryKey::key(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.key)
  return key_.Get(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey* ClientIncidentReport_EnvironmentData_OS_RegistryKey::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.key)
  return key_.Mutable(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey* ClientIncidentReport_EnvironmentData_OS_RegistryKey::add_key() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.key)
  return key_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey >*
ClientIncidentReport_EnvironmentData_OS_RegistryKey::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.key)
  return &key_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey >&
ClientIncidentReport_EnvironmentData_OS_RegistryKey::key() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey.key)
  return key_;
}

// -------------------------------------------------------------------

// ClientIncidentReport_EnvironmentData_OS

// optional string os_name = 1;
inline bool ClientIncidentReport_EnvironmentData_OS::has_os_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_OS::set_has_os_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_OS::clear_has_os_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_OS::clear_os_name() {
  os_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os_name();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_OS::os_name() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_name)
  return os_name_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_OS::set_os_name(const ::std::string& value) {
  set_has_os_name();
  os_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_name)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_OS::set_os_name(::std::string&& value) {
  set_has_os_name();
  os_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_name)
}
#endif
inline void ClientIncidentReport_EnvironmentData_OS::set_os_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_os_name();
  os_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_name)
}
inline void ClientIncidentReport_EnvironmentData_OS::set_os_name(const char* value, size_t size) {
  set_has_os_name();
  os_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_name)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_OS::mutable_os_name() {
  set_has_os_name();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_name)
  return os_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_OS::release_os_name() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_name)
  clear_has_os_name();
  return os_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_OS::set_allocated_os_name(::std::string* os_name) {
  if (os_name != NULL) {
    set_has_os_name();
  } else {
    clear_has_os_name();
  }
  os_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os_name);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_name)
}

// optional string os_version = 2;
inline bool ClientIncidentReport_EnvironmentData_OS::has_os_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_OS::set_has_os_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_OS::clear_has_os_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_OS::clear_os_version() {
  os_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os_version();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_OS::os_version() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_version)
  return os_version_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_OS::set_os_version(const ::std::string& value) {
  set_has_os_version();
  os_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_version)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_OS::set_os_version(::std::string&& value) {
  set_has_os_version();
  os_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_version)
}
#endif
inline void ClientIncidentReport_EnvironmentData_OS::set_os_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_os_version();
  os_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_version)
}
inline void ClientIncidentReport_EnvironmentData_OS::set_os_version(const char* value, size_t size) {
  set_has_os_version();
  os_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_version)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_OS::mutable_os_version() {
  set_has_os_version();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_version)
  return os_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_OS::release_os_version() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_version)
  clear_has_os_version();
  return os_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_OS::set_allocated_os_version(::std::string* os_version) {
  if (os_version != NULL) {
    set_has_os_version();
  } else {
    clear_has_os_version();
  }
  os_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os_version);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.OS.os_version)
}

// repeated .safe_browsing.ClientIncidentReport.EnvironmentData.OS.RegistryKey registry_key = 3;
inline int ClientIncidentReport_EnvironmentData_OS::registry_key_size() const {
  return registry_key_.size();
}
inline void ClientIncidentReport_EnvironmentData_OS::clear_registry_key() {
  registry_key_.Clear();
}
inline const ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey& ClientIncidentReport_EnvironmentData_OS::registry_key(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.OS.registry_key)
  return registry_key_.Get(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey* ClientIncidentReport_EnvironmentData_OS::mutable_registry_key(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.OS.registry_key)
  return registry_key_.Mutable(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey* ClientIncidentReport_EnvironmentData_OS::add_registry_key() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.OS.registry_key)
  return registry_key_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey >*
ClientIncidentReport_EnvironmentData_OS::mutable_registry_key() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.EnvironmentData.OS.registry_key)
  return &registry_key_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_OS_RegistryKey >&
ClientIncidentReport_EnvironmentData_OS::registry_key() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.EnvironmentData.OS.registry_key)
  return registry_key_;
}

// optional bool is_enrolled_to_domain = 4;
inline bool ClientIncidentReport_EnvironmentData_OS::has_is_enrolled_to_domain() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_OS::set_has_is_enrolled_to_domain() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData_OS::clear_has_is_enrolled_to_domain() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData_OS::clear_is_enrolled_to_domain() {
  is_enrolled_to_domain_ = false;
  clear_has_is_enrolled_to_domain();
}
inline bool ClientIncidentReport_EnvironmentData_OS::is_enrolled_to_domain() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.OS.is_enrolled_to_domain)
  return is_enrolled_to_domain_;
}
inline void ClientIncidentReport_EnvironmentData_OS::set_is_enrolled_to_domain(bool value) {
  set_has_is_enrolled_to_domain();
  is_enrolled_to_domain_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.OS.is_enrolled_to_domain)
}

// -------------------------------------------------------------------

// ClientIncidentReport_EnvironmentData_Machine

// optional string cpu_architecture = 1;
inline bool ClientIncidentReport_EnvironmentData_Machine::has_cpu_architecture() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Machine::set_has_cpu_architecture() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_Machine::clear_has_cpu_architecture() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_Machine::clear_cpu_architecture() {
  cpu_architecture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cpu_architecture();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_Machine::cpu_architecture() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_architecture)
  return cpu_architecture_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_Machine::set_cpu_architecture(const ::std::string& value) {
  set_has_cpu_architecture();
  cpu_architecture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_architecture)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Machine::set_cpu_architecture(::std::string&& value) {
  set_has_cpu_architecture();
  cpu_architecture_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_architecture)
}
#endif
inline void ClientIncidentReport_EnvironmentData_Machine::set_cpu_architecture(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cpu_architecture();
  cpu_architecture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_architecture)
}
inline void ClientIncidentReport_EnvironmentData_Machine::set_cpu_architecture(const char* value, size_t size) {
  set_has_cpu_architecture();
  cpu_architecture_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_architecture)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Machine::mutable_cpu_architecture() {
  set_has_cpu_architecture();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_architecture)
  return cpu_architecture_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Machine::release_cpu_architecture() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_architecture)
  clear_has_cpu_architecture();
  return cpu_architecture_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_Machine::set_allocated_cpu_architecture(::std::string* cpu_architecture) {
  if (cpu_architecture != NULL) {
    set_has_cpu_architecture();
  } else {
    clear_has_cpu_architecture();
  }
  cpu_architecture_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cpu_architecture);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_architecture)
}

// optional string cpu_vendor = 2;
inline bool ClientIncidentReport_EnvironmentData_Machine::has_cpu_vendor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Machine::set_has_cpu_vendor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_Machine::clear_has_cpu_vendor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_Machine::clear_cpu_vendor() {
  cpu_vendor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cpu_vendor();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_Machine::cpu_vendor() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_vendor)
  return cpu_vendor_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_Machine::set_cpu_vendor(const ::std::string& value) {
  set_has_cpu_vendor();
  cpu_vendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_vendor)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Machine::set_cpu_vendor(::std::string&& value) {
  set_has_cpu_vendor();
  cpu_vendor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_vendor)
}
#endif
inline void ClientIncidentReport_EnvironmentData_Machine::set_cpu_vendor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cpu_vendor();
  cpu_vendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_vendor)
}
inline void ClientIncidentReport_EnvironmentData_Machine::set_cpu_vendor(const char* value, size_t size) {
  set_has_cpu_vendor();
  cpu_vendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_vendor)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Machine::mutable_cpu_vendor() {
  set_has_cpu_vendor();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_vendor)
  return cpu_vendor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Machine::release_cpu_vendor() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_vendor)
  clear_has_cpu_vendor();
  return cpu_vendor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_Machine::set_allocated_cpu_vendor(::std::string* cpu_vendor) {
  if (cpu_vendor != NULL) {
    set_has_cpu_vendor();
  } else {
    clear_has_cpu_vendor();
  }
  cpu_vendor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cpu_vendor);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpu_vendor)
}

// optional uint32 cpuid = 3;
inline bool ClientIncidentReport_EnvironmentData_Machine::has_cpuid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Machine::set_has_cpuid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData_Machine::clear_has_cpuid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData_Machine::clear_cpuid() {
  cpuid_ = 0u;
  clear_has_cpuid();
}
inline ::google::protobuf::uint32 ClientIncidentReport_EnvironmentData_Machine::cpuid() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpuid)
  return cpuid_;
}
inline void ClientIncidentReport_EnvironmentData_Machine::set_cpuid(::google::protobuf::uint32 value) {
  set_has_cpuid();
  cpuid_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Machine.cpuid)
}

// -------------------------------------------------------------------

// ClientIncidentReport_EnvironmentData_Process_Patch

// optional string function = 1;
inline bool ClientIncidentReport_EnvironmentData_Process_Patch::has_function() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process_Patch::set_has_function() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_Process_Patch::clear_has_function() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_Process_Patch::clear_function() {
  function_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_function();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_Process_Patch::function() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.function)
  return function_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_Process_Patch::set_function(const ::std::string& value) {
  set_has_function();
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.function)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process_Patch::set_function(::std::string&& value) {
  set_has_function();
  function_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.function)
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process_Patch::set_function(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_function();
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.function)
}
inline void ClientIncidentReport_EnvironmentData_Process_Patch::set_function(const char* value, size_t size) {
  set_has_function();
  function_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.function)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_Patch::mutable_function() {
  set_has_function();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.function)
  return function_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_Patch::release_function() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.function)
  clear_has_function();
  return function_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_Process_Patch::set_allocated_function(::std::string* function) {
  if (function != NULL) {
    set_has_function();
  } else {
    clear_has_function();
  }
  function_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.function)
}

// optional string target_dll = 2;
inline bool ClientIncidentReport_EnvironmentData_Process_Patch::has_target_dll() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process_Patch::set_has_target_dll() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_Process_Patch::clear_has_target_dll() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_Process_Patch::clear_target_dll() {
  target_dll_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target_dll();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_Process_Patch::target_dll() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.target_dll)
  return target_dll_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_Process_Patch::set_target_dll(const ::std::string& value) {
  set_has_target_dll();
  target_dll_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.target_dll)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process_Patch::set_target_dll(::std::string&& value) {
  set_has_target_dll();
  target_dll_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.target_dll)
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process_Patch::set_target_dll(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target_dll();
  target_dll_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.target_dll)
}
inline void ClientIncidentReport_EnvironmentData_Process_Patch::set_target_dll(const char* value, size_t size) {
  set_has_target_dll();
  target_dll_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.target_dll)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_Patch::mutable_target_dll() {
  set_has_target_dll();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.target_dll)
  return target_dll_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_Patch::release_target_dll() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.target_dll)
  clear_has_target_dll();
  return target_dll_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_Process_Patch::set_allocated_target_dll(::std::string* target_dll) {
  if (target_dll != NULL) {
    set_has_target_dll();
  } else {
    clear_has_target_dll();
  }
  target_dll_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_dll);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch.target_dll)
}

// -------------------------------------------------------------------

// ClientIncidentReport_EnvironmentData_Process_NetworkProvider

// -------------------------------------------------------------------

// ClientIncidentReport_EnvironmentData_Process_Dll

// optional string path = 1;
inline bool ClientIncidentReport_EnvironmentData_Process_Dll::has_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_has_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::clear_has_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_Process_Dll::path() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.path)
  return path_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.path)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.path)
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.path)
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.path)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_Dll::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_Dll::release_path() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.path)
}

// optional uint64 base_address = 2;
inline bool ClientIncidentReport_EnvironmentData_Process_Dll::has_base_address() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_has_base_address() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::clear_has_base_address() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::clear_base_address() {
  base_address_ = GOOGLE_ULONGLONG(0);
  clear_has_base_address();
}
inline ::google::protobuf::uint64 ClientIncidentReport_EnvironmentData_Process_Dll::base_address() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.base_address)
  return base_address_;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_base_address(::google::protobuf::uint64 value) {
  set_has_base_address();
  base_address_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.base_address)
}

// optional uint32 length = 3;
inline bool ClientIncidentReport_EnvironmentData_Process_Dll::has_length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_has_length() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::clear_has_length() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::clear_length() {
  length_ = 0u;
  clear_has_length();
}
inline ::google::protobuf::uint32 ClientIncidentReport_EnvironmentData_Process_Dll::length() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.length)
  return length_;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_length(::google::protobuf::uint32 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.length)
}

// repeated .safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.Feature feature = 4;
inline int ClientIncidentReport_EnvironmentData_Process_Dll::feature_size() const {
  return feature_.size();
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::clear_feature() {
  feature_.Clear();
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll_Feature ClientIncidentReport_EnvironmentData_Process_Dll::feature(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.feature)
  return static_cast< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll_Feature >(feature_.Get(index));
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_feature(int index, ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll_Feature value) {
  assert(::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll_Feature_IsValid(value));
  feature_.Set(index, value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.feature)
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::add_feature(::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll_Feature value) {
  assert(::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll_Feature_IsValid(value));
  feature_.Add(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.feature)
}
inline const ::google::protobuf::RepeatedField<int>&
ClientIncidentReport_EnvironmentData_Process_Dll::feature() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.feature)
  return feature_;
}
inline ::google::protobuf::RepeatedField<int>*
ClientIncidentReport_EnvironmentData_Process_Dll::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.feature)
  return &feature_;
}

// optional .safe_browsing.ClientDownloadRequest.ImageHeaders image_headers = 5;
inline bool ClientIncidentReport_EnvironmentData_Process_Dll::has_image_headers() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_has_image_headers() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::clear_has_image_headers() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::clear_image_headers() {
  if (image_headers_ != NULL) image_headers_->::safe_browsing::ClientDownloadRequest_ImageHeaders::Clear();
  clear_has_image_headers();
}
inline const ::safe_browsing::ClientDownloadRequest_ImageHeaders& ClientIncidentReport_EnvironmentData_Process_Dll::image_headers() const {
  const ::safe_browsing::ClientDownloadRequest_ImageHeaders* p = image_headers_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.image_headers)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientDownloadRequest_ImageHeaders*>(
      &::safe_browsing::_ClientDownloadRequest_ImageHeaders_default_instance_);
}
inline ::safe_browsing::ClientDownloadRequest_ImageHeaders* ClientIncidentReport_EnvironmentData_Process_Dll::mutable_image_headers() {
  set_has_image_headers();
  if (image_headers_ == NULL) {
    image_headers_ = new ::safe_browsing::ClientDownloadRequest_ImageHeaders;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.image_headers)
  return image_headers_;
}
inline ::safe_browsing::ClientDownloadRequest_ImageHeaders* ClientIncidentReport_EnvironmentData_Process_Dll::release_image_headers() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.image_headers)
  clear_has_image_headers();
  ::safe_browsing::ClientDownloadRequest_ImageHeaders* temp = image_headers_;
  image_headers_ = NULL;
  return temp;
}
inline void ClientIncidentReport_EnvironmentData_Process_Dll::set_allocated_image_headers(::safe_browsing::ClientDownloadRequest_ImageHeaders* image_headers) {
  delete image_headers_;
  image_headers_ = image_headers;
  if (image_headers) {
    set_has_image_headers();
  } else {
    clear_has_image_headers();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll.image_headers)
}

// -------------------------------------------------------------------

// ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification

// optional uint32 file_offset = 1;
inline bool ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::has_file_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_has_file_offset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::clear_has_file_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::clear_file_offset() {
  file_offset_ = 0u;
  clear_has_file_offset();
}
inline ::google::protobuf::uint32 ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::file_offset() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.file_offset)
  return file_offset_;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_file_offset(::google::protobuf::uint32 value) {
  set_has_file_offset();
  file_offset_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.file_offset)
}

// optional int32 byte_count = 2;
inline bool ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::has_byte_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_has_byte_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::clear_has_byte_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::clear_byte_count() {
  byte_count_ = 0;
  clear_has_byte_count();
}
inline ::google::protobuf::int32 ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::byte_count() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.byte_count)
  return byte_count_;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_byte_count(::google::protobuf::int32 value) {
  set_has_byte_count();
  byte_count_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.byte_count)
}

// optional bytes modified_bytes = 3;
inline bool ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::has_modified_bytes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_has_modified_bytes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::clear_has_modified_bytes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::clear_modified_bytes() {
  modified_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_modified_bytes();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::modified_bytes() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.modified_bytes)
  return modified_bytes_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_modified_bytes(const ::std::string& value) {
  set_has_modified_bytes();
  modified_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.modified_bytes)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_modified_bytes(::std::string&& value) {
  set_has_modified_bytes();
  modified_bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.modified_bytes)
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_modified_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_modified_bytes();
  modified_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.modified_bytes)
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_modified_bytes(const void* value, size_t size) {
  set_has_modified_bytes();
  modified_bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.modified_bytes)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::mutable_modified_bytes() {
  set_has_modified_bytes();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.modified_bytes)
  return modified_bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::release_modified_bytes() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.modified_bytes)
  clear_has_modified_bytes();
  return modified_bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_allocated_modified_bytes(::std::string* modified_bytes) {
  if (modified_bytes != NULL) {
    set_has_modified_bytes();
  } else {
    clear_has_modified_bytes();
  }
  modified_bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modified_bytes);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.modified_bytes)
}

// optional string export_name = 4;
inline bool ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::has_export_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_has_export_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::clear_has_export_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::clear_export_name() {
  export_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_export_name();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::export_name() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.export_name)
  return export_name_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_export_name(const ::std::string& value) {
  set_has_export_name();
  export_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.export_name)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_export_name(::std::string&& value) {
  set_has_export_name();
  export_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.export_name)
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_export_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_export_name();
  export_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.export_name)
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_export_name(const char* value, size_t size) {
  set_has_export_name();
  export_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.export_name)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::mutable_export_name() {
  set_has_export_name();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.export_name)
  return export_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::release_export_name() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.export_name)
  clear_has_export_name();
  return export_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification::set_allocated_export_name(::std::string* export_name) {
  if (export_name != NULL) {
    set_has_export_name();
  } else {
    clear_has_export_name();
  }
  export_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), export_name);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification.export_name)
}

// -------------------------------------------------------------------

// ClientIncidentReport_EnvironmentData_Process_ModuleState

// optional string name = 1;
inline bool ClientIncidentReport_EnvironmentData_Process_ModuleState::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_Process_ModuleState::name() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.name)
  return name_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.name)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.name)
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.name)
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.name)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_ModuleState::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_ModuleState::release_name() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.name)
}

// optional .safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.ModifiedState modified_state = 2;
inline bool ClientIncidentReport_EnvironmentData_Process_ModuleState::has_modified_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::set_has_modified_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::clear_has_modified_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::clear_modified_state() {
  modified_state_ = 0;
  clear_has_modified_state();
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState ClientIncidentReport_EnvironmentData_Process_ModuleState::modified_state() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.modified_state)
  return static_cast< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState >(modified_state_);
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::set_modified_state(::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState value) {
  assert(::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState_IsValid(value));
  set_has_modified_state();
  modified_state_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.modified_state)
}

// repeated string OBSOLETE_modified_export = 3;
inline int ClientIncidentReport_EnvironmentData_Process_ModuleState::obsolete_modified_export_size() const {
  return obsolete_modified_export_.size();
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::clear_obsolete_modified_export() {
  obsolete_modified_export_.Clear();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_Process_ModuleState::obsolete_modified_export(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
  return obsolete_modified_export_.Get(index);
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_ModuleState::mutable_obsolete_modified_export(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
  return obsolete_modified_export_.Mutable(index);
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::set_obsolete_modified_export(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
  obsolete_modified_export_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::set_obsolete_modified_export(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
  obsolete_modified_export_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::set_obsolete_modified_export(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  obsolete_modified_export_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::set_obsolete_modified_export(int index, const char* value, size_t size) {
  obsolete_modified_export_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process_ModuleState::add_obsolete_modified_export() {
  // @@protoc_insertion_point(field_add_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
  return obsolete_modified_export_.Add();
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::add_obsolete_modified_export(const ::std::string& value) {
  obsolete_modified_export_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::add_obsolete_modified_export(::std::string&& value) {
  obsolete_modified_export_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::add_obsolete_modified_export(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  obsolete_modified_export_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::add_obsolete_modified_export(const char* value, size_t size) {
  obsolete_modified_export_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientIncidentReport_EnvironmentData_Process_ModuleState::obsolete_modified_export() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
  return obsolete_modified_export_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientIncidentReport_EnvironmentData_Process_ModuleState::mutable_obsolete_modified_export() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.OBSOLETE_modified_export)
  return &obsolete_modified_export_;
}

// repeated .safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.Modification modification = 4;
inline int ClientIncidentReport_EnvironmentData_Process_ModuleState::modification_size() const {
  return modification_.size();
}
inline void ClientIncidentReport_EnvironmentData_Process_ModuleState::clear_modification() {
  modification_.Clear();
}
inline const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification& ClientIncidentReport_EnvironmentData_Process_ModuleState::modification(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.modification)
  return modification_.Get(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification* ClientIncidentReport_EnvironmentData_Process_ModuleState::mutable_modification(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.modification)
  return modification_.Mutable(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification* ClientIncidentReport_EnvironmentData_Process_ModuleState::add_modification() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.modification)
  return modification_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification >*
ClientIncidentReport_EnvironmentData_Process_ModuleState::mutable_modification() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.modification)
  return &modification_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_Modification >&
ClientIncidentReport_EnvironmentData_Process_ModuleState::modification() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState.modification)
  return modification_;
}

// -------------------------------------------------------------------

// ClientIncidentReport_EnvironmentData_Process

// optional string version = 1;
inline bool ClientIncidentReport_EnvironmentData_Process::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_Process::version() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.version)
  return version_.GetNoArena();
}
inline void ClientIncidentReport_EnvironmentData_Process::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.version)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.EnvironmentData.Process.version)
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.version)
}
inline void ClientIncidentReport_EnvironmentData_Process::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.version)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process::release_version() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.Process.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_EnvironmentData_Process::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.Process.version)
}

// repeated string OBSOLETE_dlls = 2;
inline int ClientIncidentReport_EnvironmentData_Process::obsolete_dlls_size() const {
  return obsolete_dlls_.size();
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_obsolete_dlls() {
  obsolete_dlls_.Clear();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_Process::obsolete_dlls(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
  return obsolete_dlls_.Get(index);
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process::mutable_obsolete_dlls(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
  return obsolete_dlls_.Mutable(index);
}
inline void ClientIncidentReport_EnvironmentData_Process::set_obsolete_dlls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
  obsolete_dlls_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process::set_obsolete_dlls(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
  obsolete_dlls_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process::set_obsolete_dlls(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  obsolete_dlls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
}
inline void ClientIncidentReport_EnvironmentData_Process::set_obsolete_dlls(int index, const char* value, size_t size) {
  obsolete_dlls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process::add_obsolete_dlls() {
  // @@protoc_insertion_point(field_add_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
  return obsolete_dlls_.Add();
}
inline void ClientIncidentReport_EnvironmentData_Process::add_obsolete_dlls(const ::std::string& value) {
  obsolete_dlls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process::add_obsolete_dlls(::std::string&& value) {
  obsolete_dlls_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process::add_obsolete_dlls(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  obsolete_dlls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
}
inline void ClientIncidentReport_EnvironmentData_Process::add_obsolete_dlls(const char* value, size_t size) {
  obsolete_dlls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientIncidentReport_EnvironmentData_Process::obsolete_dlls() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
  return obsolete_dlls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientIncidentReport_EnvironmentData_Process::mutable_obsolete_dlls() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_dlls)
  return &obsolete_dlls_;
}

// repeated .safe_browsing.ClientIncidentReport.EnvironmentData.Process.Patch patches = 3;
inline int ClientIncidentReport_EnvironmentData_Process::patches_size() const {
  return patches_.size();
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_patches() {
  patches_.Clear();
}
inline const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Patch& ClientIncidentReport_EnvironmentData_Process::patches(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.patches)
  return patches_.Get(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Patch* ClientIncidentReport_EnvironmentData_Process::mutable_patches(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.patches)
  return patches_.Mutable(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Patch* ClientIncidentReport_EnvironmentData_Process::add_patches() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.Process.patches)
  return patches_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Patch >*
ClientIncidentReport_EnvironmentData_Process::mutable_patches() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.patches)
  return &patches_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Patch >&
ClientIncidentReport_EnvironmentData_Process::patches() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.patches)
  return patches_;
}

// repeated .safe_browsing.ClientIncidentReport.EnvironmentData.Process.NetworkProvider network_providers = 4;
inline int ClientIncidentReport_EnvironmentData_Process::network_providers_size() const {
  return network_providers_.size();
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_network_providers() {
  network_providers_.Clear();
}
inline const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_NetworkProvider& ClientIncidentReport_EnvironmentData_Process::network_providers(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.network_providers)
  return network_providers_.Get(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_NetworkProvider* ClientIncidentReport_EnvironmentData_Process::mutable_network_providers(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.network_providers)
  return network_providers_.Mutable(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_NetworkProvider* ClientIncidentReport_EnvironmentData_Process::add_network_providers() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.Process.network_providers)
  return network_providers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_NetworkProvider >*
ClientIncidentReport_EnvironmentData_Process::mutable_network_providers() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.network_providers)
  return &network_providers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_NetworkProvider >&
ClientIncidentReport_EnvironmentData_Process::network_providers() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.network_providers)
  return network_providers_;
}

// optional .safe_browsing.ClientIncidentReport.EnvironmentData.Process.Channel chrome_update_channel = 5;
inline bool ClientIncidentReport_EnvironmentData_Process::has_chrome_update_channel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process::set_has_chrome_update_channel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_has_chrome_update_channel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_chrome_update_channel() {
  chrome_update_channel_ = 0;
  clear_has_chrome_update_channel();
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Channel ClientIncidentReport_EnvironmentData_Process::chrome_update_channel() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.chrome_update_channel)
  return static_cast< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Channel >(chrome_update_channel_);
}
inline void ClientIncidentReport_EnvironmentData_Process::set_chrome_update_channel(::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Channel value) {
  assert(::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Channel_IsValid(value));
  set_has_chrome_update_channel();
  chrome_update_channel_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.chrome_update_channel)
}

// optional int64 uptime_msec = 6;
inline bool ClientIncidentReport_EnvironmentData_Process::has_uptime_msec() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process::set_has_uptime_msec() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_has_uptime_msec() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_uptime_msec() {
  uptime_msec_ = GOOGLE_LONGLONG(0);
  clear_has_uptime_msec();
}
inline ::google::protobuf::int64 ClientIncidentReport_EnvironmentData_Process::uptime_msec() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.uptime_msec)
  return uptime_msec_;
}
inline void ClientIncidentReport_EnvironmentData_Process::set_uptime_msec(::google::protobuf::int64 value) {
  set_has_uptime_msec();
  uptime_msec_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.uptime_msec)
}

// optional bool metrics_consent = 7;
inline bool ClientIncidentReport_EnvironmentData_Process::has_metrics_consent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process::set_has_metrics_consent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_has_metrics_consent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_metrics_consent() {
  metrics_consent_ = false;
  clear_has_metrics_consent();
}
inline bool ClientIncidentReport_EnvironmentData_Process::metrics_consent() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.metrics_consent)
  return metrics_consent_;
}
inline void ClientIncidentReport_EnvironmentData_Process::set_metrics_consent(bool value) {
  set_has_metrics_consent();
  metrics_consent_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.metrics_consent)
}

// optional bool OBSOLETE_extended_consent = 8;
inline bool ClientIncidentReport_EnvironmentData_Process::has_obsolete_extended_consent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process::set_has_obsolete_extended_consent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_has_obsolete_extended_consent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_obsolete_extended_consent() {
  obsolete_extended_consent_ = false;
  clear_has_obsolete_extended_consent();
}
inline bool ClientIncidentReport_EnvironmentData_Process::obsolete_extended_consent() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_extended_consent)
  return obsolete_extended_consent_;
}
inline void ClientIncidentReport_EnvironmentData_Process::set_obsolete_extended_consent(bool value) {
  set_has_obsolete_extended_consent();
  obsolete_extended_consent_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_extended_consent)
}

// repeated .safe_browsing.ClientIncidentReport.EnvironmentData.Process.Dll dll = 9;
inline int ClientIncidentReport_EnvironmentData_Process::dll_size() const {
  return dll_.size();
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_dll() {
  dll_.Clear();
}
inline const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll& ClientIncidentReport_EnvironmentData_Process::dll(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.dll)
  return dll_.Get(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll* ClientIncidentReport_EnvironmentData_Process::mutable_dll(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.dll)
  return dll_.Mutable(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll* ClientIncidentReport_EnvironmentData_Process::add_dll() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.Process.dll)
  return dll_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll >*
ClientIncidentReport_EnvironmentData_Process::mutable_dll() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.dll)
  return &dll_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll >&
ClientIncidentReport_EnvironmentData_Process::dll() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.dll)
  return dll_;
}

// repeated string blacklisted_dll = 10;
inline int ClientIncidentReport_EnvironmentData_Process::blacklisted_dll_size() const {
  return blacklisted_dll_.size();
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_blacklisted_dll() {
  blacklisted_dll_.Clear();
}
inline const ::std::string& ClientIncidentReport_EnvironmentData_Process::blacklisted_dll(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
  return blacklisted_dll_.Get(index);
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process::mutable_blacklisted_dll(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
  return blacklisted_dll_.Mutable(index);
}
inline void ClientIncidentReport_EnvironmentData_Process::set_blacklisted_dll(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
  blacklisted_dll_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process::set_blacklisted_dll(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
  blacklisted_dll_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process::set_blacklisted_dll(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  blacklisted_dll_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
}
inline void ClientIncidentReport_EnvironmentData_Process::set_blacklisted_dll(int index, const char* value, size_t size) {
  blacklisted_dll_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
}
inline ::std::string* ClientIncidentReport_EnvironmentData_Process::add_blacklisted_dll() {
  // @@protoc_insertion_point(field_add_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
  return blacklisted_dll_.Add();
}
inline void ClientIncidentReport_EnvironmentData_Process::add_blacklisted_dll(const ::std::string& value) {
  blacklisted_dll_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
}
#if LANG_CXX11
inline void ClientIncidentReport_EnvironmentData_Process::add_blacklisted_dll(::std::string&& value) {
  blacklisted_dll_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
}
#endif
inline void ClientIncidentReport_EnvironmentData_Process::add_blacklisted_dll(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  blacklisted_dll_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
}
inline void ClientIncidentReport_EnvironmentData_Process::add_blacklisted_dll(const char* value, size_t size) {
  blacklisted_dll_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientIncidentReport_EnvironmentData_Process::blacklisted_dll() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
  return blacklisted_dll_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientIncidentReport_EnvironmentData_Process::mutable_blacklisted_dll() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.blacklisted_dll)
  return &blacklisted_dll_;
}

// repeated .safe_browsing.ClientIncidentReport.EnvironmentData.Process.ModuleState module_state = 11;
inline int ClientIncidentReport_EnvironmentData_Process::module_state_size() const {
  return module_state_.size();
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_module_state() {
  module_state_.Clear();
}
inline const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState& ClientIncidentReport_EnvironmentData_Process::module_state(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.module_state)
  return module_state_.Get(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState* ClientIncidentReport_EnvironmentData_Process::mutable_module_state(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.Process.module_state)
  return module_state_.Mutable(index);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState* ClientIncidentReport_EnvironmentData_Process::add_module_state() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.EnvironmentData.Process.module_state)
  return module_state_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState >*
ClientIncidentReport_EnvironmentData_Process::mutable_module_state() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.module_state)
  return &module_state_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState >&
ClientIncidentReport_EnvironmentData_Process::module_state() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.EnvironmentData.Process.module_state)
  return module_state_;
}

// optional bool OBSOLETE_field_trial_participant = 12;
inline bool ClientIncidentReport_EnvironmentData_Process::has_obsolete_field_trial_participant() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientIncidentReport_EnvironmentData_Process::set_has_obsolete_field_trial_participant() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_has_obsolete_field_trial_participant() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientIncidentReport_EnvironmentData_Process::clear_obsolete_field_trial_participant() {
  obsolete_field_trial_participant_ = false;
  clear_has_obsolete_field_trial_participant();
}
inline bool ClientIncidentReport_EnvironmentData_Process::obsolete_field_trial_participant() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_field_trial_participant)
  return obsolete_field_trial_participant_;
}
inline void ClientIncidentReport_EnvironmentData_Process::set_obsolete_field_trial_participant(bool value) {
  set_has_obsolete_field_trial_participant();
  obsolete_field_trial_participant_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.EnvironmentData.Process.OBSOLETE_field_trial_participant)
}

// -------------------------------------------------------------------

// ClientIncidentReport_EnvironmentData

// optional .safe_browsing.ClientIncidentReport.EnvironmentData.OS os = 1;
inline bool ClientIncidentReport_EnvironmentData::has_os() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_EnvironmentData::set_has_os() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData::clear_has_os() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_EnvironmentData::clear_os() {
  if (os_ != NULL) os_->::safe_browsing::ClientIncidentReport_EnvironmentData_OS::Clear();
  clear_has_os();
}
inline const ::safe_browsing::ClientIncidentReport_EnvironmentData_OS& ClientIncidentReport_EnvironmentData::os() const {
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_OS* p = os_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.os)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientIncidentReport_EnvironmentData_OS*>(
      &::safe_browsing::_ClientIncidentReport_EnvironmentData_OS_default_instance_);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_OS* ClientIncidentReport_EnvironmentData::mutable_os() {
  set_has_os();
  if (os_ == NULL) {
    os_ = new ::safe_browsing::ClientIncidentReport_EnvironmentData_OS;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.os)
  return os_;
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_OS* ClientIncidentReport_EnvironmentData::release_os() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.os)
  clear_has_os();
  ::safe_browsing::ClientIncidentReport_EnvironmentData_OS* temp = os_;
  os_ = NULL;
  return temp;
}
inline void ClientIncidentReport_EnvironmentData::set_allocated_os(::safe_browsing::ClientIncidentReport_EnvironmentData_OS* os) {
  delete os_;
  os_ = os;
  if (os) {
    set_has_os();
  } else {
    clear_has_os();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.os)
}

// optional .safe_browsing.ClientIncidentReport.EnvironmentData.Machine machine = 2;
inline bool ClientIncidentReport_EnvironmentData::has_machine() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_EnvironmentData::set_has_machine() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData::clear_has_machine() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_EnvironmentData::clear_machine() {
  if (machine_ != NULL) machine_->::safe_browsing::ClientIncidentReport_EnvironmentData_Machine::Clear();
  clear_has_machine();
}
inline const ::safe_browsing::ClientIncidentReport_EnvironmentData_Machine& ClientIncidentReport_EnvironmentData::machine() const {
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_Machine* p = machine_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.machine)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientIncidentReport_EnvironmentData_Machine*>(
      &::safe_browsing::_ClientIncidentReport_EnvironmentData_Machine_default_instance_);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Machine* ClientIncidentReport_EnvironmentData::mutable_machine() {
  set_has_machine();
  if (machine_ == NULL) {
    machine_ = new ::safe_browsing::ClientIncidentReport_EnvironmentData_Machine;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.machine)
  return machine_;
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Machine* ClientIncidentReport_EnvironmentData::release_machine() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.machine)
  clear_has_machine();
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Machine* temp = machine_;
  machine_ = NULL;
  return temp;
}
inline void ClientIncidentReport_EnvironmentData::set_allocated_machine(::safe_browsing::ClientIncidentReport_EnvironmentData_Machine* machine) {
  delete machine_;
  machine_ = machine;
  if (machine) {
    set_has_machine();
  } else {
    clear_has_machine();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.machine)
}

// optional .safe_browsing.ClientIncidentReport.EnvironmentData.Process process = 3;
inline bool ClientIncidentReport_EnvironmentData::has_process() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_EnvironmentData::set_has_process() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData::clear_has_process() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_EnvironmentData::clear_process() {
  if (process_ != NULL) process_->::safe_browsing::ClientIncidentReport_EnvironmentData_Process::Clear();
  clear_has_process();
}
inline const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process& ClientIncidentReport_EnvironmentData::process() const {
  const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process* p = process_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.EnvironmentData.process)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientIncidentReport_EnvironmentData_Process*>(
      &::safe_browsing::_ClientIncidentReport_EnvironmentData_Process_default_instance_);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process* ClientIncidentReport_EnvironmentData::mutable_process() {
  set_has_process();
  if (process_ == NULL) {
    process_ = new ::safe_browsing::ClientIncidentReport_EnvironmentData_Process;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.EnvironmentData.process)
  return process_;
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData_Process* ClientIncidentReport_EnvironmentData::release_process() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.EnvironmentData.process)
  clear_has_process();
  ::safe_browsing::ClientIncidentReport_EnvironmentData_Process* temp = process_;
  process_ = NULL;
  return temp;
}
inline void ClientIncidentReport_EnvironmentData::set_allocated_process(::safe_browsing::ClientIncidentReport_EnvironmentData_Process* process) {
  delete process_;
  process_ = process;
  if (process) {
    set_has_process();
  } else {
    clear_has_process();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.EnvironmentData.process)
}

// -------------------------------------------------------------------

// ClientIncidentReport_ExtensionData_ExtensionInfo

// optional string id = 1;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& ClientIncidentReport_ExtensionData_ExtensionInfo::id() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.id)
  return id_.GetNoArena();
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.id)
}
#if LANG_CXX11
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.id)
}
#endif
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.id)
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.id)
}
inline ::std::string* ClientIncidentReport_ExtensionData_ExtensionInfo::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_ExtensionData_ExtensionInfo::release_id() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.id)
}

// optional string version = 2;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& ClientIncidentReport_ExtensionData_ExtensionInfo::version() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.version)
  return version_.GetNoArena();
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.version)
}
#if LANG_CXX11
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.version)
}
#endif
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.version)
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.version)
}
inline ::std::string* ClientIncidentReport_ExtensionData_ExtensionInfo::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_ExtensionData_ExtensionInfo::release_version() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.version)
}

// optional string name = 3;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ClientIncidentReport_ExtensionData_ExtensionInfo::name() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.name)
  return name_.GetNoArena();
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.name)
}
#if LANG_CXX11
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.name)
}
#endif
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.name)
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.name)
}
inline ::std::string* ClientIncidentReport_ExtensionData_ExtensionInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_ExtensionData_ExtensionInfo::release_name() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.name)
}

// optional string description = 4;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_description() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_description() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_description() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& ClientIncidentReport_ExtensionData_ExtensionInfo::description() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.description)
  return description_.GetNoArena();
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.description)
}
#if LANG_CXX11
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.description)
}
#endif
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.description)
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.description)
}
inline ::std::string* ClientIncidentReport_ExtensionData_ExtensionInfo::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_ExtensionData_ExtensionInfo::release_description() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.description)
}

// optional .safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.ExtensionState state = 5 [default = STATE_UNKNOWN];
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState ClientIncidentReport_ExtensionData_ExtensionInfo::state() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.state)
  return static_cast< ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState >(state_);
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_state(::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState value) {
  assert(::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.state)
}

// optional int32 type = 6;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ClientIncidentReport_ExtensionData_ExtensionInfo::type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.type)
  return type_;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.type)
}

// optional string update_url = 7;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_update_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_update_url() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_update_url() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_update_url() {
  update_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_update_url();
}
inline const ::std::string& ClientIncidentReport_ExtensionData_ExtensionInfo::update_url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.update_url)
  return update_url_.GetNoArena();
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_update_url(const ::std::string& value) {
  set_has_update_url();
  update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.update_url)
}
#if LANG_CXX11
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_update_url(::std::string&& value) {
  set_has_update_url();
  update_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.update_url)
}
#endif
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_update_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_update_url();
  update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.update_url)
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_update_url(const char* value, size_t size) {
  set_has_update_url();
  update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.update_url)
}
inline ::std::string* ClientIncidentReport_ExtensionData_ExtensionInfo::mutable_update_url() {
  set_has_update_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.update_url)
  return update_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_ExtensionData_ExtensionInfo::release_update_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.update_url)
  clear_has_update_url();
  return update_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_allocated_update_url(::std::string* update_url) {
  if (update_url != NULL) {
    set_has_update_url();
  } else {
    clear_has_update_url();
  }
  update_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), update_url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.update_url)
}

// optional bool has_signature_validation = 8;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_has_signature_validation() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_has_signature_validation() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_has_signature_validation() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_signature_validation() {
  has_signature_validation_ = false;
  clear_has_has_signature_validation();
}
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_signature_validation() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.has_signature_validation)
  return has_signature_validation_;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_signature_validation(bool value) {
  set_has_has_signature_validation();
  has_signature_validation_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.has_signature_validation)
}

// optional bool signature_is_valid = 9;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_signature_is_valid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_signature_is_valid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_signature_is_valid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_signature_is_valid() {
  signature_is_valid_ = false;
  clear_has_signature_is_valid();
}
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::signature_is_valid() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.signature_is_valid)
  return signature_is_valid_;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_signature_is_valid(bool value) {
  set_has_signature_is_valid();
  signature_is_valid_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.signature_is_valid)
}

// optional bool installed_by_custodian = 10;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_installed_by_custodian() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_installed_by_custodian() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_installed_by_custodian() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_installed_by_custodian() {
  installed_by_custodian_ = false;
  clear_has_installed_by_custodian();
}
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::installed_by_custodian() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.installed_by_custodian)
  return installed_by_custodian_;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_installed_by_custodian(bool value) {
  set_has_installed_by_custodian();
  installed_by_custodian_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.installed_by_custodian)
}

// optional bool installed_by_default = 11;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_installed_by_default() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_installed_by_default() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_installed_by_default() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_installed_by_default() {
  installed_by_default_ = false;
  clear_has_installed_by_default();
}
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::installed_by_default() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.installed_by_default)
  return installed_by_default_;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_installed_by_default(bool value) {
  set_has_installed_by_default();
  installed_by_default_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.installed_by_default)
}

// optional bool installed_by_oem = 12;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_installed_by_oem() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_installed_by_oem() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_installed_by_oem() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_installed_by_oem() {
  installed_by_oem_ = false;
  clear_has_installed_by_oem();
}
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::installed_by_oem() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.installed_by_oem)
  return installed_by_oem_;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_installed_by_oem(bool value) {
  set_has_installed_by_oem();
  installed_by_oem_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.installed_by_oem)
}

// optional bool from_bookmark = 13;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_from_bookmark() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_from_bookmark() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_from_bookmark() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_from_bookmark() {
  from_bookmark_ = false;
  clear_has_from_bookmark();
}
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::from_bookmark() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.from_bookmark)
  return from_bookmark_;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_from_bookmark(bool value) {
  set_has_from_bookmark();
  from_bookmark_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.from_bookmark)
}

// optional bool from_webstore = 14;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_from_webstore() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_from_webstore() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_from_webstore() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_from_webstore() {
  from_webstore_ = false;
  clear_has_from_webstore();
}
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::from_webstore() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.from_webstore)
  return from_webstore_;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_from_webstore(bool value) {
  set_has_from_webstore();
  from_webstore_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.from_webstore)
}

// optional bool converted_from_user_script = 15;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_converted_from_user_script() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_converted_from_user_script() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_converted_from_user_script() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_converted_from_user_script() {
  converted_from_user_script_ = false;
  clear_has_converted_from_user_script();
}
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::converted_from_user_script() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.converted_from_user_script)
  return converted_from_user_script_;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_converted_from_user_script(bool value) {
  set_has_converted_from_user_script();
  converted_from_user_script_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.converted_from_user_script)
}

// optional bool may_be_untrusted = 16;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_may_be_untrusted() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_may_be_untrusted() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_may_be_untrusted() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_may_be_untrusted() {
  may_be_untrusted_ = false;
  clear_has_may_be_untrusted();
}
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::may_be_untrusted() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.may_be_untrusted)
  return may_be_untrusted_;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_may_be_untrusted(bool value) {
  set_has_may_be_untrusted();
  may_be_untrusted_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.may_be_untrusted)
}

// optional int64 install_time_msec = 17;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_install_time_msec() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_install_time_msec() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_install_time_msec() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_install_time_msec() {
  install_time_msec_ = GOOGLE_LONGLONG(0);
  clear_has_install_time_msec();
}
inline ::google::protobuf::int64 ClientIncidentReport_ExtensionData_ExtensionInfo::install_time_msec() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.install_time_msec)
  return install_time_msec_;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_install_time_msec(::google::protobuf::int64 value) {
  set_has_install_time_msec();
  install_time_msec_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.install_time_msec)
}

// optional int32 manifest_location_type = 18;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_manifest_location_type() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_manifest_location_type() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_manifest_location_type() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_manifest_location_type() {
  manifest_location_type_ = 0;
  clear_has_manifest_location_type();
}
inline ::google::protobuf::int32 ClientIncidentReport_ExtensionData_ExtensionInfo::manifest_location_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.manifest_location_type)
  return manifest_location_type_;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_manifest_location_type(::google::protobuf::int32 value) {
  set_has_manifest_location_type();
  manifest_location_type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.manifest_location_type)
}

// optional string manifest = 19;
inline bool ClientIncidentReport_ExtensionData_ExtensionInfo::has_manifest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_has_manifest() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_has_manifest() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::clear_manifest() {
  manifest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_manifest();
}
inline const ::std::string& ClientIncidentReport_ExtensionData_ExtensionInfo::manifest() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.manifest)
  return manifest_.GetNoArena();
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_manifest(const ::std::string& value) {
  set_has_manifest();
  manifest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.manifest)
}
#if LANG_CXX11
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_manifest(::std::string&& value) {
  set_has_manifest();
  manifest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.manifest)
}
#endif
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_manifest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_manifest();
  manifest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.manifest)
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_manifest(const char* value, size_t size) {
  set_has_manifest();
  manifest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.manifest)
}
inline ::std::string* ClientIncidentReport_ExtensionData_ExtensionInfo::mutable_manifest() {
  set_has_manifest();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.manifest)
  return manifest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_ExtensionData_ExtensionInfo::release_manifest() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.manifest)
  clear_has_manifest();
  return manifest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_ExtensionData_ExtensionInfo::set_allocated_manifest(::std::string* manifest) {
  if (manifest != NULL) {
    set_has_manifest();
  } else {
    clear_has_manifest();
  }
  manifest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), manifest);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo.manifest)
}

// -------------------------------------------------------------------

// ClientIncidentReport_ExtensionData

// optional .safe_browsing.ClientIncidentReport.ExtensionData.ExtensionInfo last_installed_extension = 1;
inline bool ClientIncidentReport_ExtensionData::has_last_installed_extension() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_ExtensionData::set_has_last_installed_extension() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_ExtensionData::clear_has_last_installed_extension() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_ExtensionData::clear_last_installed_extension() {
  if (last_installed_extension_ != NULL) last_installed_extension_->::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo::Clear();
  clear_has_last_installed_extension();
}
inline const ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo& ClientIncidentReport_ExtensionData::last_installed_extension() const {
  const ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo* p = last_installed_extension_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.ExtensionData.last_installed_extension)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo*>(
      &::safe_browsing::_ClientIncidentReport_ExtensionData_ExtensionInfo_default_instance_);
}
inline ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo* ClientIncidentReport_ExtensionData::mutable_last_installed_extension() {
  set_has_last_installed_extension();
  if (last_installed_extension_ == NULL) {
    last_installed_extension_ = new ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.ExtensionData.last_installed_extension)
  return last_installed_extension_;
}
inline ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo* ClientIncidentReport_ExtensionData::release_last_installed_extension() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.ExtensionData.last_installed_extension)
  clear_has_last_installed_extension();
  ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo* temp = last_installed_extension_;
  last_installed_extension_ = NULL;
  return temp;
}
inline void ClientIncidentReport_ExtensionData::set_allocated_last_installed_extension(::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo* last_installed_extension) {
  delete last_installed_extension_;
  last_installed_extension_ = last_installed_extension;
  if (last_installed_extension) {
    set_has_last_installed_extension();
  } else {
    clear_has_last_installed_extension();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.ExtensionData.last_installed_extension)
}

// -------------------------------------------------------------------

// ClientIncidentReport_NonBinaryDownloadDetails

// optional string file_type = 1;
inline bool ClientIncidentReport_NonBinaryDownloadDetails::has_file_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_has_file_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::clear_has_file_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::clear_file_type() {
  file_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_type();
}
inline const ::std::string& ClientIncidentReport_NonBinaryDownloadDetails::file_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.file_type)
  return file_type_.GetNoArena();
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_file_type(const ::std::string& value) {
  set_has_file_type();
  file_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.file_type)
}
#if LANG_CXX11
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_file_type(::std::string&& value) {
  set_has_file_type();
  file_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.file_type)
}
#endif
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_file_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_type();
  file_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.file_type)
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_file_type(const char* value, size_t size) {
  set_has_file_type();
  file_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.file_type)
}
inline ::std::string* ClientIncidentReport_NonBinaryDownloadDetails::mutable_file_type() {
  set_has_file_type();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.file_type)
  return file_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_NonBinaryDownloadDetails::release_file_type() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.file_type)
  clear_has_file_type();
  return file_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_allocated_file_type(::std::string* file_type) {
  if (file_type != NULL) {
    set_has_file_type();
  } else {
    clear_has_file_type();
  }
  file_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_type);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.file_type)
}

// optional bytes url_spec_sha256 = 2;
inline bool ClientIncidentReport_NonBinaryDownloadDetails::has_url_spec_sha256() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_has_url_spec_sha256() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::clear_has_url_spec_sha256() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::clear_url_spec_sha256() {
  url_spec_sha256_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url_spec_sha256();
}
inline const ::std::string& ClientIncidentReport_NonBinaryDownloadDetails::url_spec_sha256() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.url_spec_sha256)
  return url_spec_sha256_.GetNoArena();
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_url_spec_sha256(const ::std::string& value) {
  set_has_url_spec_sha256();
  url_spec_sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.url_spec_sha256)
}
#if LANG_CXX11
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_url_spec_sha256(::std::string&& value) {
  set_has_url_spec_sha256();
  url_spec_sha256_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.url_spec_sha256)
}
#endif
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_url_spec_sha256(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url_spec_sha256();
  url_spec_sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.url_spec_sha256)
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_url_spec_sha256(const void* value, size_t size) {
  set_has_url_spec_sha256();
  url_spec_sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.url_spec_sha256)
}
inline ::std::string* ClientIncidentReport_NonBinaryDownloadDetails::mutable_url_spec_sha256() {
  set_has_url_spec_sha256();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.url_spec_sha256)
  return url_spec_sha256_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_NonBinaryDownloadDetails::release_url_spec_sha256() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.url_spec_sha256)
  clear_has_url_spec_sha256();
  return url_spec_sha256_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_allocated_url_spec_sha256(::std::string* url_spec_sha256) {
  if (url_spec_sha256 != NULL) {
    set_has_url_spec_sha256();
  } else {
    clear_has_url_spec_sha256();
  }
  url_spec_sha256_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url_spec_sha256);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.url_spec_sha256)
}

// optional string host = 3;
inline bool ClientIncidentReport_NonBinaryDownloadDetails::has_host() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_has_host() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::clear_has_host() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& ClientIncidentReport_NonBinaryDownloadDetails::host() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.host)
  return host_.GetNoArena();
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.host)
}
#if LANG_CXX11
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.host)
}
#endif
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.host)
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.host)
}
inline ::std::string* ClientIncidentReport_NonBinaryDownloadDetails::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentReport_NonBinaryDownloadDetails::release_host() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.host)
}

// optional int64 length = 4;
inline bool ClientIncidentReport_NonBinaryDownloadDetails::has_length() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_has_length() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::clear_has_length() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::clear_length() {
  length_ = GOOGLE_LONGLONG(0);
  clear_has_length();
}
inline ::google::protobuf::int64 ClientIncidentReport_NonBinaryDownloadDetails::length() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.length)
  return length_;
}
inline void ClientIncidentReport_NonBinaryDownloadDetails::set_length(::google::protobuf::int64 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails.length)
}

// -------------------------------------------------------------------

// ClientIncidentReport

// repeated .safe_browsing.ClientIncidentReport.IncidentData incident = 1;
inline int ClientIncidentReport::incident_size() const {
  return incident_.size();
}
inline void ClientIncidentReport::clear_incident() {
  incident_.Clear();
}
inline const ::safe_browsing::ClientIncidentReport_IncidentData& ClientIncidentReport::incident(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.incident)
  return incident_.Get(index);
}
inline ::safe_browsing::ClientIncidentReport_IncidentData* ClientIncidentReport::mutable_incident(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.incident)
  return incident_.Mutable(index);
}
inline ::safe_browsing::ClientIncidentReport_IncidentData* ClientIncidentReport::add_incident() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentReport.incident)
  return incident_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_IncidentData >*
ClientIncidentReport::mutable_incident() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentReport.incident)
  return &incident_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentReport_IncidentData >&
ClientIncidentReport::incident() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentReport.incident)
  return incident_;
}

// optional .safe_browsing.ClientIncidentReport.DownloadDetails download = 2;
inline bool ClientIncidentReport::has_download() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentReport::set_has_download() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentReport::clear_has_download() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentReport::clear_download() {
  if (download_ != NULL) download_->::safe_browsing::ClientIncidentReport_DownloadDetails::Clear();
  clear_has_download();
}
inline const ::safe_browsing::ClientIncidentReport_DownloadDetails& ClientIncidentReport::download() const {
  const ::safe_browsing::ClientIncidentReport_DownloadDetails* p = download_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.download)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientIncidentReport_DownloadDetails*>(
      &::safe_browsing::_ClientIncidentReport_DownloadDetails_default_instance_);
}
inline ::safe_browsing::ClientIncidentReport_DownloadDetails* ClientIncidentReport::mutable_download() {
  set_has_download();
  if (download_ == NULL) {
    download_ = new ::safe_browsing::ClientIncidentReport_DownloadDetails;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.download)
  return download_;
}
inline ::safe_browsing::ClientIncidentReport_DownloadDetails* ClientIncidentReport::release_download() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.download)
  clear_has_download();
  ::safe_browsing::ClientIncidentReport_DownloadDetails* temp = download_;
  download_ = NULL;
  return temp;
}
inline void ClientIncidentReport::set_allocated_download(::safe_browsing::ClientIncidentReport_DownloadDetails* download) {
  delete download_;
  download_ = download;
  if (download) {
    set_has_download();
  } else {
    clear_has_download();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.download)
}

// optional .safe_browsing.ClientIncidentReport.EnvironmentData environment = 3;
inline bool ClientIncidentReport::has_environment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentReport::set_has_environment() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentReport::clear_has_environment() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentReport::clear_environment() {
  if (environment_ != NULL) environment_->::safe_browsing::ClientIncidentReport_EnvironmentData::Clear();
  clear_has_environment();
}
inline const ::safe_browsing::ClientIncidentReport_EnvironmentData& ClientIncidentReport::environment() const {
  const ::safe_browsing::ClientIncidentReport_EnvironmentData* p = environment_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.environment)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientIncidentReport_EnvironmentData*>(
      &::safe_browsing::_ClientIncidentReport_EnvironmentData_default_instance_);
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData* ClientIncidentReport::mutable_environment() {
  set_has_environment();
  if (environment_ == NULL) {
    environment_ = new ::safe_browsing::ClientIncidentReport_EnvironmentData;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.environment)
  return environment_;
}
inline ::safe_browsing::ClientIncidentReport_EnvironmentData* ClientIncidentReport::release_environment() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.environment)
  clear_has_environment();
  ::safe_browsing::ClientIncidentReport_EnvironmentData* temp = environment_;
  environment_ = NULL;
  return temp;
}
inline void ClientIncidentReport::set_allocated_environment(::safe_browsing::ClientIncidentReport_EnvironmentData* environment) {
  delete environment_;
  environment_ = environment;
  if (environment) {
    set_has_environment();
  } else {
    clear_has_environment();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.environment)
}

// optional .safe_browsing.ChromeUserPopulation population = 7;
inline bool ClientIncidentReport::has_population() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientIncidentReport::set_has_population() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientIncidentReport::clear_has_population() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientIncidentReport::clear_population() {
  if (population_ != NULL) population_->::safe_browsing::ChromeUserPopulation::Clear();
  clear_has_population();
}
inline const ::safe_browsing::ChromeUserPopulation& ClientIncidentReport::population() const {
  const ::safe_browsing::ChromeUserPopulation* p = population_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.population)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ChromeUserPopulation*>(
      &::safe_browsing::_ChromeUserPopulation_default_instance_);
}
inline ::safe_browsing::ChromeUserPopulation* ClientIncidentReport::mutable_population() {
  set_has_population();
  if (population_ == NULL) {
    population_ = new ::safe_browsing::ChromeUserPopulation;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.population)
  return population_;
}
inline ::safe_browsing::ChromeUserPopulation* ClientIncidentReport::release_population() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.population)
  clear_has_population();
  ::safe_browsing::ChromeUserPopulation* temp = population_;
  population_ = NULL;
  return temp;
}
inline void ClientIncidentReport::set_allocated_population(::safe_browsing::ChromeUserPopulation* population) {
  delete population_;
  population_ = population;
  if (population) {
    set_has_population();
  } else {
    clear_has_population();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.population)
}

// optional .safe_browsing.ClientIncidentReport.ExtensionData extension_data = 8;
inline bool ClientIncidentReport::has_extension_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientIncidentReport::set_has_extension_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientIncidentReport::clear_has_extension_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientIncidentReport::clear_extension_data() {
  if (extension_data_ != NULL) extension_data_->::safe_browsing::ClientIncidentReport_ExtensionData::Clear();
  clear_has_extension_data();
}
inline const ::safe_browsing::ClientIncidentReport_ExtensionData& ClientIncidentReport::extension_data() const {
  const ::safe_browsing::ClientIncidentReport_ExtensionData* p = extension_data_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.extension_data)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientIncidentReport_ExtensionData*>(
      &::safe_browsing::_ClientIncidentReport_ExtensionData_default_instance_);
}
inline ::safe_browsing::ClientIncidentReport_ExtensionData* ClientIncidentReport::mutable_extension_data() {
  set_has_extension_data();
  if (extension_data_ == NULL) {
    extension_data_ = new ::safe_browsing::ClientIncidentReport_ExtensionData;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.extension_data)
  return extension_data_;
}
inline ::safe_browsing::ClientIncidentReport_ExtensionData* ClientIncidentReport::release_extension_data() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.extension_data)
  clear_has_extension_data();
  ::safe_browsing::ClientIncidentReport_ExtensionData* temp = extension_data_;
  extension_data_ = NULL;
  return temp;
}
inline void ClientIncidentReport::set_allocated_extension_data(::safe_browsing::ClientIncidentReport_ExtensionData* extension_data) {
  delete extension_data_;
  extension_data_ = extension_data;
  if (extension_data) {
    set_has_extension_data();
  } else {
    clear_has_extension_data();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.extension_data)
}

// optional .safe_browsing.ClientIncidentReport.NonBinaryDownloadDetails non_binary_download = 9;
inline bool ClientIncidentReport::has_non_binary_download() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientIncidentReport::set_has_non_binary_download() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientIncidentReport::clear_has_non_binary_download() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientIncidentReport::clear_non_binary_download() {
  if (non_binary_download_ != NULL) non_binary_download_->::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails::Clear();
  clear_has_non_binary_download();
}
inline const ::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails& ClientIncidentReport::non_binary_download() const {
  const ::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails* p = non_binary_download_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentReport.non_binary_download)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails*>(
      &::safe_browsing::_ClientIncidentReport_NonBinaryDownloadDetails_default_instance_);
}
inline ::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails* ClientIncidentReport::mutable_non_binary_download() {
  set_has_non_binary_download();
  if (non_binary_download_ == NULL) {
    non_binary_download_ = new ::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentReport.non_binary_download)
  return non_binary_download_;
}
inline ::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails* ClientIncidentReport::release_non_binary_download() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentReport.non_binary_download)
  clear_has_non_binary_download();
  ::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails* temp = non_binary_download_;
  non_binary_download_ = NULL;
  return temp;
}
inline void ClientIncidentReport::set_allocated_non_binary_download(::safe_browsing::ClientIncidentReport_NonBinaryDownloadDetails* non_binary_download) {
  delete non_binary_download_;
  non_binary_download_ = non_binary_download;
  if (non_binary_download) {
    set_has_non_binary_download();
  } else {
    clear_has_non_binary_download();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentReport.non_binary_download)
}

// -------------------------------------------------------------------

// ClientIncidentResponse_EnvironmentRequest

// optional int32 dll_index = 1;
inline bool ClientIncidentResponse_EnvironmentRequest::has_dll_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentResponse_EnvironmentRequest::set_has_dll_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentResponse_EnvironmentRequest::clear_has_dll_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentResponse_EnvironmentRequest::clear_dll_index() {
  dll_index_ = 0;
  clear_has_dll_index();
}
inline ::google::protobuf::int32 ClientIncidentResponse_EnvironmentRequest::dll_index() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentResponse.EnvironmentRequest.dll_index)
  return dll_index_;
}
inline void ClientIncidentResponse_EnvironmentRequest::set_dll_index(::google::protobuf::int32 value) {
  set_has_dll_index();
  dll_index_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentResponse.EnvironmentRequest.dll_index)
}

// -------------------------------------------------------------------

// ClientIncidentResponse

// optional bytes token = 1;
inline bool ClientIncidentResponse::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientIncidentResponse::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientIncidentResponse::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientIncidentResponse::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& ClientIncidentResponse::token() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentResponse.token)
  return token_.GetNoArena();
}
inline void ClientIncidentResponse::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentResponse.token)
}
#if LANG_CXX11
inline void ClientIncidentResponse::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientIncidentResponse.token)
}
#endif
inline void ClientIncidentResponse::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientIncidentResponse.token)
}
inline void ClientIncidentResponse::set_token(const void* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientIncidentResponse.token)
}
inline ::std::string* ClientIncidentResponse::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentResponse.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientIncidentResponse::release_token() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientIncidentResponse.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientIncidentResponse::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientIncidentResponse.token)
}

// optional bool download_requested = 2;
inline bool ClientIncidentResponse::has_download_requested() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientIncidentResponse::set_has_download_requested() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientIncidentResponse::clear_has_download_requested() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientIncidentResponse::clear_download_requested() {
  download_requested_ = false;
  clear_has_download_requested();
}
inline bool ClientIncidentResponse::download_requested() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentResponse.download_requested)
  return download_requested_;
}
inline void ClientIncidentResponse::set_download_requested(bool value) {
  set_has_download_requested();
  download_requested_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientIncidentResponse.download_requested)
}

// repeated .safe_browsing.ClientIncidentResponse.EnvironmentRequest environment_requests = 3;
inline int ClientIncidentResponse::environment_requests_size() const {
  return environment_requests_.size();
}
inline void ClientIncidentResponse::clear_environment_requests() {
  environment_requests_.Clear();
}
inline const ::safe_browsing::ClientIncidentResponse_EnvironmentRequest& ClientIncidentResponse::environment_requests(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientIncidentResponse.environment_requests)
  return environment_requests_.Get(index);
}
inline ::safe_browsing::ClientIncidentResponse_EnvironmentRequest* ClientIncidentResponse::mutable_environment_requests(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientIncidentResponse.environment_requests)
  return environment_requests_.Mutable(index);
}
inline ::safe_browsing::ClientIncidentResponse_EnvironmentRequest* ClientIncidentResponse::add_environment_requests() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientIncidentResponse.environment_requests)
  return environment_requests_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentResponse_EnvironmentRequest >*
ClientIncidentResponse::mutable_environment_requests() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientIncidentResponse.environment_requests)
  return &environment_requests_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientIncidentResponse_EnvironmentRequest >&
ClientIncidentResponse::environment_requests() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientIncidentResponse.environment_requests)
  return environment_requests_;
}

// -------------------------------------------------------------------

// DownloadMetadata

// optional uint32 download_id = 1;
inline bool DownloadMetadata::has_download_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DownloadMetadata::set_has_download_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DownloadMetadata::clear_has_download_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DownloadMetadata::clear_download_id() {
  download_id_ = 0u;
  clear_has_download_id();
}
inline ::google::protobuf::uint32 DownloadMetadata::download_id() const {
  // @@protoc_insertion_point(field_get:safe_browsing.DownloadMetadata.download_id)
  return download_id_;
}
inline void DownloadMetadata::set_download_id(::google::protobuf::uint32 value) {
  set_has_download_id();
  download_id_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.DownloadMetadata.download_id)
}

// optional .safe_browsing.ClientIncidentReport.DownloadDetails download = 2;
inline bool DownloadMetadata::has_download() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DownloadMetadata::set_has_download() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DownloadMetadata::clear_has_download() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DownloadMetadata::clear_download() {
  if (download_ != NULL) download_->::safe_browsing::ClientIncidentReport_DownloadDetails::Clear();
  clear_has_download();
}
inline const ::safe_browsing::ClientIncidentReport_DownloadDetails& DownloadMetadata::download() const {
  const ::safe_browsing::ClientIncidentReport_DownloadDetails* p = download_;
  // @@protoc_insertion_point(field_get:safe_browsing.DownloadMetadata.download)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientIncidentReport_DownloadDetails*>(
      &::safe_browsing::_ClientIncidentReport_DownloadDetails_default_instance_);
}
inline ::safe_browsing::ClientIncidentReport_DownloadDetails* DownloadMetadata::mutable_download() {
  set_has_download();
  if (download_ == NULL) {
    download_ = new ::safe_browsing::ClientIncidentReport_DownloadDetails;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.DownloadMetadata.download)
  return download_;
}
inline ::safe_browsing::ClientIncidentReport_DownloadDetails* DownloadMetadata::release_download() {
  // @@protoc_insertion_point(field_release:safe_browsing.DownloadMetadata.download)
  clear_has_download();
  ::safe_browsing::ClientIncidentReport_DownloadDetails* temp = download_;
  download_ = NULL;
  return temp;
}
inline void DownloadMetadata::set_allocated_download(::safe_browsing::ClientIncidentReport_DownloadDetails* download) {
  delete download_;
  download_ = download;
  if (download) {
    set_has_download();
  } else {
    clear_has_download();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.DownloadMetadata.download)
}

// -------------------------------------------------------------------

// ClientSafeBrowsingReportRequest_HTTPHeader

// required bytes name = 1;
inline bool ClientSafeBrowsingReportRequest_HTTPHeader::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPHeader::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_HTTPHeader::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_HTTPHeader::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_HTTPHeader::name() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.name)
  return name_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_HTTPHeader::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.name)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_HTTPHeader::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.name)
}
#endif
inline void ClientSafeBrowsingReportRequest_HTTPHeader::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.name)
}
inline void ClientSafeBrowsingReportRequest_HTTPHeader::set_name(const void* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.name)
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPHeader::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPHeader::release_name() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_HTTPHeader::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.name)
}

// optional bytes value = 2;
inline bool ClientSafeBrowsingReportRequest_HTTPHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPHeader::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_HTTPHeader::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_HTTPHeader::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_HTTPHeader::value() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.value)
  return value_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_HTTPHeader::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.value)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_HTTPHeader::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.value)
}
#endif
inline void ClientSafeBrowsingReportRequest_HTTPHeader::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.value)
}
inline void ClientSafeBrowsingReportRequest_HTTPHeader::set_value(const void* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.value)
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPHeader::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPHeader::release_value() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_HTTPHeader::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader.value)
}

// -------------------------------------------------------------------

// ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine

// optional bytes verb = 1;
inline bool ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::has_verb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_has_verb() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::clear_has_verb() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::clear_verb() {
  verb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verb();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::verb() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.verb)
  return verb_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_verb(const ::std::string& value) {
  set_has_verb();
  verb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.verb)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_verb(::std::string&& value) {
  set_has_verb();
  verb_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.verb)
}
#endif
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_verb(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verb();
  verb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.verb)
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_verb(const void* value, size_t size) {
  set_has_verb();
  verb_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.verb)
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::mutable_verb() {
  set_has_verb();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.verb)
  return verb_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::release_verb() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.verb)
  clear_has_verb();
  return verb_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_allocated_verb(::std::string* verb) {
  if (verb != NULL) {
    set_has_verb();
  } else {
    clear_has_verb();
  }
  verb_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verb);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.verb)
}

// optional bytes uri = 2;
inline bool ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::has_uri() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_has_uri() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::clear_has_uri() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::clear_uri() {
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uri();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::uri() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.uri)
  return uri_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_uri(const ::std::string& value) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.uri)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_uri(::std::string&& value) {
  set_has_uri();
  uri_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.uri)
}
#endif
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_uri(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.uri)
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_uri(const void* value, size_t size) {
  set_has_uri();
  uri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.uri)
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::mutable_uri() {
  set_has_uri();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.uri)
  return uri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::release_uri() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.uri)
  clear_has_uri();
  return uri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_allocated_uri(::std::string* uri) {
  if (uri != NULL) {
    set_has_uri();
  } else {
    clear_has_uri();
  }
  uri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uri);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.uri)
}

// optional bytes version = 3;
inline bool ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::has_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_has_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::clear_has_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::version() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.version)
  return version_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.version)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.version)
}
#endif
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.version)
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_version(const void* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.version)
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::release_version() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine.version)
}

// -------------------------------------------------------------------

// ClientSafeBrowsingReportRequest_HTTPRequest

// optional .safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.FirstLine firstline = 1;
inline bool ClientSafeBrowsingReportRequest_HTTPRequest::has_firstline() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_has_firstline() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::clear_has_firstline() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::clear_firstline() {
  if (firstline_ != NULL) firstline_->::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine::Clear();
  clear_has_firstline();
}
inline const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine& ClientSafeBrowsingReportRequest_HTTPRequest::firstline() const {
  const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* p = firstline_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.firstline)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine*>(
      &::safe_browsing::_ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine_default_instance_);
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* ClientSafeBrowsingReportRequest_HTTPRequest::mutable_firstline() {
  set_has_firstline();
  if (firstline_ == NULL) {
    firstline_ = new ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.firstline)
  return firstline_;
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* ClientSafeBrowsingReportRequest_HTTPRequest::release_firstline() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.firstline)
  clear_has_firstline();
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* temp = firstline_;
  firstline_ = NULL;
  return temp;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_allocated_firstline(::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest_FirstLine* firstline) {
  delete firstline_;
  firstline_ = firstline;
  if (firstline) {
    set_has_firstline();
  } else {
    clear_has_firstline();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.firstline)
}

// repeated .safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader headers = 2;
inline int ClientSafeBrowsingReportRequest_HTTPRequest::headers_size() const {
  return headers_.size();
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::clear_headers() {
  headers_.Clear();
}
inline const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader& ClientSafeBrowsingReportRequest_HTTPRequest::headers(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.headers)
  return headers_.Get(index);
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader* ClientSafeBrowsingReportRequest_HTTPRequest::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.headers)
  return headers_.Mutable(index);
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader* ClientSafeBrowsingReportRequest_HTTPRequest::add_headers() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.headers)
  return headers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader >*
ClientSafeBrowsingReportRequest_HTTPRequest::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.headers)
  return &headers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader >&
ClientSafeBrowsingReportRequest_HTTPRequest::headers() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.headers)
  return headers_;
}

// optional bytes body = 3;
inline bool ClientSafeBrowsingReportRequest_HTTPRequest::has_body() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_has_body() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::clear_has_body() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_HTTPRequest::body() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.body)
  return body_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.body)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_body(::std::string&& value) {
  set_has_body();
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.body)
}
#endif
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.body)
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_body(const void* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.body)
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPRequest::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPRequest::release_body() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.body)
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.body)
}

// optional bytes bodydigest = 4;
inline bool ClientSafeBrowsingReportRequest_HTTPRequest::has_bodydigest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_has_bodydigest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::clear_has_bodydigest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::clear_bodydigest() {
  bodydigest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bodydigest();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_HTTPRequest::bodydigest() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.bodydigest)
  return bodydigest_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_bodydigest(const ::std::string& value) {
  set_has_bodydigest();
  bodydigest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.bodydigest)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_bodydigest(::std::string&& value) {
  set_has_bodydigest();
  bodydigest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.bodydigest)
}
#endif
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_bodydigest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bodydigest();
  bodydigest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.bodydigest)
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_bodydigest(const void* value, size_t size) {
  set_has_bodydigest();
  bodydigest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.bodydigest)
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPRequest::mutable_bodydigest() {
  set_has_bodydigest();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.bodydigest)
  return bodydigest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPRequest::release_bodydigest() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.bodydigest)
  clear_has_bodydigest();
  return bodydigest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_allocated_bodydigest(::std::string* bodydigest) {
  if (bodydigest != NULL) {
    set_has_bodydigest();
  } else {
    clear_has_bodydigest();
  }
  bodydigest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bodydigest);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.bodydigest)
}

// optional int32 bodylength = 5;
inline bool ClientSafeBrowsingReportRequest_HTTPRequest::has_bodylength() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_has_bodylength() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::clear_has_bodylength() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::clear_bodylength() {
  bodylength_ = 0;
  clear_has_bodylength();
}
inline ::google::protobuf::int32 ClientSafeBrowsingReportRequest_HTTPRequest::bodylength() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.bodylength)
  return bodylength_;
}
inline void ClientSafeBrowsingReportRequest_HTTPRequest::set_bodylength(::google::protobuf::int32 value) {
  set_has_bodylength();
  bodylength_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest.bodylength)
}

// -------------------------------------------------------------------

// ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine

// optional int32 code = 1;
inline bool ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::code() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.code)
  return code_;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.code)
}

// optional bytes message = 2;
inline bool ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::message() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.message)
  return message_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.message)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.message)
}
#endif
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.message)
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_message(const void* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.message)
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::release_message() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.message)
}

// optional bytes version = 3;
inline bool ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::version() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.version)
  return version_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.version)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.version)
}
#endif
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.version)
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_version(const void* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.version)
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::release_version() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine.version)
}

// -------------------------------------------------------------------

// ClientSafeBrowsingReportRequest_HTTPResponse

// optional .safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.FirstLine firstline = 1;
inline bool ClientSafeBrowsingReportRequest_HTTPResponse::has_firstline() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_has_firstline() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::clear_has_firstline() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::clear_firstline() {
  if (firstline_ != NULL) firstline_->::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine::Clear();
  clear_has_firstline();
}
inline const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine& ClientSafeBrowsingReportRequest_HTTPResponse::firstline() const {
  const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* p = firstline_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.firstline)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine*>(
      &::safe_browsing::_ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine_default_instance_);
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* ClientSafeBrowsingReportRequest_HTTPResponse::mutable_firstline() {
  set_has_firstline();
  if (firstline_ == NULL) {
    firstline_ = new ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.firstline)
  return firstline_;
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* ClientSafeBrowsingReportRequest_HTTPResponse::release_firstline() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.firstline)
  clear_has_firstline();
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* temp = firstline_;
  firstline_ = NULL;
  return temp;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_allocated_firstline(::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse_FirstLine* firstline) {
  delete firstline_;
  firstline_ = firstline;
  if (firstline) {
    set_has_firstline();
  } else {
    clear_has_firstline();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.firstline)
}

// repeated .safe_browsing.ClientSafeBrowsingReportRequest.HTTPHeader headers = 2;
inline int ClientSafeBrowsingReportRequest_HTTPResponse::headers_size() const {
  return headers_.size();
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::clear_headers() {
  headers_.Clear();
}
inline const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader& ClientSafeBrowsingReportRequest_HTTPResponse::headers(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.headers)
  return headers_.Get(index);
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader* ClientSafeBrowsingReportRequest_HTTPResponse::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.headers)
  return headers_.Mutable(index);
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader* ClientSafeBrowsingReportRequest_HTTPResponse::add_headers() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.headers)
  return headers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader >*
ClientSafeBrowsingReportRequest_HTTPResponse::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.headers)
  return &headers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPHeader >&
ClientSafeBrowsingReportRequest_HTTPResponse::headers() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.headers)
  return headers_;
}

// optional bytes body = 3;
inline bool ClientSafeBrowsingReportRequest_HTTPResponse::has_body() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_has_body() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::clear_has_body() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_HTTPResponse::body() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.body)
  return body_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.body)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_body(::std::string&& value) {
  set_has_body();
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.body)
}
#endif
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.body)
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_body(const void* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.body)
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPResponse::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPResponse::release_body() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.body)
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.body)
}

// optional bytes bodydigest = 4;
inline bool ClientSafeBrowsingReportRequest_HTTPResponse::has_bodydigest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_has_bodydigest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::clear_has_bodydigest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::clear_bodydigest() {
  bodydigest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bodydigest();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_HTTPResponse::bodydigest() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.bodydigest)
  return bodydigest_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_bodydigest(const ::std::string& value) {
  set_has_bodydigest();
  bodydigest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.bodydigest)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_bodydigest(::std::string&& value) {
  set_has_bodydigest();
  bodydigest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.bodydigest)
}
#endif
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_bodydigest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bodydigest();
  bodydigest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.bodydigest)
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_bodydigest(const void* value, size_t size) {
  set_has_bodydigest();
  bodydigest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.bodydigest)
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPResponse::mutable_bodydigest() {
  set_has_bodydigest();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.bodydigest)
  return bodydigest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPResponse::release_bodydigest() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.bodydigest)
  clear_has_bodydigest();
  return bodydigest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_allocated_bodydigest(::std::string* bodydigest) {
  if (bodydigest != NULL) {
    set_has_bodydigest();
  } else {
    clear_has_bodydigest();
  }
  bodydigest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bodydigest);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.bodydigest)
}

// optional int32 bodylength = 5;
inline bool ClientSafeBrowsingReportRequest_HTTPResponse::has_bodylength() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_has_bodylength() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::clear_has_bodylength() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::clear_bodylength() {
  bodylength_ = 0;
  clear_has_bodylength();
}
inline ::google::protobuf::int32 ClientSafeBrowsingReportRequest_HTTPResponse::bodylength() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.bodylength)
  return bodylength_;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_bodylength(::google::protobuf::int32 value) {
  set_has_bodylength();
  bodylength_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.bodylength)
}

// optional bytes remote_ip = 6;
inline bool ClientSafeBrowsingReportRequest_HTTPResponse::has_remote_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_has_remote_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::clear_has_remote_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::clear_remote_ip() {
  remote_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_remote_ip();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_HTTPResponse::remote_ip() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.remote_ip)
  return remote_ip_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_remote_ip(const ::std::string& value) {
  set_has_remote_ip();
  remote_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.remote_ip)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_remote_ip(::std::string&& value) {
  set_has_remote_ip();
  remote_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.remote_ip)
}
#endif
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_remote_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_remote_ip();
  remote_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.remote_ip)
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_remote_ip(const void* value, size_t size) {
  set_has_remote_ip();
  remote_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.remote_ip)
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPResponse::mutable_remote_ip() {
  set_has_remote_ip();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.remote_ip)
  return remote_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_HTTPResponse::release_remote_ip() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.remote_ip)
  clear_has_remote_ip();
  return remote_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_HTTPResponse::set_allocated_remote_ip(::std::string* remote_ip) {
  if (remote_ip != NULL) {
    set_has_remote_ip();
  } else {
    clear_has_remote_ip();
  }
  remote_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remote_ip);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse.remote_ip)
}

// -------------------------------------------------------------------

// ClientSafeBrowsingReportRequest_Resource

// required int32 id = 1;
inline bool ClientSafeBrowsingReportRequest_Resource::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientSafeBrowsingReportRequest_Resource::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ClientSafeBrowsingReportRequest_Resource::id() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.Resource.id)
  return id_;
}
inline void ClientSafeBrowsingReportRequest_Resource::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.Resource.id)
}

// optional string url = 2;
inline bool ClientSafeBrowsingReportRequest_Resource::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSafeBrowsingReportRequest_Resource::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_Resource::url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.Resource.url)
  return url_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_Resource::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.Resource.url)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_Resource::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.Resource.url)
}
#endif
inline void ClientSafeBrowsingReportRequest_Resource::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.Resource.url)
}
inline void ClientSafeBrowsingReportRequest_Resource::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.Resource.url)
}
inline ::std::string* ClientSafeBrowsingReportRequest_Resource::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.Resource.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_Resource::release_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.Resource.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_Resource::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.Resource.url)
}

// optional .safe_browsing.ClientSafeBrowsingReportRequest.HTTPRequest request = 3;
inline bool ClientSafeBrowsingReportRequest_Resource::has_request() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientSafeBrowsingReportRequest_Resource::set_has_request() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_has_request() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_request() {
  if (request_ != NULL) request_->::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest::Clear();
  clear_has_request();
}
inline const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest& ClientSafeBrowsingReportRequest_Resource::request() const {
  const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest* p = request_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.Resource.request)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest*>(
      &::safe_browsing::_ClientSafeBrowsingReportRequest_HTTPRequest_default_instance_);
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest* ClientSafeBrowsingReportRequest_Resource::mutable_request() {
  set_has_request();
  if (request_ == NULL) {
    request_ = new ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.Resource.request)
  return request_;
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest* ClientSafeBrowsingReportRequest_Resource::release_request() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.Resource.request)
  clear_has_request();
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest* temp = request_;
  request_ = NULL;
  return temp;
}
inline void ClientSafeBrowsingReportRequest_Resource::set_allocated_request(::safe_browsing::ClientSafeBrowsingReportRequest_HTTPRequest* request) {
  delete request_;
  request_ = request;
  if (request) {
    set_has_request();
  } else {
    clear_has_request();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.Resource.request)
}

// optional .safe_browsing.ClientSafeBrowsingReportRequest.HTTPResponse response = 4;
inline bool ClientSafeBrowsingReportRequest_Resource::has_response() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientSafeBrowsingReportRequest_Resource::set_has_response() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_has_response() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_response() {
  if (response_ != NULL) response_->::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse::Clear();
  clear_has_response();
}
inline const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse& ClientSafeBrowsingReportRequest_Resource::response() const {
  const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse* p = response_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.Resource.response)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse*>(
      &::safe_browsing::_ClientSafeBrowsingReportRequest_HTTPResponse_default_instance_);
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse* ClientSafeBrowsingReportRequest_Resource::mutable_response() {
  set_has_response();
  if (response_ == NULL) {
    response_ = new ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.Resource.response)
  return response_;
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse* ClientSafeBrowsingReportRequest_Resource::release_response() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.Resource.response)
  clear_has_response();
  ::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse* temp = response_;
  response_ = NULL;
  return temp;
}
inline void ClientSafeBrowsingReportRequest_Resource::set_allocated_response(::safe_browsing::ClientSafeBrowsingReportRequest_HTTPResponse* response) {
  delete response_;
  response_ = response;
  if (response) {
    set_has_response();
  } else {
    clear_has_response();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.Resource.response)
}

// optional int32 parent_id = 5;
inline bool ClientSafeBrowsingReportRequest_Resource::has_parent_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientSafeBrowsingReportRequest_Resource::set_has_parent_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_has_parent_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_parent_id() {
  parent_id_ = 0;
  clear_has_parent_id();
}
inline ::google::protobuf::int32 ClientSafeBrowsingReportRequest_Resource::parent_id() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.Resource.parent_id)
  return parent_id_;
}
inline void ClientSafeBrowsingReportRequest_Resource::set_parent_id(::google::protobuf::int32 value) {
  set_has_parent_id();
  parent_id_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.Resource.parent_id)
}

// repeated int32 child_ids = 6;
inline int ClientSafeBrowsingReportRequest_Resource::child_ids_size() const {
  return child_ids_.size();
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_child_ids() {
  child_ids_.Clear();
}
inline ::google::protobuf::int32 ClientSafeBrowsingReportRequest_Resource::child_ids(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.Resource.child_ids)
  return child_ids_.Get(index);
}
inline void ClientSafeBrowsingReportRequest_Resource::set_child_ids(int index, ::google::protobuf::int32 value) {
  child_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.Resource.child_ids)
}
inline void ClientSafeBrowsingReportRequest_Resource::add_child_ids(::google::protobuf::int32 value) {
  child_ids_.Add(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ClientSafeBrowsingReportRequest.Resource.child_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientSafeBrowsingReportRequest_Resource::child_ids() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientSafeBrowsingReportRequest.Resource.child_ids)
  return child_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientSafeBrowsingReportRequest_Resource::mutable_child_ids() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientSafeBrowsingReportRequest.Resource.child_ids)
  return &child_ids_;
}

// optional string tag_name = 7;
inline bool ClientSafeBrowsingReportRequest_Resource::has_tag_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientSafeBrowsingReportRequest_Resource::set_has_tag_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_has_tag_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_Resource::clear_tag_name() {
  tag_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag_name();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_Resource::tag_name() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.Resource.tag_name)
  return tag_name_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_Resource::set_tag_name(const ::std::string& value) {
  set_has_tag_name();
  tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.Resource.tag_name)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_Resource::set_tag_name(::std::string&& value) {
  set_has_tag_name();
  tag_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.Resource.tag_name)
}
#endif
inline void ClientSafeBrowsingReportRequest_Resource::set_tag_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag_name();
  tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.Resource.tag_name)
}
inline void ClientSafeBrowsingReportRequest_Resource::set_tag_name(const char* value, size_t size) {
  set_has_tag_name();
  tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.Resource.tag_name)
}
inline ::std::string* ClientSafeBrowsingReportRequest_Resource::mutable_tag_name() {
  set_has_tag_name();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.Resource.tag_name)
  return tag_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_Resource::release_tag_name() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.Resource.tag_name)
  clear_has_tag_name();
  return tag_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_Resource::set_allocated_tag_name(::std::string* tag_name) {
  if (tag_name != NULL) {
    set_has_tag_name();
  } else {
    clear_has_tag_name();
  }
  tag_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag_name);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.Resource.tag_name)
}

// -------------------------------------------------------------------

// ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties

// optional string client_version = 1;
inline bool ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::has_client_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::set_has_client_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_version();
}
inline const ::std::string& ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::client_version() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.client_version)
  return client_version_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::set_client_version(const ::std::string& value) {
  set_has_client_version();
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.client_version)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::set_client_version(::std::string&& value) {
  set_has_client_version();
  client_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.client_version)
}
#endif
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::set_client_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_version();
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.client_version)
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::set_client_version(const char* value, size_t size) {
  set_has_client_version();
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.client_version)
}
inline ::std::string* ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::mutable_client_version() {
  set_has_client_version();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::release_client_version() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.client_version)
  clear_has_client_version();
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    set_has_client_version();
  } else {
    clear_has_client_version();
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.client_version)
}

// optional int64 google_play_services_version = 2;
inline bool ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::has_google_play_services_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::set_has_google_play_services_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::clear_has_google_play_services_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::clear_google_play_services_version() {
  google_play_services_version_ = GOOGLE_LONGLONG(0);
  clear_has_google_play_services_version();
}
inline ::google::protobuf::int64 ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::google_play_services_version() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.google_play_services_version)
  return google_play_services_version_;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::set_google_play_services_version(::google::protobuf::int64 value) {
  set_has_google_play_services_version();
  google_play_services_version_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.google_play_services_version)
}

// optional bool is_instant_apps = 3;
inline bool ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::has_is_instant_apps() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::set_has_is_instant_apps() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::clear_has_is_instant_apps() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::clear_is_instant_apps() {
  is_instant_apps_ = false;
  clear_has_is_instant_apps();
}
inline bool ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::is_instant_apps() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.is_instant_apps)
  return is_instant_apps_;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::set_is_instant_apps(bool value) {
  set_has_is_instant_apps();
  is_instant_apps_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.is_instant_apps)
}

// optional .safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingUrlApiType url_api_type = 4;
inline bool ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::has_url_api_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::set_has_url_api_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::clear_has_url_api_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::clear_url_api_type() {
  url_api_type_ = 0;
  clear_has_url_api_type();
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::url_api_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.url_api_type)
  return static_cast< ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType >(url_api_type_);
}
inline void ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::set_url_api_type(::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType value) {
  assert(::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType_IsValid(value));
  set_has_url_api_type();
  url_api_type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties.url_api_type)
}

// -------------------------------------------------------------------

// ClientSafeBrowsingReportRequest

// optional .safe_browsing.ClientSafeBrowsingReportRequest.ReportType type = 10;
inline bool ClientSafeBrowsingReportRequest::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ClientSafeBrowsingReportRequest::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ClientSafeBrowsingReportRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ClientSafeBrowsingReportRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_ReportType ClientSafeBrowsingReportRequest::type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.type)
  return static_cast< ::safe_browsing::ClientSafeBrowsingReportRequest_ReportType >(type_);
}
inline void ClientSafeBrowsingReportRequest::set_type(::safe_browsing::ClientSafeBrowsingReportRequest_ReportType value) {
  assert(::safe_browsing::ClientSafeBrowsingReportRequest_ReportType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.type)
}

// optional .safe_browsing.ClientDownloadResponse.Verdict download_verdict = 11;
inline bool ClientSafeBrowsingReportRequest::has_download_verdict() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ClientSafeBrowsingReportRequest::set_has_download_verdict() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ClientSafeBrowsingReportRequest::clear_has_download_verdict() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ClientSafeBrowsingReportRequest::clear_download_verdict() {
  download_verdict_ = 0;
  clear_has_download_verdict();
}
inline ::safe_browsing::ClientDownloadResponse_Verdict ClientSafeBrowsingReportRequest::download_verdict() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.download_verdict)
  return static_cast< ::safe_browsing::ClientDownloadResponse_Verdict >(download_verdict_);
}
inline void ClientSafeBrowsingReportRequest::set_download_verdict(::safe_browsing::ClientDownloadResponse_Verdict value) {
  assert(::safe_browsing::ClientDownloadResponse_Verdict_IsValid(value));
  set_has_download_verdict();
  download_verdict_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.download_verdict)
}

// optional string url = 1;
inline bool ClientSafeBrowsingReportRequest::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientSafeBrowsingReportRequest::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientSafeBrowsingReportRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientSafeBrowsingReportRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& ClientSafeBrowsingReportRequest::url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.url)
  return url_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.url)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.url)
}
#endif
inline void ClientSafeBrowsingReportRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.url)
}
inline void ClientSafeBrowsingReportRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.url)
}
inline ::std::string* ClientSafeBrowsingReportRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest::release_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.url)
}

// optional string page_url = 2;
inline bool ClientSafeBrowsingReportRequest::has_page_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientSafeBrowsingReportRequest::set_has_page_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientSafeBrowsingReportRequest::clear_has_page_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientSafeBrowsingReportRequest::clear_page_url() {
  page_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_page_url();
}
inline const ::std::string& ClientSafeBrowsingReportRequest::page_url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.page_url)
  return page_url_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest::set_page_url(const ::std::string& value) {
  set_has_page_url();
  page_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.page_url)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest::set_page_url(::std::string&& value) {
  set_has_page_url();
  page_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.page_url)
}
#endif
inline void ClientSafeBrowsingReportRequest::set_page_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_page_url();
  page_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.page_url)
}
inline void ClientSafeBrowsingReportRequest::set_page_url(const char* value, size_t size) {
  set_has_page_url();
  page_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.page_url)
}
inline ::std::string* ClientSafeBrowsingReportRequest::mutable_page_url() {
  set_has_page_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.page_url)
  return page_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest::release_page_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.page_url)
  clear_has_page_url();
  return page_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest::set_allocated_page_url(::std::string* page_url) {
  if (page_url != NULL) {
    set_has_page_url();
  } else {
    clear_has_page_url();
  }
  page_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.page_url)
}

// optional string referrer_url = 3;
inline bool ClientSafeBrowsingReportRequest::has_referrer_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientSafeBrowsingReportRequest::set_has_referrer_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientSafeBrowsingReportRequest::clear_has_referrer_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientSafeBrowsingReportRequest::clear_referrer_url() {
  referrer_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_referrer_url();
}
inline const ::std::string& ClientSafeBrowsingReportRequest::referrer_url() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.referrer_url)
  return referrer_url_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest::set_referrer_url(const ::std::string& value) {
  set_has_referrer_url();
  referrer_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.referrer_url)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest::set_referrer_url(::std::string&& value) {
  set_has_referrer_url();
  referrer_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.referrer_url)
}
#endif
inline void ClientSafeBrowsingReportRequest::set_referrer_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_referrer_url();
  referrer_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.referrer_url)
}
inline void ClientSafeBrowsingReportRequest::set_referrer_url(const char* value, size_t size) {
  set_has_referrer_url();
  referrer_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.referrer_url)
}
inline ::std::string* ClientSafeBrowsingReportRequest::mutable_referrer_url() {
  set_has_referrer_url();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.referrer_url)
  return referrer_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest::release_referrer_url() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.referrer_url)
  clear_has_referrer_url();
  return referrer_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest::set_allocated_referrer_url(::std::string* referrer_url) {
  if (referrer_url != NULL) {
    set_has_referrer_url();
  } else {
    clear_has_referrer_url();
  }
  referrer_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referrer_url);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.referrer_url)
}

// repeated .safe_browsing.ClientSafeBrowsingReportRequest.Resource resources = 4;
inline int ClientSafeBrowsingReportRequest::resources_size() const {
  return resources_.size();
}
inline void ClientSafeBrowsingReportRequest::clear_resources() {
  resources_.Clear();
}
inline const ::safe_browsing::ClientSafeBrowsingReportRequest_Resource& ClientSafeBrowsingReportRequest::resources(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.resources)
  return resources_.Get(index);
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_Resource* ClientSafeBrowsingReportRequest::mutable_resources(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.resources)
  return resources_.Mutable(index);
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_Resource* ClientSafeBrowsingReportRequest::add_resources() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientSafeBrowsingReportRequest.resources)
  return resources_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_Resource >*
ClientSafeBrowsingReportRequest::mutable_resources() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientSafeBrowsingReportRequest.resources)
  return &resources_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::ClientSafeBrowsingReportRequest_Resource >&
ClientSafeBrowsingReportRequest::resources() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientSafeBrowsingReportRequest.resources)
  return resources_;
}

// repeated .safe_browsing.HTMLElement dom = 16;
inline int ClientSafeBrowsingReportRequest::dom_size() const {
  return dom_.size();
}
inline void ClientSafeBrowsingReportRequest::clear_dom() {
  dom_.Clear();
}
inline const ::safe_browsing::HTMLElement& ClientSafeBrowsingReportRequest::dom(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.dom)
  return dom_.Get(index);
}
inline ::safe_browsing::HTMLElement* ClientSafeBrowsingReportRequest::mutable_dom(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.dom)
  return dom_.Mutable(index);
}
inline ::safe_browsing::HTMLElement* ClientSafeBrowsingReportRequest::add_dom() {
  // @@protoc_insertion_point(field_add:safe_browsing.ClientSafeBrowsingReportRequest.dom)
  return dom_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::HTMLElement >*
ClientSafeBrowsingReportRequest::mutable_dom() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientSafeBrowsingReportRequest.dom)
  return &dom_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::HTMLElement >&
ClientSafeBrowsingReportRequest::dom() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientSafeBrowsingReportRequest.dom)
  return dom_;
}

// optional bool complete = 5;
inline bool ClientSafeBrowsingReportRequest::has_complete() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ClientSafeBrowsingReportRequest::set_has_complete() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ClientSafeBrowsingReportRequest::clear_has_complete() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ClientSafeBrowsingReportRequest::clear_complete() {
  complete_ = false;
  clear_has_complete();
}
inline bool ClientSafeBrowsingReportRequest::complete() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.complete)
  return complete_;
}
inline void ClientSafeBrowsingReportRequest::set_complete(bool value) {
  set_has_complete();
  complete_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.complete)
}

// repeated string client_asn = 6;
inline int ClientSafeBrowsingReportRequest::client_asn_size() const {
  return client_asn_.size();
}
inline void ClientSafeBrowsingReportRequest::clear_client_asn() {
  client_asn_.Clear();
}
inline const ::std::string& ClientSafeBrowsingReportRequest::client_asn(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
  return client_asn_.Get(index);
}
inline ::std::string* ClientSafeBrowsingReportRequest::mutable_client_asn(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
  return client_asn_.Mutable(index);
}
inline void ClientSafeBrowsingReportRequest::set_client_asn(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
  client_asn_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest::set_client_asn(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
  client_asn_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ClientSafeBrowsingReportRequest::set_client_asn(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  client_asn_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
}
inline void ClientSafeBrowsingReportRequest::set_client_asn(int index, const char* value, size_t size) {
  client_asn_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
}
inline ::std::string* ClientSafeBrowsingReportRequest::add_client_asn() {
  // @@protoc_insertion_point(field_add_mutable:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
  return client_asn_.Add();
}
inline void ClientSafeBrowsingReportRequest::add_client_asn(const ::std::string& value) {
  client_asn_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest::add_client_asn(::std::string&& value) {
  client_asn_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
}
#endif
inline void ClientSafeBrowsingReportRequest::add_client_asn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  client_asn_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
}
inline void ClientSafeBrowsingReportRequest::add_client_asn(const char* value, size_t size) {
  client_asn_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientSafeBrowsingReportRequest::client_asn() const {
  // @@protoc_insertion_point(field_list:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
  return client_asn_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientSafeBrowsingReportRequest::mutable_client_asn() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.ClientSafeBrowsingReportRequest.client_asn)
  return &client_asn_;
}

// optional string client_country = 7;
inline bool ClientSafeBrowsingReportRequest::has_client_country() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientSafeBrowsingReportRequest::set_has_client_country() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientSafeBrowsingReportRequest::clear_has_client_country() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientSafeBrowsingReportRequest::clear_client_country() {
  client_country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_country();
}
inline const ::std::string& ClientSafeBrowsingReportRequest::client_country() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.client_country)
  return client_country_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest::set_client_country(const ::std::string& value) {
  set_has_client_country();
  client_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.client_country)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest::set_client_country(::std::string&& value) {
  set_has_client_country();
  client_country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.client_country)
}
#endif
inline void ClientSafeBrowsingReportRequest::set_client_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_country();
  client_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.client_country)
}
inline void ClientSafeBrowsingReportRequest::set_client_country(const char* value, size_t size) {
  set_has_client_country();
  client_country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.client_country)
}
inline ::std::string* ClientSafeBrowsingReportRequest::mutable_client_country() {
  set_has_client_country();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.client_country)
  return client_country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest::release_client_country() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.client_country)
  clear_has_client_country();
  return client_country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest::set_allocated_client_country(::std::string* client_country) {
  if (client_country != NULL) {
    set_has_client_country();
  } else {
    clear_has_client_country();
  }
  client_country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_country);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.client_country)
}

// optional bool did_proceed = 8;
inline bool ClientSafeBrowsingReportRequest::has_did_proceed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ClientSafeBrowsingReportRequest::set_has_did_proceed() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ClientSafeBrowsingReportRequest::clear_has_did_proceed() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ClientSafeBrowsingReportRequest::clear_did_proceed() {
  did_proceed_ = false;
  clear_has_did_proceed();
}
inline bool ClientSafeBrowsingReportRequest::did_proceed() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.did_proceed)
  return did_proceed_;
}
inline void ClientSafeBrowsingReportRequest::set_did_proceed(bool value) {
  set_has_did_proceed();
  did_proceed_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.did_proceed)
}

// optional bool repeat_visit = 9;
inline bool ClientSafeBrowsingReportRequest::has_repeat_visit() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ClientSafeBrowsingReportRequest::set_has_repeat_visit() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ClientSafeBrowsingReportRequest::clear_has_repeat_visit() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ClientSafeBrowsingReportRequest::clear_repeat_visit() {
  repeat_visit_ = false;
  clear_has_repeat_visit();
}
inline bool ClientSafeBrowsingReportRequest::repeat_visit() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.repeat_visit)
  return repeat_visit_;
}
inline void ClientSafeBrowsingReportRequest::set_repeat_visit(bool value) {
  set_has_repeat_visit();
  repeat_visit_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.repeat_visit)
}

// optional bytes token = 15;
inline bool ClientSafeBrowsingReportRequest::has_token() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ClientSafeBrowsingReportRequest::set_has_token() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ClientSafeBrowsingReportRequest::clear_has_token() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ClientSafeBrowsingReportRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& ClientSafeBrowsingReportRequest::token() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.token)
  return token_.GetNoArena();
}
inline void ClientSafeBrowsingReportRequest::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.token)
}
#if LANG_CXX11
inline void ClientSafeBrowsingReportRequest::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ClientSafeBrowsingReportRequest.token)
}
#endif
inline void ClientSafeBrowsingReportRequest::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ClientSafeBrowsingReportRequest.token)
}
inline void ClientSafeBrowsingReportRequest::set_token(const void* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ClientSafeBrowsingReportRequest.token)
}
inline ::std::string* ClientSafeBrowsingReportRequest::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientSafeBrowsingReportRequest::release_token() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientSafeBrowsingReportRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.token)
}

// optional .safe_browsing.ClientSafeBrowsingReportRequest.SafeBrowsingClientProperties client_properties = 17;
inline bool ClientSafeBrowsingReportRequest::has_client_properties() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ClientSafeBrowsingReportRequest::set_has_client_properties() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ClientSafeBrowsingReportRequest::clear_has_client_properties() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ClientSafeBrowsingReportRequest::clear_client_properties() {
  if (client_properties_ != NULL) client_properties_->::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties::Clear();
  clear_has_client_properties();
}
inline const ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties& ClientSafeBrowsingReportRequest::client_properties() const {
  const ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* p = client_properties_;
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.client_properties)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties*>(
      &::safe_browsing::_ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties_default_instance_);
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* ClientSafeBrowsingReportRequest::mutable_client_properties() {
  set_has_client_properties();
  if (client_properties_ == NULL) {
    client_properties_ = new ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ClientSafeBrowsingReportRequest.client_properties)
  return client_properties_;
}
inline ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* ClientSafeBrowsingReportRequest::release_client_properties() {
  // @@protoc_insertion_point(field_release:safe_browsing.ClientSafeBrowsingReportRequest.client_properties)
  clear_has_client_properties();
  ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* temp = client_properties_;
  client_properties_ = NULL;
  return temp;
}
inline void ClientSafeBrowsingReportRequest::set_allocated_client_properties(::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingClientProperties* client_properties) {
  delete client_properties_;
  client_properties_ = client_properties;
  if (client_properties) {
    set_has_client_properties();
  } else {
    clear_has_client_properties();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ClientSafeBrowsingReportRequest.client_properties)
}

// optional bool show_download_in_folder = 18;
inline bool ClientSafeBrowsingReportRequest::has_show_download_in_folder() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ClientSafeBrowsingReportRequest::set_has_show_download_in_folder() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ClientSafeBrowsingReportRequest::clear_has_show_download_in_folder() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ClientSafeBrowsingReportRequest::clear_show_download_in_folder() {
  show_download_in_folder_ = false;
  clear_has_show_download_in_folder();
}
inline bool ClientSafeBrowsingReportRequest::show_download_in_folder() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ClientSafeBrowsingReportRequest.show_download_in_folder)
  return show_download_in_folder_;
}
inline void ClientSafeBrowsingReportRequest::set_show_download_in_folder(bool value) {
  set_has_show_download_in_folder();
  show_download_in_folder_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ClientSafeBrowsingReportRequest.show_download_in_folder)
}

// -------------------------------------------------------------------

// HTMLElement_Attribute

// optional string name = 1;
inline bool HTMLElement_Attribute::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HTMLElement_Attribute::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HTMLElement_Attribute::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HTMLElement_Attribute::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& HTMLElement_Attribute::name() const {
  // @@protoc_insertion_point(field_get:safe_browsing.HTMLElement.Attribute.name)
  return name_.GetNoArena();
}
inline void HTMLElement_Attribute::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.HTMLElement.Attribute.name)
}
#if LANG_CXX11
inline void HTMLElement_Attribute::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.HTMLElement.Attribute.name)
}
#endif
inline void HTMLElement_Attribute::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.HTMLElement.Attribute.name)
}
inline void HTMLElement_Attribute::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.HTMLElement.Attribute.name)
}
inline ::std::string* HTMLElement_Attribute::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:safe_browsing.HTMLElement.Attribute.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HTMLElement_Attribute::release_name() {
  // @@protoc_insertion_point(field_release:safe_browsing.HTMLElement.Attribute.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HTMLElement_Attribute::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.HTMLElement.Attribute.name)
}

// optional string value = 2;
inline bool HTMLElement_Attribute::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HTMLElement_Attribute::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HTMLElement_Attribute::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HTMLElement_Attribute::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& HTMLElement_Attribute::value() const {
  // @@protoc_insertion_point(field_get:safe_browsing.HTMLElement.Attribute.value)
  return value_.GetNoArena();
}
inline void HTMLElement_Attribute::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.HTMLElement.Attribute.value)
}
#if LANG_CXX11
inline void HTMLElement_Attribute::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.HTMLElement.Attribute.value)
}
#endif
inline void HTMLElement_Attribute::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.HTMLElement.Attribute.value)
}
inline void HTMLElement_Attribute::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.HTMLElement.Attribute.value)
}
inline ::std::string* HTMLElement_Attribute::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:safe_browsing.HTMLElement.Attribute.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HTMLElement_Attribute::release_value() {
  // @@protoc_insertion_point(field_release:safe_browsing.HTMLElement.Attribute.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HTMLElement_Attribute::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.HTMLElement.Attribute.value)
}

// -------------------------------------------------------------------

// HTMLElement

// optional int32 id = 1;
inline bool HTMLElement::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HTMLElement::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HTMLElement::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HTMLElement::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 HTMLElement::id() const {
  // @@protoc_insertion_point(field_get:safe_browsing.HTMLElement.id)
  return id_;
}
inline void HTMLElement::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.HTMLElement.id)
}

// optional string tag = 2;
inline bool HTMLElement::has_tag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HTMLElement::set_has_tag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HTMLElement::clear_has_tag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HTMLElement::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag();
}
inline const ::std::string& HTMLElement::tag() const {
  // @@protoc_insertion_point(field_get:safe_browsing.HTMLElement.tag)
  return tag_.GetNoArena();
}
inline void HTMLElement::set_tag(const ::std::string& value) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.HTMLElement.tag)
}
#if LANG_CXX11
inline void HTMLElement::set_tag(::std::string&& value) {
  set_has_tag();
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.HTMLElement.tag)
}
#endif
inline void HTMLElement::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.HTMLElement.tag)
}
inline void HTMLElement::set_tag(const char* value, size_t size) {
  set_has_tag();
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.HTMLElement.tag)
}
inline ::std::string* HTMLElement::mutable_tag() {
  set_has_tag();
  // @@protoc_insertion_point(field_mutable:safe_browsing.HTMLElement.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HTMLElement::release_tag() {
  // @@protoc_insertion_point(field_release:safe_browsing.HTMLElement.tag)
  clear_has_tag();
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HTMLElement::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    set_has_tag();
  } else {
    clear_has_tag();
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.HTMLElement.tag)
}

// repeated int32 child_ids = 3;
inline int HTMLElement::child_ids_size() const {
  return child_ids_.size();
}
inline void HTMLElement::clear_child_ids() {
  child_ids_.Clear();
}
inline ::google::protobuf::int32 HTMLElement::child_ids(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.HTMLElement.child_ids)
  return child_ids_.Get(index);
}
inline void HTMLElement::set_child_ids(int index, ::google::protobuf::int32 value) {
  child_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:safe_browsing.HTMLElement.child_ids)
}
inline void HTMLElement::add_child_ids(::google::protobuf::int32 value) {
  child_ids_.Add(value);
  // @@protoc_insertion_point(field_add:safe_browsing.HTMLElement.child_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HTMLElement::child_ids() const {
  // @@protoc_insertion_point(field_list:safe_browsing.HTMLElement.child_ids)
  return child_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HTMLElement::mutable_child_ids() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.HTMLElement.child_ids)
  return &child_ids_;
}

// optional int32 resource_id = 5;
inline bool HTMLElement::has_resource_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HTMLElement::set_has_resource_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HTMLElement::clear_has_resource_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HTMLElement::clear_resource_id() {
  resource_id_ = 0;
  clear_has_resource_id();
}
inline ::google::protobuf::int32 HTMLElement::resource_id() const {
  // @@protoc_insertion_point(field_get:safe_browsing.HTMLElement.resource_id)
  return resource_id_;
}
inline void HTMLElement::set_resource_id(::google::protobuf::int32 value) {
  set_has_resource_id();
  resource_id_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.HTMLElement.resource_id)
}

// repeated .safe_browsing.HTMLElement.Attribute attribute = 6;
inline int HTMLElement::attribute_size() const {
  return attribute_.size();
}
inline void HTMLElement::clear_attribute() {
  attribute_.Clear();
}
inline const ::safe_browsing::HTMLElement_Attribute& HTMLElement::attribute(int index) const {
  // @@protoc_insertion_point(field_get:safe_browsing.HTMLElement.attribute)
  return attribute_.Get(index);
}
inline ::safe_browsing::HTMLElement_Attribute* HTMLElement::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:safe_browsing.HTMLElement.attribute)
  return attribute_.Mutable(index);
}
inline ::safe_browsing::HTMLElement_Attribute* HTMLElement::add_attribute() {
  // @@protoc_insertion_point(field_add:safe_browsing.HTMLElement.attribute)
  return attribute_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::safe_browsing::HTMLElement_Attribute >*
HTMLElement::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:safe_browsing.HTMLElement.attribute)
  return &attribute_;
}
inline const ::google::protobuf::RepeatedPtrField< ::safe_browsing::HTMLElement_Attribute >&
HTMLElement::attribute() const {
  // @@protoc_insertion_point(field_list:safe_browsing.HTMLElement.attribute)
  return attribute_;
}

// -------------------------------------------------------------------

// ImageData_Dimensions

// optional int32 width = 1;
inline bool ImageData_Dimensions::has_width() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageData_Dimensions::set_has_width() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageData_Dimensions::clear_has_width() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageData_Dimensions::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 ImageData_Dimensions::width() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ImageData.Dimensions.width)
  return width_;
}
inline void ImageData_Dimensions::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ImageData.Dimensions.width)
}

// optional int32 height = 2;
inline bool ImageData_Dimensions::has_height() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageData_Dimensions::set_has_height() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImageData_Dimensions::clear_has_height() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImageData_Dimensions::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 ImageData_Dimensions::height() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ImageData.Dimensions.height)
  return height_;
}
inline void ImageData_Dimensions::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:safe_browsing.ImageData.Dimensions.height)
}

// -------------------------------------------------------------------

// ImageData

// optional bytes data = 1;
inline bool ImageData::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ImageData::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ImageData::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ImageData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& ImageData::data() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ImageData.data)
  return data_.GetNoArena();
}
inline void ImageData::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ImageData.data)
}
#if LANG_CXX11
inline void ImageData::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ImageData.data)
}
#endif
inline void ImageData::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ImageData.data)
}
inline void ImageData::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ImageData.data)
}
inline ::std::string* ImageData::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ImageData.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImageData::release_data() {
  // @@protoc_insertion_point(field_release:safe_browsing.ImageData.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageData::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ImageData.data)
}

// optional string mime_type = 2;
inline bool ImageData::has_mime_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ImageData::set_has_mime_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ImageData::clear_has_mime_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ImageData::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mime_type();
}
inline const ::std::string& ImageData::mime_type() const {
  // @@protoc_insertion_point(field_get:safe_browsing.ImageData.mime_type)
  return mime_type_.GetNoArena();
}
inline void ImageData::set_mime_type(const ::std::string& value) {
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.ImageData.mime_type)
}
#if LANG_CXX11
inline void ImageData::set_mime_type(::std::string&& value) {
  set_has_mime_type();
  mime_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.ImageData.mime_type)
}
#endif
inline void ImageData::set_mime_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.ImageData.mime_type)
}
inline void ImageData::set_mime_type(const char* value, size_t size) {
  set_has_mime_type();
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.ImageData.mime_type)
}
inline ::std::string* ImageData::mutable_mime_type() {
  set_has_mime_type();
  // @@protoc_insertion_point(field_mutable:safe_browsing.ImageData.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ImageData::release_mime_type() {
  // @@protoc_insertion_point(field_release:safe_browsing.ImageData.mime_type)
  clear_has_mime_type();
  return mime_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ImageData::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    set_has_mime_type();
  } else {
    clear_has_mime_type();
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ImageData.mime_type)
}

// optional .safe_browsing.ImageData.Dimensions dimensions = 3;
inline bool ImageData::has_dimensions() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ImageData::set_has_dimensions() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ImageData::clear_has_dimensions() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ImageData::clear_dimensions() {
  if (dimensions_ != NULL) dimensions_->::safe_browsing::ImageData_Dimensions::Clear();
  clear_has_dimensions();
}
inline const ::safe_browsing::ImageData_Dimensions& ImageData::dimensions() const {
  const ::safe_browsing::ImageData_Dimensions* p = dimensions_;
  // @@protoc_insertion_point(field_get:safe_browsing.ImageData.dimensions)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ImageData_Dimensions*>(
      &::safe_browsing::_ImageData_Dimensions_default_instance_);
}
inline ::safe_browsing::ImageData_Dimensions* ImageData::mutable_dimensions() {
  set_has_dimensions();
  if (dimensions_ == NULL) {
    dimensions_ = new ::safe_browsing::ImageData_Dimensions;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ImageData.dimensions)
  return dimensions_;
}
inline ::safe_browsing::ImageData_Dimensions* ImageData::release_dimensions() {
  // @@protoc_insertion_point(field_release:safe_browsing.ImageData.dimensions)
  clear_has_dimensions();
  ::safe_browsing::ImageData_Dimensions* temp = dimensions_;
  dimensions_ = NULL;
  return temp;
}
inline void ImageData::set_allocated_dimensions(::safe_browsing::ImageData_Dimensions* dimensions) {
  delete dimensions_;
  dimensions_ = dimensions;
  if (dimensions) {
    set_has_dimensions();
  } else {
    clear_has_dimensions();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ImageData.dimensions)
}

// optional .safe_browsing.ImageData.Dimensions original_dimensions = 4;
inline bool ImageData::has_original_dimensions() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ImageData::set_has_original_dimensions() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ImageData::clear_has_original_dimensions() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ImageData::clear_original_dimensions() {
  if (original_dimensions_ != NULL) original_dimensions_->::safe_browsing::ImageData_Dimensions::Clear();
  clear_has_original_dimensions();
}
inline const ::safe_browsing::ImageData_Dimensions& ImageData::original_dimensions() const {
  const ::safe_browsing::ImageData_Dimensions* p = original_dimensions_;
  // @@protoc_insertion_point(field_get:safe_browsing.ImageData.original_dimensions)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ImageData_Dimensions*>(
      &::safe_browsing::_ImageData_Dimensions_default_instance_);
}
inline ::safe_browsing::ImageData_Dimensions* ImageData::mutable_original_dimensions() {
  set_has_original_dimensions();
  if (original_dimensions_ == NULL) {
    original_dimensions_ = new ::safe_browsing::ImageData_Dimensions;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.ImageData.original_dimensions)
  return original_dimensions_;
}
inline ::safe_browsing::ImageData_Dimensions* ImageData::release_original_dimensions() {
  // @@protoc_insertion_point(field_release:safe_browsing.ImageData.original_dimensions)
  clear_has_original_dimensions();
  ::safe_browsing::ImageData_Dimensions* temp = original_dimensions_;
  original_dimensions_ = NULL;
  return temp;
}
inline void ImageData::set_allocated_original_dimensions(::safe_browsing::ImageData_Dimensions* original_dimensions) {
  delete original_dimensions_;
  original_dimensions_ = original_dimensions;
  if (original_dimensions) {
    set_has_original_dimensions();
  } else {
    clear_has_original_dimensions();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.ImageData.original_dimensions)
}

// -------------------------------------------------------------------

// NotificationImageReportRequest

// optional string notification_origin = 1;
inline bool NotificationImageReportRequest::has_notification_origin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotificationImageReportRequest::set_has_notification_origin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotificationImageReportRequest::clear_has_notification_origin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotificationImageReportRequest::clear_notification_origin() {
  notification_origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_notification_origin();
}
inline const ::std::string& NotificationImageReportRequest::notification_origin() const {
  // @@protoc_insertion_point(field_get:safe_browsing.NotificationImageReportRequest.notification_origin)
  return notification_origin_.GetNoArena();
}
inline void NotificationImageReportRequest::set_notification_origin(const ::std::string& value) {
  set_has_notification_origin();
  notification_origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:safe_browsing.NotificationImageReportRequest.notification_origin)
}
#if LANG_CXX11
inline void NotificationImageReportRequest::set_notification_origin(::std::string&& value) {
  set_has_notification_origin();
  notification_origin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:safe_browsing.NotificationImageReportRequest.notification_origin)
}
#endif
inline void NotificationImageReportRequest::set_notification_origin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_notification_origin();
  notification_origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:safe_browsing.NotificationImageReportRequest.notification_origin)
}
inline void NotificationImageReportRequest::set_notification_origin(const char* value, size_t size) {
  set_has_notification_origin();
  notification_origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:safe_browsing.NotificationImageReportRequest.notification_origin)
}
inline ::std::string* NotificationImageReportRequest::mutable_notification_origin() {
  set_has_notification_origin();
  // @@protoc_insertion_point(field_mutable:safe_browsing.NotificationImageReportRequest.notification_origin)
  return notification_origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotificationImageReportRequest::release_notification_origin() {
  // @@protoc_insertion_point(field_release:safe_browsing.NotificationImageReportRequest.notification_origin)
  clear_has_notification_origin();
  return notification_origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotificationImageReportRequest::set_allocated_notification_origin(::std::string* notification_origin) {
  if (notification_origin != NULL) {
    set_has_notification_origin();
  } else {
    clear_has_notification_origin();
  }
  notification_origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), notification_origin);
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.NotificationImageReportRequest.notification_origin)
}

// optional .safe_browsing.ImageData image = 2;
inline bool NotificationImageReportRequest::has_image() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotificationImageReportRequest::set_has_image() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotificationImageReportRequest::clear_has_image() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotificationImageReportRequest::clear_image() {
  if (image_ != NULL) image_->::safe_browsing::ImageData::Clear();
  clear_has_image();
}
inline const ::safe_browsing::ImageData& NotificationImageReportRequest::image() const {
  const ::safe_browsing::ImageData* p = image_;
  // @@protoc_insertion_point(field_get:safe_browsing.NotificationImageReportRequest.image)
  return p != NULL ? *p : *reinterpret_cast<const ::safe_browsing::ImageData*>(
      &::safe_browsing::_ImageData_default_instance_);
}
inline ::safe_browsing::ImageData* NotificationImageReportRequest::mutable_image() {
  set_has_image();
  if (image_ == NULL) {
    image_ = new ::safe_browsing::ImageData;
  }
  // @@protoc_insertion_point(field_mutable:safe_browsing.NotificationImageReportRequest.image)
  return image_;
}
inline ::safe_browsing::ImageData* NotificationImageReportRequest::release_image() {
  // @@protoc_insertion_point(field_release:safe_browsing.NotificationImageReportRequest.image)
  clear_has_image();
  ::safe_browsing::ImageData* temp = image_;
  image_ = NULL;
  return temp;
}
inline void NotificationImageReportRequest::set_allocated_image(::safe_browsing::ImageData* image) {
  delete image_;
  image_ = image;
  if (image) {
    set_has_image();
  } else {
    clear_has_image();
  }
  // @@protoc_insertion_point(field_set_allocated:safe_browsing.NotificationImageReportRequest.image)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace safe_browsing

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::safe_browsing::ChromeUserPopulation_UserPopulation> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::LoginReputationClientRequest_PasswordReuseEvent_SyncAccountType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::LoginReputationClientRequest_TriggerType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::LoginReputationClientResponse_VerdictType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientDownloadRequest_ResourceType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientDownloadRequest_DownloadType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ReferrerChainEntry_URLType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientDownloadResponse_Verdict> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientDownloadReport_Reason> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientUploadResponse_UploadStatus> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientIncidentReport_IncidentData_TrackedPreferenceIncident_ValueState> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientIncidentReport_IncidentData_ResourceRequestIncident_Type> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Dll_Feature> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_ModuleState_ModifiedState> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientIncidentReport_EnvironmentData_Process_Channel> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientIncidentReport_ExtensionData_ExtensionInfo_ExtensionState> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientSafeBrowsingReportRequest_ReportType> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::safe_browsing::ClientSafeBrowsingReportRequest_SafeBrowsingUrlApiType> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_csd_2eproto__INCLUDED
