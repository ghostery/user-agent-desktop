[brand-checks.any.worker.html]
  [ReadableStreamAsyncIteratorPrototype.return enforces a brand check]
    expected: FAIL

  [ReadableStreamAsyncIteratorPrototype.next enforces a brand check]
    expected: FAIL

  [Can get ReadableStreamAsyncIteratorPrototype object indirectly]
    expected: FAIL

  [ReadableStream.prototype.getIterator enforces a brand check]
    expected: FAIL


[brand-checks.any.serviceworker.html]
  [ReadableStreamAsyncIteratorPrototype.return enforces a brand check]
    expected: FAIL

  [ReadableStreamAsyncIteratorPrototype.next enforces a brand check]
    expected: FAIL

  [Can get ReadableStreamAsyncIteratorPrototype object indirectly]
    expected: FAIL

  [ReadableStream.prototype.getIterator enforces a brand check]
    expected: FAIL


[brand-checks.any.html]
  [ReadableStreamAsyncIteratorPrototype.return enforces a brand check]
    expected: FAIL

  [ReadableStreamAsyncIteratorPrototype.next enforces a brand check]
    expected: FAIL

  [Can get ReadableStreamAsyncIteratorPrototype object indirectly]
    expected: FAIL

  [ReadableStream.prototype.getIterator enforces a brand check]
    expected: FAIL


[brand-checks.any.sharedworker.html]
  [ReadableStreamAsyncIteratorPrototype.return enforces a brand check]
    expected: FAIL

  [ReadableStreamAsyncIteratorPrototype.next enforces a brand check]
    expected: FAIL

  [Can get ReadableStreamAsyncIteratorPrototype object indirectly]
    expected: FAIL

  [ReadableStream.prototype.getIterator enforces a brand check]
    expected: FAIL


[brand-checks.any.js]
  [ReadableStreamAsyncIteratorPrototype.return enforces a brand check]
    expected: FAIL

  [ReadableStreamAsyncIteratorPrototype.next enforces a brand check]
    expected: FAIL

  [Can get ReadableStreamAsyncIteratorPrototype object indirectly]
    expected: FAIL

  [ReadableStream.prototype.getIterator enforces a brand check]
    expected: FAIL

